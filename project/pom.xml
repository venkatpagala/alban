<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

        <parent>
	    <groupId>com.nabla.project</groupId>
	    <artifactId>dependencies</artifactId>
	    <version>1.0</version>
	    <relativePath>../env/pom.xml</relativePath>
        </parent>
  
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.nabla.project</groupId>
	<artifactId>project</artifactId>
	<name>Project</name>
	<version>1.0</version>
	<packaging>pom</packaging>
	
	<description>Proof of concept : SOA framework for generic services</description>

	<modules>
	        <!--<module>env</module>-->
		<module>build-tools</module>
		<module>sample</module>
	</modules>
			
	<!-- ================= Default Properties ================= -->
	<properties>
		<andromda.version>3.4-SNAPSHOT</andromda.version>
		<source.version>${jdkLevel}</source.version>
		<compiler.fork>false</compiler.fork>

		<downloadSources>true</downloadSources>
		<createChecksum>true</createChecksum>
		<uniqueVersion>false</uniqueVersion>

		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>

		<target.dir>target</target.dir>
		<!--
			specifies the path to the current JRE_HOME environment use with
			relative paths to get <jvm>${java.home}../bin/java.exe</jvm>
		-->
		<java.home>${env.JAVA_HOME}</java.home>
		
		<!-- Application settings -->
		<application.id>application</application.id> <!-- used by MDA -->
		<application.name>Nabla</application.name>
		<application.version>1.0</application.version>
		<application.package>com.nabla.backend</application.package> <!-- used by MDA -->
		<application.context.name>applicationContext-daos.xml</application.context.name>
		
		<product.id>nabla</product.id>
		<product.name>nabla</product.name>		
		<product.title>${product.name} Application</product.title>
		<product.major.version>${env.VERSION}</product.major.version>

		<product.sourceDirectory>${home.dir}/${product.name}</product.sourceDirectory>
		
		<product.branch.version>1.0</product.branch.version>
		<product.status.number>1</product.status.number>
		<product.load.number>01</product.load.number>
		<product.patch.number>000</product.patch.number>
		<product.patch.version>${product.major.version}.${product.status.number}.${product.load.number}${product.patch.number}</product.patch.version>
		<product.dependencies>${product.name} ${kplus.patch.version}</product.dependencies>		
		<product.push.number>01</product.push.number>
		<product.push.version>${product.patch.version}.${product.push.number}</product.push.version>
		<product.version>${product.major.version}${product.push.version}</product.version>

		<product.username>${env.UNIX_USERNAME}</product.username>

		<product.workspace>${product.username}${product.major.version}</product.workspace>
		<product.thirdparty>${env.THIRDPARTY_ROOT}</product.thirdparty> <!-- used for dtd in mda -->
		
		<!-- START overrided in cargo profile -->
		<!-- START INFO USE BY MDA -->
		<server.home>${jboss.home}</server.home>
		<server.name>${product.name}</server.name>
		<server.port>8180</server.port>
		<dataSource.name>jdbc/${application.id}</dataSource.name>
		<dataSource>java:/${dataSource.name}</dataSource>
		<webservice.host>localhost</webservice.host>
		<webservice.port>8180</webservice.port>
		<!-- END INFO USE BY MDA -->
		<cargo.container>jboss4x</cargo.container>
		<cargo.container.home>${env.JBOSS_HOME}</cargo.container.home>
		<cargo.container.url>http://easynews.dl.sourceforge.net/sourceforge/jboss/jboss-${jboss.version}.zip</cargo.container.url>
		<cargo.host>localhost</cargo.host>
		<cargo.port>8180</cargo.port>
		<cargo.wait>false</cargo.wait>
		<!-- END overrided in cargo profile -->

		<!-- START overrided in uml profile -->
		<!--
		<uml.type>uml14</uml.type>
		<repo.type>netBeansMDR</repo.type>
		<profile.type>xml.zip</profile.type>
		<model.uri>jar:file:${src.dir}/main/uml/${uml.type}/${model.name}.xml.zip!/${model.name}.xml</model.uri>
		-->
		<!-- END overrided in uml profile -->

		<!-- START overrided in Database profile -->
		<database>oracle</database>
		<database.name>ktp30b</database.name>
		<!-- Database settings -->
		<dbunit.dataTypeFactoryName>org.dbunit.ext.oracle.OracleDataTypeFactory</dbunit.dataTypeFactoryName>
		<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
		<dbunit.schema>KTP30B</dbunit.schema>
		<!-- Make sure to capitalize the schema name -->
		<sql.mappings>Oracle9i</sql.mappings>
		<jdbc.exception.sorter>org.hibernate.dialect.Oracle10gDialect</jdbc.exception.sorter>
		<hibernate.dialect>org.hibernate.dialect.Oracle10gDialect</hibernate.dialect>
		<jdbc.groupId>com.oracle</jdbc.groupId>
		<jdbc.artifactId>ojdbc14</jdbc.artifactId>
		<jdbc.client.artifactId>ojdbc14</jdbc.client.artifactId>
		<jdbc.version>10.2.0.2.0</jdbc.version>
		<jdbc.driver.jar>${jboss.home}/server/default/lib/${jdbc.client.artifactId}.jar</jdbc.driver.jar>
		<jdbc.driverClassName>oracle.jdbc.OracleDriver</jdbc.driverClassName>

		<database.host>localhost</database.host>
		<database.port>1521</database.port>
		<jdbc.url><![CDATA[jdbc:oracle:thin:@${database.host}:${database.port}:xe]]></jdbc.url>
		<jdbc.username>ktp30b</jdbc.username>
		<jdbc.password>ktp30b</jdbc.password>
		<!-- END overrided in Database profile -->

		<mda.username>${product.username}</mda.username>
		<mda.workspace>${mda.username}${product.major.version}</mda.workspace>

		<unpack>false</unpack>
		<lumbermill.port>4445</lumbermill.port>
		<hudson.lumbermill.port>4431</hudson.lumbermill.port>
		<glassfish.port>8090</glassfish.port><!-- 4848 -->
		<oracle.port>8080</oracle.port>
		<archiva.port>8010</archiva.port>
		<continuum.port>8020</continuum.port>
		<sonar.port>9000</sonar.port>
		<sonar.derby.port>1527</sonar.derby.port>
		<fitness.port>9090</fitness.port>
		<bugzilla.mysql.port>3306</bugzilla.mysql.port>

		<apache-continuum.version>1.2.3</apache-continuum.version>

		<home.dir>${env.HOME}</home.dir>
		<!-- <home.dir>${env.WORKSPACE}</home.dir> -->		
		<project.target>C:\target</project.target>
		<project.includeidl>${project.target}</project.includeidl>
		<project.includexml>${project.target}</project.includexml>
		<project.includedictionaries>${project.target}</project.includedictionaries>
		<maven.build.generated>src/generated</maven.build.generated>
		<maven.build.src>${pom.basedir}/${maven.build.generated}</maven.build.src>
	</properties>
	<!--
		La balise dependencyManagement, dans le POM du projet parent permet de
		declarer une version et un scope pour une dependance. Si un des
		modules enfants utilise cette dependance, sans preciser de version ou
		de scope, celle dans le dependencyManagement sera utilise
	-->
	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
				<scope>provided</scope>
			</dependency>
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${jmock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>httpunit</groupId>
				<artifactId>httpunit</artifactId>
				<version>${httpunit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junitperf</groupId>
				<artifactId>junitperf</artifactId>
				<version>${junitperf.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>xmlunit</groupId>
				<artifactId>xmlunit</artifactId>
				<version>${xmlunit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.dbunit</groupId>
				<artifactId>dbunit</artifactId>
				<version>${dbunit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock</artifactId>
				<version>${jmock.version}</version>
				<scope>test</scope>
			</dependency>
		        <dependency>
		        	<groupId>org.mockito</groupId>
		        	<artifactId>mockito-all</artifactId>
		        	<version>${mockito.version}</version>
		        	<scope>test</scope>
		        </dependency>			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-mock</artifactId>
				<version>${spring.mock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${testng.version}</version>
				<classifier>jdk15</classifier>
			</dependency>

			<dependency>
				<groupId>wsdl4j</groupId>
				<artifactId>wsdl4j</artifactId>
				<version>${wsdl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${javax.mail.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.axis2</groupId>
				<artifactId>axis2</artifactId>
				<version>${axis2.version}</version>
			</dependency>
			<dependency>
				<groupId>annogen</groupId>
				<artifactId>annogen</artifactId>
				<version>${annogen.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.axiom</groupId>
				<artifactId>axiom-api</artifactId>
				<version>${axiom.api.version}</version>
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.axiom</groupId>
				<artifactId>axiom-impl</artifactId>
				<version>${axiom.impl.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.axiom</groupId>
				<artifactId>axiom-dom</artifactId>
				<version>${axiom.dom.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring</artifactId>
				<version>${spring.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.lowagie</groupId>
				<artifactId>itext</artifactId>
				<version>${itext.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>oro</groupId>
				<artifactId>oro</artifactId>
				<version>${oro.version}</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>httpcomponents-httpcore</groupId>
				<artifactId>jakarta-httpcore</artifactId>
				<version>${jakarta.httpcore.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jms_1.1_spec</artifactId>
				<version>${geronimo.jms.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.neethi</groupId>
				<artifactId>neethi</artifactId>
				<version>${neethi.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<exclusion>
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>stax</groupId>
				<artifactId>stax-api</artifactId>
				<version>${stax.api.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.woden</groupId>
				<artifactId>woden-impl-om</artifactId>
				<version>${woden.impl.om.version}</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>struts</groupId>
				<artifactId>struts</artifactId>
				<version>${struts.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-chain</groupId>
						<artifactId>commons-chain</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-digester</groupId>
						<artifactId>commons-digester</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xalan</groupId>
						<artifactId>xalan</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>struts-menu</groupId>
				<artifactId>struts-menu</artifactId>
				<version>${struts.menu.version}</version>
			</dependency>

			<dependency>
				<groupId>displaytag</groupId>
				<artifactId>displaytag</artifactId>
				<version>${displaytag.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<exclusion>
						<groupId>taglibs</groupId>
						<artifactId>standard</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>${javax.activation.version}</version>
			</dependency>


			<dependency>
				<groupId>commons-validator</groupId>
				<artifactId>commons-validator</artifactId>
				<version>${commons.validator.version}</version>
			</dependency>

			<dependency>
				<groupId>backport-util-concurrent</groupId>
				<artifactId>backport-util-concurrent</artifactId>
				<version>${backport.util.concurrent.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${commons.httpclient.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons.lang.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons.beanutils.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons.collections.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${commons.configuration.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons.logging.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons.codec.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>commons-discovery</groupId>
				<artifactId>commons-discovery</artifactId>
				<version>${commons.discovery.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons.fileupload.version}</version>
				<scope>compile</scope>
			</dependency>
			<!--
				Maven2, Spring 2.0 and JPA using Xerces 2.0.2 has some bug and
				maven2 comes with it. Instead you need to use Xerces 2.8.1
			-->
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${xerces.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>xalan</groupId>
				<artifactId>xalan</artifactId>
				<version>${xalan.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>commons-digester</groupId>
				<artifactId>commons-digester</artifactId>
				<version>${commons.digester.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.antlr</groupId>
				<artifactId>antlr</artifactId>
				<version>${antlr.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>${commons.dbcp.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>${commons.pool.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>com.nabla.project</groupId>
				<artifactId>maven-gui-plugin</artifactId>
				<version>${maven.gui.plugin.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<version>${lucene.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-analyzers</artifactId>
				<version>${lucene.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-queries</artifactId>
				<version>${lucene.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-highlighter</artifactId>
				<version>${lucene.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-snowball</artifactId>
				<version>${lucene.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-similarity</artifactId>
				<version>${lucene.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>com.tibco.jms</groupId>
				<artifactId>tibjms</artifactId>
				<version>${tibjms.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.tibco</groupId>
				<artifactId>tibrv</artifactId>
				<version>${tibco.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
				<version>${xml.apis.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>com.google.api.client</groupId>
				<artifactId>google-api-client</artifactId>
				<version>${google.api.client}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-plugin-api</artifactId>
				<version>${maven.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-utils</artifactId>
				<version>${plexus.util.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-container-default</artifactId>
				<version>${plexus.container.default.version}</version>
			</dependency>

			<!-- DATABASE DRIVER -->
			<dependency>
				<groupId>${jdbc.groupId}</groupId>
				<artifactId>${jdbc.artifactId}</artifactId>
				<version>${jdbc.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<!--
		In order for you to see what happens during the inheritance process
		you will need to use the handy mvn help:effective-pom command.
	-->
	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junitperf</groupId>
			<artifactId>junitperf</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Command lines parsing -->
		<!-- ONLY FOR BATCH
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>${commons.cli.version}</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		-->

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons.logging.version}</version>
			<scope>compile</scope>
		</dependency>				
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons.lang.version}</version>
			<scope>compile</scope>
		</dependency>		
		<!--
			For J2EE <dependency> <groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-j2ee_1.4_spec</artifactId>
			<version>${geronimo.version}</version> <scope>provided</scope>
			</dependency> INSTEAD GERONIMO use
		-->
                		
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>${xerces.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>${xalan.version}</version>
			<scope>provided</scope>
		</dependency>	

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.version}</version>
			<scope>provided</scope>
		</dependency>			
		<!--
			<dependency> <groupId>org.openqa.selenium.client-drivers</groupId>
			<artifactId>selenium-java-client-driver</artifactId>
			<version>${selenium.version}</version> <scope>test</scope>
			</dependency> <dependency>
			<groupId>org.openqa.selenium.server</groupId>
			<artifactId>selenium-server</artifactId>
			<version>${selenium.version}</version> </dependency>
		-->
	</dependencies>

	<build>
		<directory>target</directory>
		<!--
			<finalName>${project.artifactId}-${project.version}-r${buildNumber}</finalName>
		-->
		<finalName>${project.artifactId}-${project.version}</finalName>
		<sourceDirectory>${basedir}/src/main/java</sourceDirectory>
		<scriptSourceDirectory>${basedir}/src/main/scripts</scriptSourceDirectory>
		<testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>
		<outputDirectory>${basedir}/${target.dir}/classes</outputDirectory>
		<testOutputDirectory>${basedir}/${target.dir}/test-classes</testOutputDirectory>
		<defaultGoal>install</defaultGoal>

		<extensions>
			<!--
				Needed for dashboard-maven-plugin and jalopy-maven-plugin and
				maven-checkstyle-plugin
			-->
			<extension>
				<groupId>com.nabla.project.build-tools</groupId>
				<artifactId>build-tools</artifactId>
				<version>1.0</version>
			</extension>
		</extensions>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven.eclipse.plugin.version}</version>
					<configuration>
						<projectNameTemplate>[artifactId]-[version]</projectNameTemplate>
						<wtpmanifest>true</wtpmanifest>
						<wtpapplicationxml>true</wtpapplicationxml>
						<wtpversion>2.0</wtpversion>
						<ajdtVersion>1.5</ajdtVersion>
						<sourceExcludes>
							<sourceExclude>**/.svn/**</sourceExclude>
						</sourceExcludes>
						<manifest>${basedir}/src/main/resources/META-INF/MANIFEST.MF</manifest>
						<useProjectReferences>true</useProjectReferences>
						<!--  by default download all sources when generating project files -->
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
						<buildOutputDirectory>target/classes</buildOutputDirectory>
						<addVersionToProjectName>true</addVersionToProjectName>
						<outputDirectory>${basedir}/classes</outputDirectory>
						<additionalProjectnatures>
							<!--
								<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
								<projectnature>org.hibernate.eclipse.console.hibernateNature</projectnature>
								<projectnature>org.eclipse.jem.workbench.JavaEMFNature</projectnature>
							-->
							<!--
								<projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
								<projectnature>org.eclipse.jdt.core.javanature</projectnature>
								<projectnature>org.eclipse.wst.common.modulecore.ModuleCoreNature</projectnature>
								<projectnature>org.eclipse.jem.workbench.JavaEMFNature</projectnature>
								<projectnature>com.atlassw.tools.eclipse.checkstyle.CheckstyleNature</projectnature>
							-->
							<projectnature>org.maven.ide.eclipse.maven2Nature</projectnature>
						</additionalProjectnatures>
						<additionalBuildcommands>
							<!--
								<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
							-->
							<!--
								<buildcommand>org.eclipse.jdt.core.javabuilder</buildcommand>
								<buildcommand>org.eclipse.wst.common.project.facet.core.builder</buildcommand>
								<buildcommand>org.eclipse.wst.validation.validationbuilder</buildcommand>
								<buildcommand>com.atlassw.tools.eclipse.checkstyle.CheckstyleBuilder</buildcommand>
							-->
							<buildcommand>org.maven.ide.eclipse.maven2Builder</buildcommand>
						</additionalBuildcommands>
						<additionalConfig>
							<file>
								<name>.checkstyle</name>
								<location>${home.dir}/build-tools/src/main/resources/project/checkstyle_regles_nabla_eclipse.xml</location>
							</file>
						</additionalConfig>
						<!--
							<additionalProjectFacets> <jst.jsf>1.1</jst.jsf>
							<jst.ejb.xdoclet>1.2.3</jst.ejb.xdoclet>
							<jst.web.xdoclet>1.2.3</jst.web.xdoclet>
							</additionalProjectFacets> <workspace>${basedir}</workspace>
						-->
						<workspaceCodeStylesURL>http://svn.apache.org/repos/asf/maven/plugins/trunk/maven-eclipse-plugin/src/optional/eclipse-config/maven-styles.xml</workspaceCodeStylesURL>
						<sourceExcludes>
							<sourceExclude>**/.svn/**</sourceExclude>
							<sourceExclude>**/.ref</sourceExclude>
							<sourceExclude>**/.exc</sourceExclude>
							<sourceExclude>**/.log</sourceExclude>
						</sourceExcludes>
					</configuration>
					<dependencies>
						<!-- The file defined in the location is stored in this dependency -->
						<dependency>
							<groupId>com.nabla.project.build-tools</groupId>
							<artifactId>build-tools</artifactId>
							<version>1.0</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-idea-plugin</artifactId>
					<version>${maven.idea.plugin.version}</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
						<dependenciesAsLibraries>true</dependenciesAsLibraries>
						<jdkName>${jdkLevel}</jdkName>
						<useFullNames>false</useFullNames>
					</configuration>
				</plugin>

				<!--
					<plugin> <groupId>org.codehaus.mojo</groupId>
					<artifactId>aspectj-maven-plugin</artifactId>
					<version>1.2</version> <configuration> <source>${jdkLevel}</source>
					<verbose>true</verbose>
					<complianceLevel>${jdkLevel}</complianceLevel>
					<showWeaveInfo>true</showWeaveInfo> <aspectLibraries>
					<aspectLibrary> <groupId>org.springframework</groupId>
					<artifactId>spring-aspects</artifactId> </aspectLibrary>
					</aspectLibraries> </configuration> <executions> <execution>
					<goals> <goal>compile</goal>
				-->
				<!--
					use this goal to weave all your main classes
				-->
				<!-- <goal>test-compile</goal> -->
				<!--
					use this goal to weave all your test classes
				-->
				<!--
					</goals> </execution> </executions> <dependencies> <dependency>
					<groupId>org.aspectj</groupId> <artifactId>aspectjrt</artifactId>
					<version>${aspectj.version}</version> </dependency> <dependency>
					<groupId>org.aspectj</groupId>
					<artifactId>aspectjtools</artifactId>
					<version>${aspectj.version}</version> </dependency> </dependencies>
					</plugin>
				-->

				<!-- Web application server helpers -->
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${maven.cargo.maven2.plugin.version}</version>
					<configuration>
						<wait>${cargo.wait}</wait>
						<container>
							<containerId>${cargo.container}</containerId>
							<home>${cargo.container.home}</home>
							<zipUrlInstaller>
								<url>${cargo.container.url}</url>
								<installDir>${installDir}</installDir>
							</zipUrlInstaller>
						</container>
						<configuration>
							<home>${project.build.directory}/${cargo.container}/container</home>
							<properties>
								<cargo.hostname>${cargo.host}</cargo.hostname>
								<cargo.servlet.port>${cargo.port}</cargo.servlet.port>
							</properties>
						</configuration>
					</configuration>
					<executions>
						<execution>
							<id>start-container</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>stop-container</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>${maven.jetty.plugin.version}</version>
					<configuration>
						<contextPath>/</contextPath>
						<scanIntervalSeconds>3</scanIntervalSeconds>
						<scanTargetPatterns>
							<scanTargetPattern>
								<directory>src/main/webapp/WEB-INF</directory>
								<excludes>
									<exclude>**/*.jsp</exclude>
								</excludes>
								<includes>
									<include>**/*.properties</include>
									<include>**/*.xml</include>
								</includes>
							</scanTargetPattern>
						</scanTargetPatterns>
					</configuration>
				</plugin>
				<!-- end Web application server helpers -->


				<!-- Start tools -->

				<!--
					<plugin> <groupId>com.atlassian.maven.plugins</groupId>
					<artifactId>maven-upload-plugin</artifactId> <version>1.0</version>
					</plugin>
				-->
				<plugin>
					<groupId>com.agilejava.docbkx</groupId>
					<artifactId>docbkx-maven-plugin</artifactId>
					<version>${docbkx.maven.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>net.sf.docbook</groupId>
							<artifactId>docbook-xml</artifactId>
							<version>5.0</version>
							<type>pom</type>
							<scope>runtime</scope>
						</dependency>
						<dependency>
							<groupId>net.sf.docbook</groupId>
							<artifactId>docbook-xsl</artifactId>
							<version>1.74.0</version>
							<type>pom</type>
							<scope>runtime</scope>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jboss-packaging-maven-plugin</artifactId>
					<version>${maven.jboss.packaging.plugin.version}</version>
					<!-- Enable packaging types and lifecycle bindings. -->
					<extensions>true</extensions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jboss-maven-plugin</artifactId>
					<version>${maven.jboss.plugin.version}</version>
				</plugin>

				<!--
					<plugin> <groupId>org.codehaus.mojo</groupId>
					<artifactId>xml-maven-plugin</artifactId>
					<version>1.0-beta-3</version> <executions> <execution>
					<phase>pre-site</phase> <goals> <goal>transform</goal> </goals>
					</execution> </executions> </plugin>
				-->

				<!--
					NoClassDefFoundError running maven plugins site, always shows 0%
					coverage anyway
				-->


                                <!-- attach-javadocs -->
                                <!-- do not add maven-javadoc-plugin definition because attach-javadocs will not work properly -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.plugin.version}</version>
					<configuration>
						<show>package</show>
						<version>true</version>
						<javadocVersion>${source.version}</javadocVersion>
						<failOnError>false</failOnError>
						<linksource>true</linksource>
						<serialwarn>true</serialwarn>
						<detectLinks>false</detectLinks>
						<detectOfflineLinks>false</detectOfflineLinks>
						<!--
						<links>
							<link>http://download.oracle.com/javase/6/docs/api/</link>
							<link>http://download.oracle.com/javaee/1.4/api/</link>
							<link>http://download.eclipse.org/modeling/mdt/uml2/javadoc/3.1.0/</link>
							<link>http://download.eclipse.org/modeling/emf/emf/javadoc/2.6.0/</link>
							<link>http://jakarta.apache.org/commons/collections/apidocs</link>
							<link>http://jakarta.apache.org/commons/logging/apidocs/</link>
							<link>http://www.junit.org/junit/javadoc/</link>
							<link>http://logging.apache.org/log4j/docs/api/</link>
							<link>http://jakarta.apache.org/regexp/apidocs/</link>
							<link>http://velocity.apache.org/engine/devel/apidocs/</link>
						</links>
						-->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.andromda.maven.plugins</groupId>
					<artifactId>andromda-multi-source-plugin</artifactId>
					<version>${andromda.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sourceDirectories>
									<directory>${maven.build.src}/main/java</directory>
									<directory>${maven.build.src}/main/resources</directory>
									<directory>${maven.build.src}/main/dictionaries</directory>
									<directory>${maven.build.src}/main/xml</directory>
								</sourceDirectories>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.andromda.maven.plugins</groupId>
					<artifactId>andromda-maven-plugin</artifactId>
					<version>${andromda.version}</version>
				</plugin>
				<plugin>
					<groupId>org.andromda.maven.plugins</groupId>
					<artifactId>andromdapp-maven-plugin</artifactId>
					<version>${andromda.version}</version>
					<!--
						provides the injection of the script wrapper support into the
						class files (this should only be done when developing locally),
						uncomment this executions element to enable <executions>
						<execution> <id>instrument-scripts</id> <goals>
						<goal>instrument-scripts</goal> </goals> </execution>
						</executions>
					-->
					<configuration>
						<scriptWrapper>org.andromda.scriptwrappers.GroovyScriptWrapper</scriptWrapper>
						<locations>
							<location>
								<rootPath>${project.basedir}/src/main/java</rootPath>
								<!--
									adjust these to include or exclude specific files, by default
									all files found in the rootPath are considered <includes>
									<include>relative/path/to/file/to/include/SomeClass.java</include>
									</includes> <excludes>
									<exclude>relative/path/to/file/to/include/SomeClass.java</exclude>
									</excludes>
								-->
							</location>
						</locations>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<!--
			Other Good tool quality code for http://sonar.hortis.ch/installation/
		-->
		<!-- Plugin Configuration -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>

			<!--
				Below you find a plugin that performs formatting after each compile
				run finished successfully, disables logging of Javadoc related
				messages, only displays messages with warning severity or higher,
				activates the profile "test" during formatting and imports a code
				convention from a shared server. Formatting is applied to all Java
				source files of the project that are not located below the
				"testdata" folder.
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jalopy-maven-plugin</artifactId>
				<configuration>
					<!-- UNIX", "DOS", "MAC", "DEFAULT" or "AUTO -->
					<fileFormat>AUTO</fileFormat>
					<!--
						<convention>${home.dir}/build-tools/src/main/resources/project/jalopy_regles_nabla.xml</convention>
					-->
					<convention>project/jalopy_regles_nabla.xml</convention>
					<failOnError>false</failOnError>
					<excludes>
						<exclude>**/PortalAccessesManager.java</exclude>
						<exclude>**/BalanceComputing.java</exclude>
						<exclude>**/GramExpressionLexer.java</exclude>
						<exclude>**/SessionManager.java</exclude>
					</excludes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.nabla.project.build-tools</groupId>
						<artifactId>build-tools</artifactId>
						<version>1.0</version>
					</dependency>
				</dependencies>
				<!-- must exlud  -->
				<!--
					<executions> <execution> <phase>process-classes</phase> <goals>
					<goal>format</goal> </goals> </execution> </executions>
				-->
			</plugin>

			<!--  add repository revision to manifests -->
			<!--
				<plugin> <groupId>org.codehaus.mojo</groupId>
				<artifactId>maven-buildnumber-plugin</artifactId>
				<version>0.9.6</version> <executions> <execution>
				<phase>validate</phase> <goals> <goal>create</goal> </goals>
				</execution> </executions> <configuration>
			-->                                     <!--  never touch svn : do check = false -->
			<!--
				<doCheck>true</doCheck> <doUpdate>false</doUpdate> <format>
				{0,number}-{1,date,yyyy-MM-dd-HH-mm-ss} </format> <items>
				<item>buildNumber0</item> <item>timestamp</item> </items>
				</configuration> </plugin>
			-->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-doap-plugin</artifactId>
				<configuration>
					<linkXref>true</linkXref>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
					<category>build-management</category>
					<language>Intercal</language>
				</configuration>
			</plugin>
			<!--
				<plugin> <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-docck-plugin</artifactId> <executions> <execution>
				<configuration> <output>docck-results.txt</output> </configuration>
				<goals> <goal>check</goal> </goals> </execution> </executions>
				</plugin>
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<configuration>
					<goals>install</goals>
					<!--
						<username>username</username> <password>password</password>
					-->
					<startDate>YYYY-MM-DD</startDate>
					<endDate>YYYY-MM-DD</endDate>
					<startRevision>connection</startRevision>
					<endRevision>connection</endRevision>
					<tagName>tag</tagName>
				</configuration>
			</plugin>
			<!--
				<plugin> <groupId>com.agilejava.docbkx</groupId>
				<artifactId>docbkx-maven-plugin</artifactId> <configuration>
				<htmlStylesheet>rocks.css</htmlStylesheet>
				<chunkedOutput>false</chunkedOutput>
				<xincludeSupported>true</xincludeSupported>
				<doubleSided>true</doubleSided>
				<bodyFontFamily>Georgia</bodyFontFamily>
				<bodyFontSize>9</bodyFontSize>
				<monospaceFontFamily>Monaco</monospaceFontFamily>
				<sansFontFamily>Calibri</sansFontFamily>
				<titleFontFamily>Calibri</titleFontFamily> <entities> <entity>
				<name>version</name> <value>${project.version}</value> </entity>
				<entity> <name>thisyear</name> <value>2009</value> </entity>
				</entities> </configuration> <executions> <execution> <goals>
				<goal>generate-html</goal> <goal>generate-pdf</goal>
				<goal>generate-manpages</goal> <goal>generate-eclipse</goal>
				</goals> <phase>pre-site</phase>
			--><!--<phase>generate-sources</phase>-->
			<!--
				</execution> </executions> <dependencies> <dependency>
				<groupId>net.sf.docbook</groupId>
				<artifactId>docbook-xml</artifactId> <version>5.0</version>
				<type>pom</type> <scope>runtime</scope> </dependency> <dependency>
				<groupId>net.sf.docbook</groupId>
				<artifactId>docbook-xsl</artifactId> <version>1.74.0</version>
				<type>pom</type> <scope>runtime</scope> </dependency>
				</dependencies> </plugin>
			-->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!--
				<plugin> <groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId> </plugin>
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<!--
				too long so i desactivate it <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId> </plugin>
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${basedir}/src/generated/main/java</source>
								<source>${basedir}/src/generated/main/resources</source>
								<source>${basedir}/src/main/java</source>
								<source>${basedir}/src/main/resources</source>
								<source>${basedir}/target/generated-sources/antlr</source>
								<source>${basedir}/target/generated-sources/main/java</source>
								<!--<source>${basedir}/target/generated-sources/test/java</source>-->
								<source>${basedir}/target/generated-sources/main/resources</source>
								<!--
									<source>${basedir}/target/generated-sources/test/resources</source>
								-->
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--
				<plugin> <groupId>org.codehaus.mojo</groupId>
				<artifactId>jboss-packaging-maven-plugin</artifactId> <executions>
				<execution> <id>buildsar</id> <phase>deploy</phase> <goals>
				<goal>sar</goal> </goals> <configuration>
				<deploymentDescriptorFile>${pom.basedir}/xml/jboss-service.xml</deploymentDescriptorFile>
				</configuration> </execution> </executions> </plugin> <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId> <executions>
				<execution> <phase>pre-integration-test</phase> <goals>
				<goal>start-server</goal> </goals> <configuration>
				<background>true</background> </configuration> </execution>
				</executions> </plugin>
			-->

		</plugins>

	</build>

	<profiles>
		<profile>
			<id>default-tools.jar</id>
			<activation>
				<file>
					<exists>${java.home}/lib/tools.jar</exists>
				</file>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.sun</groupId>
					<artifactId>tools</artifactId>
					<version>1.5.0</version>
					<scope>system</scope>
					<systemPath>${java.home}/lib/tools.jar</systemPath>
					<!--
						<systemPath>C:\Program Files
						(x86)\Java\jdk1.5.0_22\lib\tools.jar</systemPath>
					-->
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>eclipse-folders</id>
			<properties>
				<target.dir>target-eclipse</target.dir>
			</properties>
		</profile>
		<profile>
			<id>site-light</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<invoker.skip>true</invoker.skip>
				<andromdapp.run.skip>true</andromdapp.run.skip>
				<andromda.run.skip>true</andromda.run.skip>
				<skipProcessing>true</skipProcessing>
				<maven.test.skip>true</maven.test.skip>
				<andromda.translation.test.skip>true</andromda.translation.test.skip>
				<!--maven.test.failure.ignore>true</maven.test.failure.ignore-->
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-project-info-reports-plugin</artifactId>
						<version>${maven.project.info.reports.plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-site-plugin</artifactId>
						<version>${maven.site.plugin.version}</version>
						<!-- http://svn.apache.org/repos/asf/velocity/site/README.txt -->
						<configuration>
							<!-- <stagingDirectory>../site-staging</stagingDirectory> -->
							<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
							<outputEncoding>${project.build.sourceEncoding}</outputEncoding>

							<locales>en</locales>
							<!--<locales>en,fr</locales>-->
							<excludeModules>build-tools</excludeModules>
							<excludeModules>maven-gui-plugin</excludeModules>
							<siteDirectory>${basedir}/build-site/src/site</siteDirectory>
							<!--<siteDirectory>${home.dir}/site/src/site</siteDirectory>-->
							<!--  http://localhost:8070 -->
							<port>8070</port>
							<!--
								<tempWebappDirectory>${basedir}/target/site/tempdir</tempWebappDirectory>
							-->
						</configuration>
						<!--
							<executions> <execution> <phase>process-class</phase> <goals>
							<goal>site</goal> </goals> </execution> </executions>
						-->
						<dependencies>
							<dependency>
								<groupId>org.apache.maven.skins</groupId>
								<artifactId>maven-default-skin</artifactId>
								<version>${maven.default.skin.version}</version>
							</dependency>
							<dependency>
								<groupId>org.apache.maven.doxia</groupId>
								<artifactId>doxia-module-twiki</artifactId>
								<version>${doxia.module.twiki.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
			<!--
				Reporting configurations are not picked up from pluginManagement
				section
			-->
			<reporting>
				<plugins>
					<!-- Add this plug-ins only if you use SCM -->
					<plugin>
						<inherited>false</inherited>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changes-plugin</artifactId>
						<version>${maven.changes.plugin.version}</version>
						<reportSets>
							<reportSet>
								<reports>
									<report>changes-report</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>

					<!-- *** GENERATION JAVADOC *** -->
					<!-- jxr-maven-plugin fait un equivalent -->
					<!-- Javadoc settings -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven.javadoc.plugin.version}</version>
						<reportSets>
							<reportSet>
								<id>aggregate</id>
								<configuration>
									<!--
										<source>${jdkLevel}</source> aggregate all when built from the
										top-level directory <aggregate>true</aggregate>
									-->
									<stylesheet>maven</stylesheet>
									<!--
										<minmemory>128m</minmemory> <maxmemory>512m</maxmemory>
									-->
									<minmemory>128m</minmemory>
									<!--<maxmemory>2g</maxmemory>-->
									<maxmemory>1548m</maxmemory>
									<show>public</show>
									<charset>${project.build.sourceEncoding}</charset>
									<docencoding>${project.build.sourceEncoding}</docencoding>
									<encoding>${project.build.sourceEncoding}</encoding>
									<groups>
										<group>
											<title>Database</title>
											<packages>${application.package}.db*</packages>
										</group>
										<group>
											<title>Model</title>
											<packages>${application.package}.model*</packages>
										</group>
										<group>
											<title>Uml</title>
											<packages>${application.package}.uml.*</packages>
										</group>
										<group>
											<title>Application</title>
											<packages>${application.package}.application.*</packages>
										</group>
										<group>
											<title>Validation</title>
											<packages>${application.package}.validation.*</packages>
										</group>
										<group>
											<title>Mail Import</title>
											<packages>${application.package}.mailimport.*</packages>
										</group>
										<group>
											<title>Service</title>
											<packages>${application.package}.service.*</packages>
										</group>
										<group>
											<title>Import Export Service</title>
											<packages>${application.package}.ImportExport.*</packages>
										</group>
										<group>
											<title>CashPooling Service</title>
											<packages>${application.package}.CashPooling.*</packages>
										</group>
										<group>
											<title>Archival Service</title>
											<packages>${application.package}.ArchivalService.*</packages>
										</group>
										<group>
											<title>CorporateAction Service</title>
											<packages>${application.package}.CorporateAction.*</packages>
										</group>
										<group>
											<title>MessagingService Service</title>
											<packages>${application.package}.MessagingService.*</packages>
										</group>
										<group>
											<title>SDValidation Service</title>
											<packages>${application.package}.SDValidation.*</packages>
										</group>
										<group>
											<title>Realtime Service</title>
											<packages>${application.package}.realtime.*</packages>
										</group>
										<group>
											<title>Workflow Service</title>
											<packages>${application.package}.Workflow.*</packages>
										</group>
										<group>
											<title>Corba</title>
											<packages>${application.package}.corba.*</packages>
										</group>
										<group>
											<title>Tool</title>
											<packages>${application.package}.tool.*</packages>
										</group>
										<group>
											<title>Common JDBManager</title>
											<packages>${application.package}.common.JDBManager*</packages>
										</group>
										<group>
											<title>Common JObjectDB</title>
											<packages>${application.package}.common.JObjectDB*</packages>
										</group>
										<group>
											<title>Common Service</title>
											<packages>${application.package}.common.service*</packages>
										</group>
										<group>
											<title>Common</title>
											<packages>${application.package}.common.*</packages>
										</group>
										<group>
											<title>Utils</title>
											<packages>${application.package}.utils.*</packages>
										</group>
										<group>
											<title>Mask</title>
											<packages>${application.package}.mask.*</packages>
										</group>
										<group>
											<title>Mask implementation</title>
											<packages>${application.package}.mask_impl.*</packages>
										</group>
										<group>
											<title>Gui</title>
											<packages>${application.package}.gui.*</packages>
										</group>
										<group>
											<title>Choice</title>
											<packages>${application.package}.choice.*</packages>
										</group>
										<group>
											<title>KDB</title>
											<packages>com.rfs.kdb.*</packages>
										</group>
										<group>
											<title>Karma</title>
											<packages>com.rfs.wffield.*</packages>
										</group>
										<group>
											<title>Modules (not part of the application core)</title>
											<packages>com.reuters.tradeaccess.mask.*</packages>
										</group>
										<group>
											<title>Examples</title>
											<packages>com.nabla.samples.*:com.nabla.demo.*</packages>
										</group>
									</groups>
									<doclet>gr.spinellis.umlgraph.doclet.UmlGraphDoc</doclet>
									<docletArtifact>
										<groupId>gr.spinellis</groupId>
										<artifactId>UmlGraph</artifactId>
										<version>4.6</version>
									</docletArtifact>
									<additionalparam> -inferrel -inferdep -quiet -hide java.* -hide
										com.rfs.wffield.* -collpackages java.util.* -collpackages
										com.reuters.product.logical.*
										-collpackages
										com.reuters.product.utils.* -qualify
										-postfixpackage
										-nodefontsize 9 -nodefontpackagesize 7
										-outputencoding utf8</additionalparam>
									<excludePackageNames>com.nabla.andromda.cartridges.technical.karma.*:com.nabla.andromda.cartridges.technical..unittest:*.cartridges.*</excludePackageNames>
								</configuration>
								<!--
									<reports> <report>aggregate</report> </reports>
								-->
							</reportSet>
						</reportSets>
						<configuration>
							<tags>
								<tag>
									<name>date</name>
									<placement>a</placement>
									<head>date</head>
								</tag>
								<tag>
									<name>version.interne</name>
									<placement>a</placement>
									<head>version interne</head>
								</tag>
							</tags>
							<!--  Link to the external online JavaDoc -->
							<links>
								<!--
									<link>http://java.sun.com/javaee/5/docs/api</link>
									<link>http://java.sun.com/j2se/1.5/docs/api/</link>
									<link>http://java.sun.com/j2ee/sdk_1.3/techdocs/api/</link>
								-->
								<link>http://jakarta.apache.org/commons/beanutils/commons-beanutils-1.7.0/docs/api/</link>
								<link>http://jakarta.apache.org/commons/collections/api-3.2/</link>
								<link>http://jakarta.apache.org/commons/io/api-1.2/</link>
								<link>http://jakarta.apache.org/commons/lang/api-2.1/</link>
								<link>http://jakarta.apache.org/commons/pool/apidocs/</link>
								<link>http://logging.apache.org/log4j/docs/api/</link>
								<!--<link>http://junit.sourceforge.net/javadoc/</link>-->
								<link>http://jakarta.apache.org/commons/dbcp/apidocs/</link>
								<link>http://jakarta.apache.org/commons/fileupload/apidocs/</link>
								<link>http://jakarta.apache.org/commons/logging/apidocs/</link>
								<link>http://jakarta.apache.org/commons/pool/apidocs/</link>
								<!--
									<link>http://jakarta.apache.org/commons/httpclient/apidocs/</link>
									<link>http://jakarta.apache.org/commons/logging/commons-logging-1.0.4/docs/apidocs/</link>
									<link>http://www.junit.org/junit/javadoc/</link>
									<link>http://static.springframework.org/spring-ldap/docs/1.2.1/api/spring-ldap/</link>
									<link>http://static.springframework.org/spring/docs/2.5.x/api/</link>
									<link>http://www.junit.org/junit/javadoc/</link>
									<link>http://jakarta.apache.org/regexp/apidocs/</link>
									<link>http://jakarta.apache.org/velocity/api/</link>
								-->
							</links>
							<detectOfflineLinks>false</detectOfflineLinks>
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<profile>
			<id>site</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<invoker.skip>true</invoker.skip>
				<andromdapp.run.skip>true</andromdapp.run.skip>
				<andromda.run.skip>true</andromda.run.skip>
				<skipProcessing>true</skipProcessing>
				<maven.test.skip>false</maven.test.skip>
				<andromda.translation.test.skip>true</andromda.translation.test.skip>
				<!--maven.test.failure.ignore>true</maven.test.failure.ignore-->
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-project-info-reports-plugin</artifactId>
						<version>${maven.project.info.reports.plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>${maven.dependency.plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>clirr-maven-plugin</artifactId>
						<version>${maven.clirr.plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changelog-plugin</artifactId>
						<version>${maven.changelog.plugin.version}</version>
					</plugin>
					<!--
						<plugin> <groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven.javadoc.plugin.version}</version> <configuration>
					-->
					<!-- Default configuration for all reports -->
					<!--
						</configuration> <executions> <execution> <id>aggregate</id>
						<goals> <goal>aggregate</goal> </goals> <phase>site</phase>
						<configuration>
					-->
					<!-- Specific configuration for the aggregate report -->
					<!--
						</configuration> </execution> <execution> <id>javadoc-jar</id>
						<phase>package</phase> <goals> <goal>jar</goal> </goals>
						<configuration>
					-->
					<!-- Default configuration for all reports -->

					<!-- switch on dependency-driven aggregation -->
					<!--<includeDependencySources>true</includeDependencySources>-->

					<!-- exclude ONLY commons-cli artifacts -->
					<!--
						<dependencySourceExcludes>
						<dependencySourceExclude>commons-cli:*</dependencySourceExclude>
						</dependencySourceExcludes>
					-->
					<!-- include ONLY dependencies I control -->
					<!--
						<dependencySourceIncludes>
						<dependencySourceInclude>com.reuters*:*</dependencySourceInclude>
						</dependencySourceIncludes>
					-->
					<!--
						</configuration> </execution> </executions> </plugin>
					-->
					<!--
					<plugin> 
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>emma-maven-plugin</artifactId>
						<version>${maven.emma.plugin.version}</version>
						<inherited>true</inherited>
					</plugin>
					-->					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>${maven.surefire.plugin.version}</version>
					</plugin>

					<!-- Delete code coverage database when 'mvn clean' is executed -->
					<!--
						<plugin> <groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>${maven.cobertura.plugin.version}</version>
						<configuration> <check> <haltOnFailure>false</haltOnFailure>
					-->
					<!--
						<branchRate>85</branchRate> <lineRate>85</lineRate>
						<totalBranchRate>85</totalBranchRate>
						<totalLineRate>85</totalLineRate>
						<packageLineRate>85</packageLineRate>
						<packageBranchRate>85</packageBranchRate> <regexes> <regex>
						<pattern>${application.package}.*</pattern>
						<branchRate>90</branchRate> <lineRate>80</lineRate> </regex>
						<regex> <pattern>com.reuters.tradeaccess.mask.*</pattern>
						<branchRate>40</branchRate> <lineRate>30</lineRate> </regex>
						</regexes>
					-->
					<!--
						</check> </configuration> <executions> <execution> <goals>
						<goal>clean</goal> <goal>check</goal> </goals> </execution>
						</executions> </plugin>
					-->

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-scm-plugin</artifactId>
						<version>${maven.scm.plugin.version}</version>
					</plugin>
					<!--
						<plugin> <groupId>org.codehaus.mojo</groupId>
						<artifactId>dashboard-maven-plugin</artifactId>
						<version>${maven.dashboard.plugin.version}</version>
						<configuration>
						<dialect>org.hibernate.dialect.DerbyDialect</dialect>
					-->
					<!--
						org.apache.derby.jdbc.ClientDriver
						org.apache.derby.jdbc.EmbeddedDriver
					-->
					<!--
						<driverClass>org.apache.derby.jdbc.ClientDriver</driverClass>
					-->
					<!--
						<connectionUrl>jdbc:derby:C:/workspace/workspace/users/albandri30/database/derby/dashboard;create=true</connectionUrl>
					-->
					<!--
						<connectionUrl>jdbc:derby://localhost:1527/myDB;create=true</connectionUrl>
						<username>usr</username> <password>usr</password>
						<configLocation>project/myDashboardConfig.xml</configLocation>
						</configuration> <dependencies>
					-->
					<!-- http://db.apache.org/derby/ -->
					<!--
						Comment out if deploying to a Java EE 5 server with a server
						provided data source
					-->
					<!--
						<dependency> <groupId>org.apache.derby</groupId>
						<artifactId>derbyclient</artifactId>
						<version>${jdbc.derby.version}</version> </dependency>
						<dependency> <groupId>org.apache.derby</groupId>
						<artifactId>derby</artifactId>
						<version>${jdbc.derby.version}</version> <scope>compile</scope>
						</dependency> <dependency> <groupId>org.apache.derby</groupId>
						<artifactId>derbytools</artifactId>
						<version>${jdbc.derby.version}</version> <scope>compile</scope>
						</dependency> <dependency> <groupId>org.apache.derby</groupId>
						<artifactId>derbynet</artifactId>
						<version>${jdbc.derby.version}</version> <scope>compile</scope>
						</dependency>
					-->
					<!--
						<dependency> <groupId>aspectj</groupId>
						<artifactId>aspectjrt</artifactId>
						<version>${aspectj.version}</version> <scope>compile</scope>
						</dependency> <dependency> <groupId>org.springframework</groupId>
						<artifactId>spring-aspects</artifactId> <version>2.0</version>
						<scope>compile</scope> </dependency>
					-->
					<!-- to override commons-logging in Hibernate library dependency -->
					<!--
						<dependency> <groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
						<version>${commons.logging.version}</version> </dependency>
						<dependency> <groupId>com.nabla.project.build-tools</groupId>
						<artifactId>build-tools</artifactId>
						<version>1.0</version> </dependency> </dependencies>
						</plugin>
					-->

					<!--
						<plugin> <groupId>org.codehaus.mojo</groupId>
						<artifactId>javancss-maven-plugin</artifactId>
						<version>2.0-beta-2</version> <executions> <execution>
						<id>verify_javancss</id> <phase>verify</phase> </execution>
						</executions> </plugin> <plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>jdepend-maven-plugin</artifactId>
						<version>2.0-beta-1</version> <executions> <execution>
						<id>verify_jdepend</id> <phase>verify</phase> </execution>
						</executions> </plugin>
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
						<version>${maven.jxr.plugin.version}</version>
					</plugin>
					<!--
						<plugin> <groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>${maven.pmd.plugin.version}</version> <executions>
						<execution> <id>verify_pmd</id> <phase>verify</phase> <goals>
						<goal>pmd</goal> </goals> <configuration>
						<minimumTokens>20</minimumTokens> </configuration> </execution>
						</executions> </plugin>
					-->

					<!-- http://checkstyle.sourceforge.net -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${maven.checkstyle.plugin.version}</version>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-site-plugin</artifactId>
						<version>${maven.site.plugin.version}</version>
						<configuration>
							<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
							<outputEncoding>${project.build.sourceEncoding}</outputEncoding>

							<locales>en</locales>
							<!--<locales>en,fr</locales>-->
							<excludeModules>build-tools</excludeModules>
							<excludeModules>maven-gui-plugin</excludeModules>
							<siteDirectory>${basedir}/build-site/src/site</siteDirectory>
							<port>8070</port>
						</configuration>
						<!--
							<executions> <execution> <phase>process-class</phase> <goals>
							<goal>site</goal> </goals> </execution> </executions>
						-->
						<dependencies>
							<dependency>
								<groupId>org.apache.maven.skins</groupId>
								<artifactId>maven-default-skin</artifactId>
								<version>${maven.default.skin.version}</version>
							</dependency>
							<dependency>
								<groupId>org.apache.maven.doxia</groupId>
								<artifactId>doxia-module-twiki</artifactId>
								<version>${doxia.module.twiki.version}</version>
							</dependency>
						</dependencies>
					</plugin>

					<!--
						<groupId>net.objectlab</groupId>
						<artifactId>mvn-qalab-plugin</artifactId>
						<version>${maven.qalab.plugin.version}</version> </plugin>
					-->
					<!--  Code Coverage by Clover -->
					<!--  Bind Clover Coverage instrumentation to the site generation -->
					<!--  Blocked by http://jira.codehaus.org/browse/MCLOVER-50 -->
					<!--
					<plugin> 
						<groupId>com.atlassian.maven.plugins</groupId>
						<artifactId>maven-clover2-plugin</artifactId> 
						<configuration>
							<generateHistorical>true</generateHistorical>
						</configuration>
						<executions> 
							<execution> 
								<phase>pre-site</phase>
								<goals>
									<goal>instrument</goal> 
									<goal>aggregate</goal> 
								</goals>
								</execution> 
							</executions> 
						</plugin>
						-->

					<!--
						<plugin> <groupId>com.atlassian.maven.plugins</groupId>
						<artifactId>maven-upload-plugin</artifactId>
						<version>1.0</version> <executions> <execution>
						<id>upload-javadoc</id> <phase>deploy</phase> <goals>
						<goal>upload</goal> </goals> <configuration>
						<uploadResourceSrc>target/site/apidocs/*</uploadResourceSrc>
						<uploadResourceDest>${pom.artifactId}/${project.version}</uploadResourceDest>
						<uploadServerId>atlassian-documentation</uploadServerId>
						<uploadUrl>dav:https://docs.atlassian.com/</uploadUrl>
						</configuration> </execution> </executions> </plugin>
					-->

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>taglist-maven-plugin</artifactId>
						<version>${maven.taglist.plugin.version}</version>
					</plugin>
				</plugins>
			</build>

			<reporting>
				<plugins>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-plugin-plugin</artifactId>
						<version>${maven.plugin.plugin.plugin.version}</version>
					</plugin>

					<!-- Comment gerer un rapport de couverture des tests -->
					<!-- Code Coverage by Cobertura -->
					<!--
						<plugin> <groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>${maven.cobertura.plugin.version}</version>
						<configuration> <formats> <format>xml</format>
						<format>html</format> </formats> </configuration> </plugin>
					-->

					<!-- Add this plug-ins only if you use SCM -->
					<plugin>
						<inherited>false</inherited>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changes-plugin</artifactId>
						<version>${maven.changes.plugin.version}</version>
						<reportSets>
							<reportSet>
								<reports>
									<report>changes-report</report>
									<!-- Uncomment if using JIRA -->
									<!--report>jira-report</report-->
								</reports>
							</reportSet>
						</reportSets>
						<configuration>
							<columnNames>Key,Type,Summary,Assignee,Status,Resolution,Priority,Component</columnNames>
							<sortColumnNames>Key</sortColumnNames>
						</configuration>
					</plugin>
					<!-- http://maven.apache.org/plugins/maven-changelog-plugin/faq.html -->
					<!-- Comment connaitre l activitee d'un projet -->
					<!-- Developer activity (last 6 months) -->
					<!--
					<plugin> 
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changelog-plugin</artifactId>
						<version>${maven.changelog.plugin.version}</version> 
						<reportSets> 
							<reportSet>
								<id>dual-report</id> 
								<configuration> 
								<type>range</type>
								<range>60</range> 
								</configuration> 
							<reports>
							<report>changelog</report> 
							<report>file-activity</report>
							<report>dev-activity</report> 
							</reports> 
							</reportSet>
						</reportSets> 
					</plugin>
					-->

					<plugin>
      					  	<groupId>org.apache.maven.plugins</groupId>
      					  	<artifactId>maven-changes-plugin</artifactId>
      					  	<version>${maven.changes.plugin.version}</version>
      					  	<reportSets>
      					  	  	<reportSet>
      					  	  	  	<reports>
      					  	  	  	  	<report>changes-report</report>
      					  	  	  	</reports>
      					  	  	</reportSet>
      					  	</reportSets>
      					</plugin>

					<!--
						<plugin> <groupId>org.codehaus.mojo</groupId>
						<artifactId>aspectj-maven-plugin</artifactId> <configuration>
						<verbose>true</verbose> <privateScope>true</privateScope>
						<complianceLevel>${jdkLevel}</complianceLevel> <ajdtBuildDefFile>
						build.ajproperties </ajdtBuildDefFile> </configuration>
						<reportSets> <reportSet> <reports> <report>aspectj-report</report>
						</reports> </reportSet> </reportSets> </plugin>
					-->

					<!-- *** GENERATION DES SOURCES NAVIGABLES EN HTML *** -->
					<!-- Source code cross-reference -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
						<version>${maven.jxr.plugin.version}</version>
						<configuration>
							<linkJavadoc>true</linkJavadoc>
							<aggregate>true</aggregate>
							<!--<javadocDir>reports/apidocs</javadocDir>
							<javadocDir>${deploy.dir}/${product.name}/apidocs/</javadocDir>
							-->
							<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
							<outputEncoding>${project.build.sourceEncoding}</outputEncoding>
						</configuration>
					</plugin>

					<!-- Comment gerer un rapport des tags -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>taglist-maven-plugin</artifactId>
						<version>${maven.taglist.plugin.version}</version>
						<configuration>
							<charset>${project.build.sourceEncoding}</charset>
							<docencoding>${project.build.sourceEncoding}</docencoding>
							<encoding>${project.build.sourceEncoding}</encoding>
							<tagListOptions>
								<tagClasses>
									<tagClass>
										<displayName>Todo Work</displayName>
										<tags>
											<tag>
												<matchString>todo</matchString>
												<matchType>ignoreCase</matchType>
											</tag>
											<tag>
												<matchString>FIXME</matchString>
												<matchType>exact</matchType>
											</tag>
											<tag>
												<matchString>XXX</matchString>
												<matchType>exact</matchType>
											</tag>
											<tag>
												<matchString>@deprecated</matchString>
												<matchType>exact</matchType>
											</tag>
										</tags>
									</tagClass>
								</tagClasses>
							</tagListOptions>
						</configuration>
					</plugin>

					<!--
						When there is JXR cross-refernce output available, it will be
						linked to in case of test failures
					-->
					<!--
						<plugin> <groupId>org.codehaus.mojo</groupId>
						<artifactId>dashboard-maven-plugin</artifactId>
						<version>${maven.dashboard.plugin.version}</version>
						<inherited>true</inherited> </plugin>
					<plugin> 
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>emma-maven-plugin</artifactId>
						<version>${maven.emma.plugin.version}</version>
						<inherited>true</inherited> 
					</plugin>	
					-->							
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>${maven.surefire.plugin.version}</version>
						<configuration> 
                                           		<aggregate>true</aggregate> 
                                		</configuration> 						
					</plugin>

					<!-- Comment verifier la qualitee code avec checkstyle ou PMD -->
					<!-- *** GENERATION CHECKSTYLE *** -->
					<!--  Checkstyle plug-in -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${maven.checkstyle.plugin.version}</version>
						<configuration>
							<linkXref>true</linkXref>
							<!--<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>-->
							<charset>${project.build.sourceEncoding}</charset>
							<docencoding>${project.build.sourceEncoding}</docencoding>
							<encoding>${project.build.sourceEncoding}</encoding>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<!--
								<configLocation>/project/checkstyle_regles_nabla_eclipse.xml</configLocation>
							-->
							<configLocation>${home.dir}/build-tools/src/main/resources/project/checkstyle_regles_nabla_eclipse.xml</configLocation>
							<headerLocation>${home.dir}/build-tools/src/main/resources/project/LICENSE-1.0.txt</headerLocation>
						</configuration>
					</plugin>

					<!-- *** GENERATION PMD *** -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>${maven.pmd.plugin.version}</version>
						<configuration>
							<linkXref>true</linkXref>
							<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
							<minimumTokens>100</minimumTokens>
							<targetJdk>${jdkLevel}</targetJdk>
							<excludes>
								<exclude>**/*Bean.java</exclude>
								<exclude>**/generated/*.java</exclude>
							</excludes>
							<excludeRoots>
								<excludeRoot>${basedir}/target/generated-sources/stubs</excludeRoot>
							</excludeRoots>
							
							<rulesets>
							        <!--
								<ruleset>project/pmd_regles_nabla.xml</ruleset>
								-->
									<ruleset>/rulesets/basic.xml</ruleset>
									<ruleset>/rulesets/braces.xml</ruleset>
									<ruleset>/rulesets/clone.xml</ruleset>
									<ruleset>/rulesets/codesize.xml</ruleset>
									<ruleset>/rulesets/controversial.xml</ruleset>
									<ruleset>/rulesets/coupling.xml</ruleset>
									<ruleset>/rulesets/design.xml</ruleset>
									<ruleset>/rulesets/finalizers.xml</ruleset>
									<ruleset>/rulesets/logging-java.xml</ruleset>
									<ruleset>/rulesets/j2ee.xml</ruleset>
									<ruleset>/rulesets/javabeans.xml</ruleset>
									<ruleset>/rulesets/junit.xml</ruleset>
									<ruleset>/rulesets/naming.xml</ruleset>
									<ruleset>/rulesets/optimizations.xml</ruleset>
									<ruleset>/rulesets/strictexception.xml</ruleset>
									<ruleset>/rulesets/strings.xml</ruleset>
									<ruleset>/rulesets/sunsecure.xml</ruleset>
									<ruleset>/rulesets/typeresolution.xml</ruleset>
									<ruleset>/rulesets/unusedcode.xml</ruleset>
								-->
							</rulesets>
						</configuration>
					</plugin>

					<!-- *** GENERATION FINDBUGS *** -->
					<!-- Java Heap Space possible si trop de source a analyser -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>${maven.findbugs.plugin.version}</version>
						<configuration>
							<findbugsXmlOutput>true</findbugsXmlOutput>
							<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
							<xmlOutput>true</xmlOutput>
							<threshold>Normal</threshold>
							<effort>Default</effort>
						</configuration>
					</plugin>

					<!-- Comment analyser les metriques avec JDepend -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>jdepend-maven-plugin</artifactId>
						<version>${maven.jdepend.plugin.version}</version>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>javancss-maven-plugin</artifactId>
						<version>${maven.javancss.plugin.version}</version>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>clirr-maven-plugin</artifactId>
						<version>${maven.clirr.plugin.version}</version>
						<configuration>
							<minSeverity>error</minSeverity>
						</configuration>
					</plugin>

					<!-- *** GENERATION JAVADOC *** -->
					<!-- jxr-maven-plugin fait un equivalent -->
					<!-- Javadoc settings -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven.javadoc.plugin.version}</version>
						<reportSets>
							<reportSet>
								<id>non-aggregate</id>
								<configuration>
									<!-- Specific configuration for the non aggregate report -->

								</configuration>
								<reports>
									<report>javadoc</report>
								</reports>
							</reportSet>


							<reportSet>
								<id>aggregate</id>
								<configuration>
									<!-- Specific configuration for the aggregate report -->
									<tags>
										<tag>
											<name>date</name>
											<placement>a</placement>
											<head>date</head>
										</tag>
										<tag>
											<name>version.interne</name>
											<placement>a</placement>
											<head>version interne</head>
										</tag>
									</tags>
									<!--<detectLinks/>-->
									<!--  Link to the external online JavaDoc -->
									<links>
										<!--
											<link>http://java.sun.com/javaee/5/docs/api</link>
											<link>http://java.sun.com/j2se/1.5/docs/api/</link>
											<link>http://java.sun.com/j2ee/sdk_1.3/techdocs/api/</link>
										-->
										<link>http://jakarta.apache.org/commons/beanutils/commons-beanutils-1.7.0/docs/api/</link>
										<link>http://jakarta.apache.org/commons/collections/api-3.2/</link>
										<link>http://jakarta.apache.org/commons/io/api-1.2/</link>
										<link>http://jakarta.apache.org/commons/lang/api-2.1/</link>
										<!--
											<link>http://jakarta.apache.org/commons/logging/commons-logging-1.0.4/docs/apidocs/</link>
										-->
										<link>http://jakarta.apache.org/commons/pool/apidocs/</link>
										<link>http://logging.apache.org/log4j/docs/api/</link>
										<!--<link>http://junit.sourceforge.net/javadoc/</link>-->
										<link>http://jakarta.apache.org/commons/dbcp/apidocs/</link>
										<link>http://jakarta.apache.org/commons/fileupload/apidocs/</link>
										<!--
											<link>http://jakarta.apache.org/commons/httpclient/apidocs/</link>
										-->
										<link>http://jakarta.apache.org/commons/logging/apidocs/</link>
										<link>http://jakarta.apache.org/commons/pool/apidocs/</link>
										<!--
											<link>http://www.junit.org/junit/javadoc/</link>
											<link>http://static.springframework.org/spring-ldap/docs/1.2.1/api/spring-ldap/</link>
											<link>http://static.springframework.org/spring/docs/2.5.x/api/</link>
											<link>http://www.junit.org/junit/javadoc/</link>
											<link>http://jakarta.apache.org/regexp/apidocs/</link>
											<link>http://jakarta.apache.org/velocity/api/</link>
										-->
									</links>
									<detectOfflineLinks>false</detectOfflineLinks>
								</configuration>
								<reports>
									<report>aggregate</report>
									<!--<report>javadoc</report>-->
								</reports>
							</reportSet>
							<!--
								<reportSet> <id>doccheck</id> <configuration>
								<doclet>com.sun.tools.doclets.doccheck.DocCheck</doclet>
							-->
							<!-- <docletPath>/path/to/doccheck.jar</docletPath> -->
							<!--
								<docletArtifact> <groupId>com.sun.tools.doclets</groupId>
								<artifactId>doccheck</artifactId> <version>1.2b2</version>
								</docletArtifact> <additionalparam> -d
								${project.build.directory}/site/doccheck </additionalparam>
							-->
							<!-- Other dir than apidocs -->
							<!--
								<destDir>doccheck</destDir>
							-->
							<!-- For the project-reports page -->
							<!--
								<name>DocCheck</name> <description>DocCheck
								documentation.</description> </configuration> <reports>
								<report>javadoc</report> </reports> </reportSet>
							-->
						</reportSets>
						<configuration>
							<!-- Default configuration for all reports -->
							<!--
								<detectLinks/>
								<sourcepath>${basedir}/src/main/java;${basedir}/${maven.build.generated}/main/java;${basedir}/target/generated-sources/main/java</sourcepath>
							-->
							<!--
								<excludePackageNames>com.mycompany.myapp.package1.*:com.mycompany.myapp.package2:*.util.*</excludePackageNames>
							-->
							<excludePackageNames>*.ejb.*</excludePackageNames>

							<!--
								<source>${jdkLevel}</source> aggregate all when built from the
								top-level directory <aggregate>true</aggregate>
							-->
							<groups>
								<group>
									<title>Database</title>
									<packages>${application.package}.db*</packages>
								</group>
								<group>
									<title>Model</title>
									<packages>${application.package}.model*</packages>
								</group>
								<group>
									<title>Uml</title>
									<packages>${application.package}.uml.*</packages>
								</group>
								<group>
									<title>Application</title>
									<packages>${application.package}.application.*</packages>
								</group>
								<group>
									<title>Validation</title>
									<packages>${application.package}.validation.*</packages>
								</group>
								<group>
									<title>Mail Import</title>
									<packages>${application.package}.mailimport.*</packages>
								</group>
								<group>
									<title>Service</title>
									<packages>${application.package}.service.*</packages>
								</group>
								<group>
									<title>Import Export Service</title>
									<packages>${application.package}.ImportExport.*</packages>
								</group>
								<group>
									<title>CashPooling Service</title>
									<packages>${application.package}.CashPooling.*</packages>
								</group>
								<group>
									<title>Archival Service</title>
									<packages>${application.package}.ArchivalService.*</packages>
								</group>
								<group>
									<title>CorporateAction Service</title>
									<packages>${application.package}.CorporateAction.*</packages>
								</group>
								<group>
									<title>MessagingService Service</title>
									<packages>${application.package}.MessagingService.*</packages>
								</group>
								<group>
									<title>SDValidation Service</title>
									<packages>${application.package}.SDValidation.*</packages>
								</group>
								<group>
									<title>Realtime Service</title>
									<packages>${application.package}.realtime.*</packages>
								</group>
								<group>
									<title>Workflow Service</title>
									<packages>${application.package}.Workflow.*</packages>
								</group>
								<group>
									<title>Corba</title>
									<packages>${application.package}.corba.*</packages>
								</group>
								<group>
									<title>Tool</title>
									<packages>${application.package}.tool.*</packages>
								</group>
								<group>
									<title>Common JDBManager</title>
									<packages>${application.package}.common.JDBManager*</packages>
								</group>
								<group>
									<title>Common JObjectDB</title>
									<packages>${application.package}.common.JObjectDB*</packages>
								</group>
								<group>
									<title>Common Service</title>
									<packages>${application.package}.common.service*</packages>
								</group>
								<group>
									<title>Common</title>
									<packages>${application.package}.common.*</packages>
								</group>
								<group>
									<title>Utils</title>
									<packages>${application.package}.utils.*</packages>
								</group>
								<group>
									<title>Mask</title>
									<packages>${application.package}.mask.*</packages>
								</group>
								<group>
									<title>Mask implementation</title>
									<packages>${application.package}.mask_impl.*</packages>
								</group>
								<group>
									<title>Gui</title>
									<packages>${application.package}.gui.*</packages>
								</group>
								<group>
									<title>Choice</title>
									<packages>${application.package}.choice.*</packages>
								</group>
								<group>
									<title>KDB</title>
									<packages>com.rfs.kdb.*</packages>
								</group>
								<group>
									<title>Karma</title>
									<packages>com.rfs.wffield.*</packages>
								</group>
								<group>
									<title>Modules (not part of the application core)</title>
									<packages>com.reuters.tradeaccess.mask.*</packages>
								</group>
								<group>
									<title>Examples</title>
									<packages>com.nabla.samples.*:com.nabla.demo.*</packages>
								</group>
							</groups>

							<stylesheet>maven</stylesheet>
							<!--
								<minmemory>128m</minmemory> <maxmemory>512m</maxmemory>
							-->
							<!--
							<minmemory>128m</minmemory>
							<maxmemory>2g</maxmemory>
							<maxmemory>512m</maxmemory>
							<maxmemory>1548m</maxmemory>
							-->
							<!--<show>package</show>-->
							<show>public</show>
							<version>true</version>
							<javadocVersion>${source.version}</javadocVersion>
							<failOnError>false</failOnError>
							<linksource>true</linksource>
							<serialwarn>true</serialwarn>
							<charset>${project.build.sourceEncoding}</charset>
							<docencoding>${project.build.sourceEncoding}</docencoding>
							<encoding>${project.build.sourceEncoding}</encoding>
							<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
							
							<!-- <docletPath>/path/to/UmlGraph.jar</docletPath> -->
							<docletArtifact>
								<groupId>org.umlgraph</groupId>
								<artifactId>doclet</artifactId>
								<version>5.1</version>
							</docletArtifact>
							<additionalparam>-views</additionalparam>
                                                        <!--<destDir>target/uml</destDir>-->
                                                        <show>private</show>
							<!--
							<useStandardDocletOptions>true</useStandardDocletOptions>
							-->
							<!--
								<doclet>gr.spinellis.umlgraph.doclet.UmlGraphDoc</doclet>
								<docletArtifact> <groupId>gr.spinellis</groupId>
								<artifactId>UmlGraph</artifactId> <version>4.6</version>
								</docletArtifact>
							-->
							<!--
								http://maven-plugins.sourceforge.net/maven-dotuml-plugin/properties.html
							-->

							<!--
								<additionalparam> -inferrel -inferdep -quiet -hide java.* -hide
								com.rfs.wffield.* -collpackages java.util.* -collpackages
								com.reuters.product.logical.* -collpackages
								com.reuters.product.utils.* -qualify -postfixpackage
								-nodefontsize 9 -nodefontpackagesize 7 -outputencoding utf8
								</additionalparam>
							-->
							<!--
								Police ariali.ttf can be found at : C:\Windows\Fonts
								C:\Windows\winsxs\amd64_microsoft-windows-font-truetype-arial_31bf3856ad364e35_6.1.7600.16385_none_ce7861d6c70c1a93
							-->
							<!--
								-all -horizontal -attributes -operations -constructors
								-visibility -types -enumerations -enumconstants
							-->
							<!--
										-nodefontname "Times New Roman Bold"
									-->
						</configuration>
					</plugin>

					<!--
						<plugin> <groupId>net.objectlab</groupId>
						<artifactId>mvn-qalab-plugin</artifactId>
						<version>${maven.qalab.plugin.version}</version> <reportSets>
						<reportSet> <reports> <report>report-merge-chart</report>
						<report>report-movers-all</report> </reports> </reportSet>
						</reportSets> <configuration> <dateOnly>true</dateOnly>
						<startTimeHoursOffset>1</startTimeHoursOffset> </configuration>
						</plugin> <plugin> <groupId>net.objectlab</groupId>
						<artifactId>maven-qalab-plugin</artifactId> <version>2.1</version>
						<reportSets> <reportSet> <reports> <report>report</report>
						</reports> </reportSet> </reportSets> </plugin>
					-->
					<!--
					<plugin> 
						<groupId>com.atlassian.maven.plugins</groupId>
						<artifactId>maven-clover2-plugin</artifactId> 
						<configuration>
							<generatePdf>true</generatePdf> 
							<generateXml>true</generateXml>
						</configuration> 
					</plugin>
					-->

				</plugins>
			</reporting>
		</profile>

		<profile>
			<id>sonar</id>
			<!--
				http://linsolas.developpez.com/articles/java/qualite/sonar/?page=page_2
			-->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- sonar user admin password admin -->
				<sonar.jdbc.url>jdbc:derby://localhost:${sonar.derby.port}/sonar;create=true</sonar.jdbc.url>
				<sonar.jdbc.driver>org.apache.derby.jdbc.ClientDriver</sonar.jdbc.driver>
				<sonar.jdbc.defaultTransactionIsolation>1</sonar.jdbc.defaultTransactionIsolation>
				<!--
					<sonar.jdbc.url>jdbc:mysql://localhost:3306/sonar</sonar.jdbc.url>
					<sonar.jdbc.driver>com.mysql.jdbc.Driver</sonar.jdbc.driver>
				-->
				<sonar.jdbc.username>sonar</sonar.jdbc.username>
				<sonar.jdbc.password>sonar</sonar.jdbc.password>
				<!--
					La ligne ci-dessous n'est utile que si le port par defaut (9000)
					est modifie dans le fichier de configuration.
				-->
				<sonar.host.url>http://localhost:${sonar.port}</sonar.host.url>
				<!--<sonar.host.url>http://localhost:8080/sonar/</sonar.host.url>-->
			</properties>
		</profile>

		<profile>
			<id>spring</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>	
				<!--
				<dependency> <groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId> <version>2.0</version>
				<scope>compile</scope> </dependency>
				-->
				<!--  test et spring-test -->
				<dependency>
					<groupId>org.springframework</groupId>
					<artifactId>spring-test</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.springframework</groupId>
					<artifactId>spring-mock</artifactId>
					<scope>test</scope>
				</dependency>			
				<dependency>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
					<scope>compile</scope>
				</dependency>
			</dependencies>				
		</profile>

		<!-- ================= START Container Profiles ================= -->
		<profile>
			<id>jboss</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- START INFO USE BY MDA -->
				<jboss.home>${env.JBOSS_HOME}</jboss.home>
				<server.home>${jboss.home}</server.home>
				<server.name>${product.name}</server.name>
				<server.port>8180</server.port>
				<dataSource.name>jdbc/${application.id}</dataSource.name>
				<dataSource>java:/${dataSource.name}</dataSource>

				<!--
					Change this to the host on which your webservice will be deployed
				-->
				<webservice.host>localhost</webservice.host>
				<!-- Change this the port on which your webservice will be deploy -->
				<webservice.port>8180</webservice.port>

				<!-- END INFO USE BY MDA -->
				<cargo.container>jboss4x</cargo.container>
				<cargo.container.home>${env.JBOSS_HOME}</cargo.container.home>
				<cargo.container.url>http://easynews.dl.sourceforge.net/sourceforge/jboss/jboss-${jboss.version}.zip</cargo.container.url>
				<cargo.host>localhost</cargo.host>
				<cargo.port>8180</cargo.port>
				<cargo.wait>false</cargo.wait>
			</properties>
			<!--
				<distributionManagement> <site> <id>localhost</id> <name>Project
				Website</name>
				<url>file:///${env.JBOSS_HOME}/server/${server.name}/deploy/project</url>
				</site> </distributionManagement>
			-->

			<dependencies>		
				<dependency>
					<groupId>httpunit</groupId>
					<artifactId>httpunit</artifactId>
					<scope>test</scope>
				</dependency>
					
				<dependency>
					<groupId>jboss</groupId>
					<artifactId>jboss-j2ee</artifactId>
					<version>${jboss-j2ee.version}</version>
					<scope>provided</scope>
				</dependency>
				
				<dependency>
					<groupId>org.jbpm.jbpm3</groupId>
					<artifactId>jbpm-jpdl</artifactId>
					<version>${jbpm.version}</version>
				</dependency>
				<dependency>
					<groupId>org.jbpm.jbpm3</groupId>
					<artifactId>jbpm-identity</artifactId>
					<version>${jbpm.version}</version>
				</dependency>		
			</dependencies>		
		</profile>
		<profile>
			<id>jetty6</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<cargo.container>jetty6x</cargo.container>
				<cargo.container.url>http://dist.codehaus.org/jetty/jetty-6.1.21/jetty-6.1.21.zip</cargo.container.url>
			</properties>
		</profile>
		<profile>
			<id>tomcat5x</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<cargo.container>tomcat5x</cargo.container>
				<cargo.container.home>${env.CATALINA_HOME}</cargo.container.home>
				<cargo.container.url>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.14/bin/apache-tomcat-6.0.14.zip</cargo.container.url>
				<cargo.host>localhost</cargo.host>
				<cargo.port>8070</cargo.port>
				<cargo.wait>false</cargo.wait>
			</properties>
		</profile>
		<profile>
			<id>tomcat6x</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<cargo.container>tomcat6x</cargo.container>
				<cargo.container.home>${env.CATALINA_HOME}</cargo.container.home>
				<cargo.container.url>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.20/bin/apache-tomcat-6.0.20.zip</cargo.container.url>
				<cargo.host>localhost</cargo.host>
				<cargo.port>8070</cargo.port>
				<cargo.wait>false</cargo.wait>
			</properties>
		</profile>
		<!-- ================= END Container Profiles ================= -->

		<!-- ================= START MDA Profiles ================= -->
		<profile>
			<id>uml14</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<uml.type>uml14</uml.type>
				<repo.type>netBeansMDR</repo.type>
				<profile.type>xml.zip</profile.type>
				<model.uri>jar:file:${src.dir}/main/uml/${uml.type}/${model.name}.xml.zip!/${model.name}.xml</model.uri>
				<maven.andromda.model.uri>jar:file:${pom.basedir}/../model/src/main/uml/${uml.type}/${model.name}.xml.zip!/${model.name}.xml</maven.andromda.model.uri>
			</properties>
		</profile>
		<profile>
			<id>uml2</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<uml.type>uml2</uml.type>
				<repo.type>emf-uml22</repo.type>
				<profile.type>uml2</profile.type>
				<model.uri>file:${src.dir}/main/uml/${uml.type}/${model.name}.uml</model.uri>
				<maven.andromda.model.uri>file:${pom.basedir}/../model/src/main/uml/${uml.type}/${model.name}.uml</maven.andromda.model.uri>
			</properties>
		</profile>
		<!-- ================= END MDA Profiles ================= -->

		<!-- ================= START Database Profiles ================= -->
		<profile>
			<id>mysql</id>
			<properties>

				<database>mysql</database>
				<database.name>myDBGlobal</database.name>
				<!-- Database settings -->
				<dbunit.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory</dbunit.dataTypeFactoryName>
				<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
				<dbunit.schema></dbunit.schema>

				<!--
					Change driver jar for appropriate database For MySQL use:
					mysql-connector-java-X-bin.jar For Hypersonic use: hsqldb.jar
				-->
				<!--
					<jdbc.driver.jar>${jboss.home}/server/default/lib/hsqldb.jar</jdbc.driver.jar>
				-->
				<jdbc.client.artifactId>mysql-connector-java</jdbc.client.artifactId>
				<jdbc.groupId>mysql</jdbc.groupId>
				<jdbc.artifactId>${jdbc.client.artifactId}</jdbc.artifactId>
				<jdbc.version>5.1.10</jdbc.version>

				<!--
					<jdbc.driver.jar>${base.dir}/model/doa/lib/mysql-connector-java-5.0.5-bin.jar</jdbc.driver.jar>
				-->
				<jdbc.driver.jar>${jboss.home}/server/default/lib/${jdbc.client.artifactId}-${jdbc.version}.jar</jdbc.driver.jar>
				<!--
					Change driver for appropriate database For MySQL use:
					com.mysql.jdbc.Driver For Hypersonic use: org.hsqldb.jdbcDriver For
					Oracle9i use: oracle.jdbc.driver.OracleDriver For DB2 use:
					COM.ibm.db2.jdbc.app.DB2Driver For Informix use:
					com.informix.jdbc.IfxDriver For MSSQL use:
					com.microsoft.jdbc.sqlserver.SQLServerDriver For Pointbase use:
					com.pointbase.jdbc.jdbcUniversalDriver For Postgres use:
					org.postgresql.Driver For Sybase use:
					com.sybase.jdbc2.jdbc.SybDataSource For SapDB use:
					com.sap.dbtech.jdbc.DriverSapDB For Progress use:
					com.progress.sql.jdbc.JdbcProgressDriver For Derby use:
					org.apache.derby.jdbc.EmbeddedDriver
				-->
				<jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>

				<!-- Change this to the host on which your database will be deployed -->
				<database.host>localhost</database.host>
				<!-- Change this the port on which your database will be deploy -->
				<database.port>3406</database.port>
				<!--
					Change connection url for appropriate database For MySQL use:
					jdbc:mysql://localhost:3306/timetracker For Hypersonic use:
					jdbc:hsqldb:hsql://127.0.0.1:1701 For Oracle9i use:
					jdbc:oracle:thin:@localhost:1521:yoursid For DB2 use:
					jdbc:db2:timetracker For Informix use:
					jdbc:informix-sqli://localhost:1557/timetracker:INFORMIXSERVER=myserver
					For MSSQL use:
					jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=timetracker
					For Pointbase use:
					jdbc:pointbase:server://@pointbase.server@:@pointbase.port/pointbase.timetracker@,new
					For Postgres use: jdbc:postgresql://localhost/timetracker For
					Sybase use:
					jdbc:sybase:Tds:localhost:5000/timetracker?JCONNECT_VERSION=6 For
					SapDB use: jdbc:sapdb://127.0.0.1/timetracker For Progress use:
					jdbc:JdbcProgress:T:localhost:3305:timetracker
				-->

				<jdbc.username>sa</jdbc.username>
				<jdbc.password></jdbc.password>

				<!-- jdbc:mysql://localhost:3306/myDB -->
				<jdbc.client.url><![CDATA[jdbc:mysql://${database.host}:${database.port}/${database.name}?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8]]></jdbc.client.url>
				<!--<jdbc.url>${jdbc.client.url}</jdbc.url>-->
				<jdbc.url><![CDATA[jdbc:mysql://${database.host}:${database.port}/${database.name}?createDatabaseIfNotExist=true]]></jdbc.url>
				<!-- <jdbc.url>jdbc:mysql://localhost:3306/timetracker</jdbc.url>  -->

				<!-- START DATABASE INFO USE BY ANROMDA -->
				<!--
					Change this to generate to the correct MDA database mappings, For
					MySql use: MySQL For Hypersonic use: HypersonicSql For Oracle9i
					use: Oracle9i For DB2 use: DB2 For Informix use: InformixDB For
					MSSQL use: MSSQL For Pointbase use: PointBase For Postgres use:
					PostgreSQL For Sybase use: Sybase For SapDB use: SapDB For Derby
					use: Derby
				-->
				<sql.mappings>MySQL</sql.mappings>
				<!--
					Change exception sorder class name for appropriate database For
					MySQL use:
					org.jboss.resource.adapter.jdbc.vendor.MySQLExceptionSorter For
					Hypersonic use:
					org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter For
					Oracle9i use:
					org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter For
					DB2 use:
					org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter For
					Informix use:
					org.jboss.resource.adapter.jdbc.vendor.InformixExceptionSorter For
					MSSQL use:
					org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter For
					Pointbase use:
					org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter For
					Postgres use:
					org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter For
					Sybase use:
					org.jboss.resource.adapter.jdbc.vendor.SybaseExceptionSorter For
					SapDB use:
					org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter For
					Progress use:
					org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
				-->
				<jdbc.exception.sorter>org.jboss.resource.adapter.jdbc.vendor.MySQLExceptionSorter</jdbc.exception.sorter>
				<!-- END DATABASE INFO USE BY ANROMDA -->

				<!-- START DATABASE INFO USE BY BOTH -->
				<!--
					Change this for the appropriate database For MySql use:
					org.hibernate.dialect.MySQLDialect For MySql InnoDB use:
					org.hibernate.dialect.MySQLInnoDBDialect For MySql MyISAM use:
					org.hibernate.dialect.MySQLMyISAMDialect For Hypersonic use:
					org.hibernate.dialect.HSQLDialect For Oracle any version use:
					org.hibernate.dialect.OracleDialect For Oracle9i/10g use:
					org.hibernate.dialect.Oracle9Dialect For DB2 use:
					org.hibernate.dialect.DB2Dialect For Informix use:
					org.hibernate.dialect.InformixDialect For MSSQL use:
					org.hibernate.dialect.SQLServerDialect For Pointbase use:
					org.hibernate.dialect.PointbaseDialect For Postgres use:
					org.hibernate.dialect.PostgreSQLDialect For Sybase use:
					org.hibernate.dialect.SybaseDialect For Sybase Anywhere use:
					org.hibernate.dialect.SybaseAnywhereDialect For SapDB use:
					org.hibernate.dialect.SAPDBDialect For Progress use:
					org.hibernate.dialect.ProgressDialect For Derby use:
					org.hibernate.dialect.DerbyDialect
				-->
				<hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect</hibernate.dialect>
			</properties>
			<dependencies>
				<dependency>
					<groupId>${jdbc.groupId}</groupId>
					<artifactId>${jdbc.client.artifactId}</artifactId>
					<version>${jdbc.version}</version>
					<!--<scope>compile</scope>-->
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>sybase</id>
			<properties>

				<database>sybase</database>
				<database.name>ktp30b</database.name>
				<!-- Database settings -->
				<dbunit.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory</dbunit.dataTypeFactoryName>
				<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
				<dbunit.schema></dbunit.schema>

				<jdbc.client.artifactId>jconn3</jdbc.client.artifactId>
				<jdbc.groupId>com.sybase</jdbc.groupId>
				<jdbc.artifactId>${jdbc.client.artifactId}</jdbc.artifactId>
				<jdbc.version>6.0</jdbc.version>

				<jdbc.driver.jar>${jboss.home}/server/default/lib/${jdbc.client.artifactId}.jar</jdbc.driver.jar>
				<!--
					<unittest.datasource.driver.class.name>
					com.sybase.jdbc3.jdbc.SybDriver
					</unittest.datasource.driver.class.name>
					<unittest.datasource.class.name>
					org.springframework.jdbc.datasource.DriverManagerDataSource
					</unittest.datasource.class.name>
				-->
				<!--
					<jdbc.driver>com.sybase.jdbc2.jdbc.SybDataSource</jdbc.driver>
					<jdbc.driver>com.sybase.jdbc3.jdbc.SybDataSource</jdbc.driver>
				-->
				<jdbc.driver>com.sybase.jdbc3.jdbc.SybDriver</jdbc.driver>

				<!-- Change this to the host on which your database will be deployed -->
				<database.host>kdbxsol02</database.host>
				<!-- Change this the port on which your database will be deploy -->
				<database.port>4100</database.port>

				<jdbc.username>kplus</jdbc.username>
				<jdbc.password>kplus11</jdbc.password>

				<!-- jdbc:mysql://localhost:3306/myDB -->
				<jdbc.client.url><![CDATA[jdbc:sybase:Tds://${database.host}:${database.port}/${database.name}]]></jdbc.client.url>
				<!--<jdbc.url>${jdbc.client.url}</jdbc.url>-->
				<jdbc.url><![CDATA[jdbc:sybase:Tds://${database.host}:${database.port}/${database.name}]]></jdbc.url>
				<!-- <jdbc.url>jdbc:mysql://localhost:3306/timetracker</jdbc.url>  -->

				<sql.mappings>Sybase</sql.mappings>

				<jdbc.exception.sorter>org.jboss.resource.adapter.jdbc.vendor.SybaseExceptionSorter</jdbc.exception.sorter>

				<hibernate.dialect>org.hibernate.dialect.SybaseDialect</hibernate.dialect>
			</properties>
			<dependencies>
				<dependency>
					<groupId>${jdbc.groupId}</groupId>
					<artifactId>${jdbc.client.artifactId}</artifactId>
					<version>${jdbc.version}</version>
					<!--<scope>compile</scope>-->
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>derby</id>
			<properties>
				<database>derby</database>
				<database.name>myDBGlobal</database.name>
				<!-- Database settings -->
				<dbunit.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory</dbunit.dataTypeFactoryName>
				<dbunit.operation.type>CLEAN_INSERT
                                </dbunit.operation.type>
				<hibernate.dialect>org.hibernate.dialect.DerbyDialect</hibernate.dialect>
				<dbunit.schema>APP</dbunit.schema>
				<jdbc.driver.jar></jdbc.driver.jar>
				<jdbc.groupId>org.apache.derby</jdbc.groupId>
				<jdbc.client.artifactId>derbyclient</jdbc.client.artifactId>
				<jdbc.embedded.artifactId>derby</jdbc.embedded.artifactId>
				<jdbc.artifactId>${jdbc.embedded.artifactId}</jdbc.artifactId>
				<jdbc.version>${jdbc.derby.version}</jdbc.version>
				<jdbc.embedded.driver>org.apache.derby.jdbc.EmbeddedDriver</jdbc.embedded.driver>
				<jdbc.client.driver>org.apache.derby.jdbc.ClientDriver</jdbc.client.driver>
				<database.host>localhost</database.host>
				<database.port>1527</database.port>
				<!-- informartion must be declare in pom module -->
				<!--
					<jdbc.embedded.url><![CDATA[jdbc:derby:F:\workspace\SVNView\poc\Extractor-Database\Extractor-Business-Dao\myDB]]></jdbc.embedded.url>
				-->
				<!-- ;shutdown=true -->
				<!--
					<jdbc.client.url><![CDATA[jdbc:derby://${database.host}:${database.port}/myDB]]></jdbc.client.url>
				-->
				<!-- jdbc:mysql://localhost:3306/myDB -->
				<jdbc.username>${dbunit.schema}</jdbc.username>
				<jdbc.password>${dbunit.schema}</jdbc.password>
				<!-- jdbc:mysql://localhost:3306/myDB -->
				<jdbc.client.url><![CDATA[jdbc:derby:C:/workspace/workspace/users/albandri30/database/derby/${database.name};create=true]]></jdbc.client.url>
				<jdbc.embedded.url>${jdbc.client.url}</jdbc.embedded.url>
				<!--
					<jdbc.driverClassName> org.apache.derby.jdbc.ClientDriver
					org.apache.derby.jdbc.EmbeddedDriver
					org.apache.derby.jdbc.AutoloadedDriver </jdbc.driverClassName>
				-->
				<jdbc.driverClassName>org.apache.derby.jdbc.AutoloadedDriver</jdbc.driverClassName>
				<jdbc.url>${jdbc.embedded.url}</jdbc.url>
			</properties>
			<dependencies>
				<!--
					Comment out if deploying to a Java EE 5 server with a server
					provided data source
				-->
				<dependency>
					<groupId>${jdbc.groupId}</groupId>
					<artifactId>${jdbc.embedded.artifactId}</artifactId>
					<version>${jdbc.version}</version>
					<!--<scope>compile</scope>-->
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>${jdbc.groupId}</groupId>
					<artifactId>derbytools</artifactId>
					<version>${jdbc.version}</version>
					<!--<scope>compile</scope>-->
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>${jdbc.groupId}</groupId>
					<artifactId>derbynet</artifactId>
					<version>${jdbc.version}</version>
					<!--<scope>compile</scope>-->
					<scope>provided</scope>
				</dependency>

				<!-- org.apache.derby.jdbc.ClientDriver -->
				<!--
					<dependency> <groupId>${jdbc.groupId}</groupId>
					<artifactId>${jdbc.client.artifactId}</artifactId>
					<version>${jdbc.version}</version> <scope>compile</scope>
					</dependency>
				-->
			</dependencies>
		</profile>
		<profile>
			<id>h2</id>
			<properties>
				<database>h2</database>
				<database.name>myDBGlobal</database.name>
				<dao.framework></dao.framework>
				<!-- Database settings -->
				<dbunit.dataTypeFactoryName>org.dbunit.ext.hsqldb.HsqldbDataTypeFactory</dbunit.dataTypeFactoryName>
				<hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
				<jdbc.groupId>com.h2database</jdbc.groupId>
				<jdbc.artifactId>h2</jdbc.artifactId>
				<jdbc.version>1.0.20061217</jdbc.version>
				<jdbc.driverClassName>org.h2.Driver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:h2:tutorial-service]]></jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<jdbc.password></jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>hsqldb</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.hsqldb.HsqldbDataTypeFactory</dbunit.dataTypeFactoryName>
				<hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect>
				<jdbc.groupId>hsqldb</jdbc.groupId>
				<jdbc.artifactId>hsqldb</jdbc.artifactId>
				<jdbc.version>${jdbc.hsqldb.version}</jdbc.version>
				<jdbc.driverClassName>org.hsqldb.jdbcDriver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:hsqldb:tutorial-service;shutdown=true]]></jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<jdbc.password></jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>oracle</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<database>oracle</database>
				<database.name>ktp30b</database.name>
				<!-- Database settings -->
				<dbunit.dataTypeFactoryName>org.dbunit.ext.oracle.OracleDataTypeFactory</dbunit.dataTypeFactoryName>
				<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
				<!--<dbunit.schema>SYSTEM</dbunit.schema>-->
				<dbunit.schema>KTP30B</dbunit.schema>
				<!-- Make sure to capitalize the schema name -->
				<!--<sql.mappings>Oracle10g</sql.mappings>-->
				<sql.mappings>Oracle9i</sql.mappings>
				<jdbc.exception.sorter>org.hibernate.dialect.Oracle10gDialect</jdbc.exception.sorter>
				<hibernate.dialect>org.hibernate.dialect.Oracle10gDialect</hibernate.dialect>
				<jdbc.groupId>com.oracle</jdbc.groupId>
				<jdbc.artifactId>ojdbc14</jdbc.artifactId>
				<jdbc.client.artifactId>ojdbc14</jdbc.client.artifactId>
				<!-- <jdbc.embedded.artifactId>derby</jdbc.embedded.artifactId> -->
				<jdbc.version>10.2.0.2.0</jdbc.version>
				<jdbc.driver.jar>${jboss.home}/server/default/lib/${jdbc.client.artifactId}.jar</jdbc.driver.jar>
				<jdbc.driverClassName>oracle.jdbc.OracleDriver</jdbc.driverClassName>

				<database.host>localhost</database.host>
				<database.port>1521</database.port>
				<!--
					<jdbc.url><![CDATA[jdbc:oracle:thin:@localhost:1521:XE]]></jdbc.url>
				-->
				<jdbc.url><![CDATA[jdbc:oracle:thin:@${database.host}:${database.port}:xe]]></jdbc.url>
				<!--
					<jdbc.username>system</jdbc.username>
					<jdbc.password>admin</jdbc.password>
				-->
				<jdbc.username>ktp30b</jdbc.username>
				<jdbc.password>ktp30b</jdbc.password>
			</properties>
			<dependencies>
				<dependency>
					<groupId>${jdbc.groupId}</groupId>
					<artifactId>${jdbc.client.artifactId}</artifactId>
					<version>${jdbc.version}</version>
					<!--<scope>compile</scope>-->
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>postgresql</id>
			<properties>
				<hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
				<jdbc.groupId>postgresql</jdbc.groupId>
				<jdbc.artifactId>postgresql</jdbc.artifactId>
				<jdbc.version>8.1-407.jdbc3</jdbc.version>
				<jdbc.driverClassName>org.postgresql.Driver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:postgresql://localhost/tutorial-service]]></jdbc.url>
				<jdbc.username>postgres</jdbc.username>
				<jdbc.password>postgres</jdbc.password>
			</properties>
		</profile>
		<profile>
			<!--
				You need to enable TCP/IP Connections for SQL Server 2005 after
				installing.
			-->
			<!-- http://www.mattwoodward.com/blog/index.cfm?commentID=211 -->
			<id>sqlserver</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.mssql.MsSqlDataTypeFactory</dbunit.dataTypeFactoryName>
				<dbunit.operation.type>MSSQL_CLEAN_INSERT</dbunit.operation.type>
				<hibernate.dialect>org.hibernate.dialect.SQLServerDialect</hibernate.dialect>
				<jdbc.groupId>net.sourceforge.jtds</jdbc.groupId>
				<jdbc.artifactId>jtds</jdbc.artifactId>
				<jdbc.version>1.2</jdbc.version>
				<jdbc.driverClassName>net.sourceforge.jtds.jdbc.Driver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:jtds:sqlserver://localhost:3683/tutorial-service]]></jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<jdbc.password></jdbc.password>
			</properties>
		</profile>
		<!-- ================= END Database Profiles ================= -->

		<!-- ================= START Persistence Profiles ================= -->
		<!--
			http://www.jaceklaskowski.pl/wiki/Nauka_Java_Persistence_z_Apache_Maven_2_i_dostawcami_JPA:_OpenJPA,_Hibernate_i_TopLink
		-->
		<profile>
			<id>hibernate</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<!-- see file pom_persistence-SAV.txt -->
			<dependencies>
				<dependency>
					<groupId>javax.persistence</groupId>
					<artifactId>persistence-api</artifactId>
					<version>${javax.persistence.version}</version>
				</dependency>

		                <dependency>
		                	<groupId>org.hibernate</groupId>
		                	<artifactId>hibernate</artifactId>
		                	<version>${hibernate.version}</version>
		                	<!--
		                	<scope>compile</scope>
		                	<exclusions>
		                		<exclusion>
		                			<groupId>javax.transaction</groupId>
		                			<artifactId>jta</artifactId>
		                		</exclusion>
		                	</exclusions>
		                	-->
		                </dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-annotations</artifactId>
					<version>${hibernate.annotations.version}</version>
				</dependency>
				<!--
					<dependency> <groupId>org.hibernate</groupId>
					<artifactId>hibernate-search</artifactId>
					<version>${hibernate.annotations.version}</version> </dependency>
				-->
			</dependencies>
		</profile>
		<profile>
			<id>toplink</id>
			<!-- Toplink Dependencies -->
			<!--
				<dependency> <groupId>javax.persistence</groupId>
				<artifactId>toplink-essentials</artifactId> <version>1.0</version>
				</dependency>
			-->

			<!-- Comment out if deploying to a Java EE 5 server -->
			<!--
				<dependency> <groupId>oracle.toplink.essentials</groupId>
				<artifactId>toplink-essentials-agent</artifactId>
				<version>1.0</version> </dependency>
			-->
			<dependencies>
				<dependency>
					<groupId>toplink.essentials</groupId>
					<artifactId>toplink-essentials</artifactId>
					<version>${toplink.essentials.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>openjpa</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.openjpa</groupId>
					<artifactId>openjpa-all</artifactId>
					<version>${openjpa.all.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<!-- ================= END Persistence Profiles ================= -->

		<!-- ================= START Environment Profiles ================= -->
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env</name>
					<value>dev</value>
				</property>
			</activation>
			<!--
			<modules>
			        <module>env</module>
				<module>build-tools</module>
				<module>sample</module>
			</modules>
			-->	
			<properties> 
				<target.dir>target-eclipse</target.dir>
				<!--
				<jdbc.driver.jar /> <jdbc.driver /> <jdbc.url />
				<jdbc.username /> <jdbc.password /> <jdbc.exception.sorter />
				<webservice.host /> <webservice.port /> 
				-->
			</properties>
			<build>
				<plugins>
					<!--
						Automatically attach sources to build artifact as
						artifact-version-sources.jar and deploy to local repository
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<inherited>true</inherited>
						<configuration>
							<includePom>true</includePom>
						</configuration>
						<executions>
							<execution>
								<id>bundle-sources</id>
								<phase>package</phase>
								<goals>
									<!-- produce source artifact for main project sources -->
									<goal>jar</goal>

									<!-- produce source artifact for project test sources -->
									<goal>test-jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>integration</id>
			<activation>
				<property>
					<name>env</name>
					<value>int</value>
				</property>
			</activation>
			<!--
				<properties> <jdbc.driver.jar /> <jdbc.driver /> <jdbc.url />
				<jdbc.username /> <jdbc.password /> <jdbc.exception.sorter />
				<webservice.host /> <webservice.port /> </properties>
			-->
		</profile>
		<profile>
			<id>validation</id>
			<activation>
				<property>
					<name>env</name>
					<value>val</value>
				</property>
			</activation>
			<!--
				<properties> <jdbc.driver.jar /> <jdbc.driver /> <jdbc.url />
				<jdbc.username /> <jdbc.password /> <jdbc.exception.sorter />
				<webservice.host /> <webservice.port /> </properties>
			-->
		</profile>
		<profile>
			<id>homologation</id>
			<activation>
				<property>
					<name>env</name>
					<value>hom</value>
				</property>
			</activation>
			<!--
				<properties> <jdbc.driver.jar /> <jdbc.driver /> <jdbc.url />
				<jdbc.username /> <jdbc.password /> <jdbc.exception.sorter />
				<webservice.host /> <webservice.port /> </properties>
			-->
		</profile>
		<profile>
			<id>production</id>
			<activation>
				<property>
					<name>env</name>
					<value>prod</value>
				</property>
			</activation>
			<!--
				<properties> <jdbc.driver.jar /> <jdbc.driver /> <jdbc.url />
				<jdbc.username /> <jdbc.password /> <jdbc.exception.sorter />
				<webservice.host /> <webservice.port /> </properties>
			-->
		</profile>
		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>env</name>
					<value>rel</value>
				</property>
			</activation>
			<!--
				<properties> <jdbc.driver.jar /> <jdbc.driver /> <jdbc.url />
				<jdbc.username /> <jdbc.password /> <jdbc.exception.sorter />
				<webservice.host /> <webservice.port /> </properties>
			-->
			<build>
				<plugins>
					<plugin>
						<inherited>true</inherited>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<inherited>true</inherited>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<configuration>
							<updateReleaseInfo>true</updateReleaseInfo>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.rat</groupId>
						<artifactId>apache-rat-plugin</artifactId>
						<version>${maven.apache.rat.plugin.version}</version>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- ================= END Environment Profiles ================= -->

	</profiles>

</project>
