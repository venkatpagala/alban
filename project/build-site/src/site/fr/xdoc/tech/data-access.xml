<?xml version="1.0" encoding="UTF-8"?>
  <document>
      <properties>
          <title>
              Lutèce : Guide de développement : Accès aux données
          </title>
      </properties>
      <body>
          <section name="Accès aux données">
               <subsection name="Les pools de connexions et db.properties">
                   <p>
                       Lutèce dispose par défaut de deux pools de connexions sur la
                       base contenant les données du portail (portal et shared).
                        il est possible de déclarer d'autres pools de connexion vers 
                        d'autres bases pour les besoins de certains plugins
                   </p>
                   <p>
                       La déclaration d'un pool de connexion se fait dans le fichier 
                       <code>db.properties</code> situé dans le répertoire <code>WEB-INF/conf</code>.
                   </p>
                   <p>    
                       <div class="source">
                           <pre>
# Pool for the quiz plugin database

quiz.poolservice=fr.paris.lutece.util.pool.service.LuteceConnectionService
quiz.driver=org.gjt.mm.mysql.Driver
quiz.url=jdbc:mysql://localhost/quiz?autoReconnect=true
quiz.user=
quiz.password=
quiz.initconns=1
quiz.maxconns=3
quiz.logintimeout=2000
quiz.loglevel=error   
quiz.checkvalidconnectionsql=SELECT 1   </pre>
                       </div>
                   </p>
                   <p>
                       Les propriétés d'un pool sont les suivantes :
                       <table>
                           <tr>
                               <th>Nom</th>
                               <th>Description</th>
                           </tr>
                           <tr>
                               <td>
                                   poolservice (optionnel)
                               </td>
                               <td>
                                   Le nom de la classe de Lutece qui devra gérer les 
                                   demandes de connexions sur le pool. Par défaut le 
                                   service est celui de Lutèce, mais il peut être remplacé par 
                                   le service utlisant les pools de Tomcat :
                                   <code>fr.paris.lutece.util.pool.service.TomcatConnectionService</code>
                               </td>
                           </tr>
                           <tr>
                               <td>
                                   driver
                               </td>
                               <td>
                                   Le nom de la classe du driver JDBC
                               </td>
                           </tr>
                           <tr>
                               <td>
                                   url
                               </td>
                               <td>
                                   L'URL JDBC de connexion à la base de données contenant 
                                   notamment le protocol, le numéro de port éventuel, le nom du serveur et celui de la base 
                               </td>
                           </tr>
                           <tr>
                               <td>
                                   user
                               </td>
                               <td>
                                   Le nom de l'utilisateur de la base de données
                               </td>
                           </tr>
                           <tr>
                               <td>
                                   password
                               </td>
                               <td>
                                   Le mot de passe de l'utilisateur de la base de données 
                               </td>
                           </tr>
                          <tr>
                               <td>
                                   initconns
                               </td>
                               <td>
                                   Le nombre de connexions à ouvrir à la création du pool 
                               </td>
                           </tr>
                           <tr>
                               <td>
                                   maxconns
                               </td>
                               <td>
                                   Le nombre de connexions maximum sur le pool 
                               </td>
                           </tr>
                           <tr>
                               <td>
                                   logintimeout
                               </td>
                               <td>
                                   Le délai en milli secondes pour abondonner une tentative 
                                   de connexion à la base de données.
                               </td>
                           </tr>
                          <tr>
                               <td>
                                   loglevel
                               </td>
                               <td>
                                   Le niveau de log des événements sur le pool. Les valeurs 
                                    acceptées sont par ordre de verbosité : ERROR, INFO ou DEBUG. 
                               </td>
                           </tr>
                          <tr>
                               <td>
                                   checkvalidconnectionsql (optionnel)
                               </td>
                               <td>
                                   Ce paramètre contient la requête SQL qui permet de vérifier qu'une
                                   connexion du pool est valide. La valeur par défaut est <code> SELECT 1</code>
                                   qui fonctionne pour MySQL. Pour Oracle, ce paramètre doit être défini 
                                   avec la requête suivante : <code>SELECT SYSDATE FROM dual</code>.
                                </td>
                           </tr>
                         </table>
                   </p>
               </subsection>
               <subsection name="Le pattern DAO">
                   <p>
                       Comme décrit dans le document <a href="architecture-overview.html">Architecture générale</a>,
                       la persistence dans un SGBD est assurée par des objets respectant 
                       le <em>pattern DAO</em> défini dans la spécification J2EE.
                       Les objets DAO d'un objet métier peuvent être générés à l'aide
                       du plugin Lutèce <strong>codewizard</strong>. Depuis la version 1.3
                       de Lutèce, l'implémentation d'un DAO est réalisée à l'aide 
                       d'objets DAOUtil.
                   </p>
               </subsection>
               <subsection name="L'objet DAOUtil">
                   <p>
                       La classe utilitaire DAOUtil permet de créer des objets qui 
                       fournissent une interface pour l'ensemble des opérations 
                       d'accès aux données :
                   </p>
                   <p>
                       <ul>
                           <li>Récupération d'une connexion à partir d'un pool</li>
                           <li>Préparation d'un ordre SQL</li>
                           <li>Définition des éléments variables de l'ordre SQL</li>
                           <li>Exécution de l'ordre</li>
                           <li>Récupération et parcours éventuel des résultats</li>
                           <li>Remise à disposition de la connexion dans le poll</li>
                       </ul>
                   </p>
                   <p>
                       Voici un exemple d'utilisation d'un objet DAOUtil :
                   </p>
                   <p>
                       <div class="source">
                           <pre>
                               
private static final String SQL_QUERY_SELECT = "SELECT id_contact, \
    description, email, contact_order FROM contact WHERE id_contact = ? ";
    
...                              
Contact load( int nContactId , Plugin plugin )
{
        DAOUtil daoUtil = new DAOUtil( SQL_QUERY_SELECT , plugin );
        daoUtil.setInt( 1 , nContactId );
        daoUtil.executeQuery();

        Contact contact = null;

        if ( daoUtil.first(  ) )
        {
            contact = new Contact();
            contact.setId( daoUtil.getInt( 1 ) );
            contact.setName( daoUtil.getString( 2 ) );
            contact.setEmail( daoUtil.getString( 3 ) );
            contact.setContactOrder( daoUtil.getInt( 4 ) );
        }
        daoUtil.free();
        return contact;
}         
                           </pre>
                       </div>
                   </p>
               </subsection>
          </section>
      </body>
  </document>
