// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package org.andromda.test.howto2.e2;

import java.io.Serializable;
import java.util.Set;
import java.util.TreeSet;
import javax.persistence.Column;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.MappedSuperclass;

/**
 * Autogenerated POJO EJB mapped super class for Car containing the
 * bulk of the entity implementation.
 *
 * This is a mapped super class and autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@MappedSuperclass
public abstract class CarEmbeddable
    implements Serializable
{

    private static final long serialVersionUID = -6793461983486533447L;

    // ----------- Attribute Definitions ------------

    private String serial;
    private String name;
    private String type;


    // --------- Relationship Definitions -----------

    private Set<Person> owners = new TreeSet<Person>();

    // ---- Manageable Display Attributes (Transient) -----


    // --------------- Constructors -----------------

    /**
     * Default empty constructor
     */
    public CarEmbeddable() {}

    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param serial Value for the serial property
     * @param name Value for the name property
     * @param type Value for the type property
     */
    public CarEmbeddable(String serial, String name, String type)
    {
        setSerial(serial);
        setName(name);
        setType(type);
    }

    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param serial Value for the serial property
     * @param name Value for the name property
     * @param type Value for the type property
     * @param owners Value for the owners relation
     */
    public CarEmbeddable(String serial, String name, String type, Set<Person> owners)
    {
        setSerial(serial);
        setName(name);
        setType(type);

        setOwners(owners);
    }


    // -------- Attribute Accessors ----------

    /**
     * Get the serial property.
     * 
     * @return String The value of serial
     */
    @Id
    @Column(name = "SERIAL", unique = true, nullable = false, insertable = true, updatable = true)
    public String getSerial()
    {
        return serial;
    }

    /**
     * Set the serial property.
     * @param value the new value
     */
    public void setSerial(String value)
    {
        this.serial = value;
    }

    /**
     * Get the name property.
     * 
     * @return String The value of name
     */
    @Column(name = "NAME", unique = true, nullable = false, insertable = true, updatable = true)
    public String getName()
    {
        return name;
    }

    /**
     * Set the name property.
     * @param value the new value
     */
    public void setName(String value)
    {
        this.name = value;
    }

    /**
     * Get the type property.
     * 
     * @return String The value of type
     */
    @Column(name = "TYPE", unique = true, nullable = false, insertable = true, updatable = true)
    public String getType()
    {
        return type;
    }

    /**
     * Set the type property.
     * @param value the new value
     */
    public void setType(String value)
    {
        this.type = value;
    }


    // ------------- Relations ------------------

    /**
     * Get the owners Collection
     *
     * @return Set<Person>
     */
    @ManyToMany(mappedBy = "companyCars")
    public Set<Person> getOwners()
    {
        return this.owners;
    }

    /**
     * Set the owners
     *
     * @param owners
     */
    public void setOwners (Set<Person> owners)
    {
        this.owners = owners;
    }

    // -------- Common Methods -----------

    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof CarEmbeddable))
        {
            return false;
        }
        final CarEmbeddable that = (CarEmbeddable)object;
        if (this.getSerial() == null || that.getSerial() == null || !this.getSerial().equals(that.getSerial()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getSerial() == null ? 0 : getSerial().hashCode());

        return hashCode;
    }

    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("CarEmbeddable(=");
        sb.append("serial: ");
        sb.append(getSerial());
        sb.append(", name: ");
        sb.append(getName());
        sb.append(", type: ");
        sb.append(getType());
        sb.append(")");
        return sb.toString();
    }

}