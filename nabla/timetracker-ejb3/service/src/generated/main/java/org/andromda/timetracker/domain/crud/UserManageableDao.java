// license-header java merge-point
// Generated by: crud/SpringCrudDao.vsl in andromda-spring-cartridge.
package org.andromda.timetracker.domain.crud;

import java.util.Date;
import java.util.List;
import java.util.Map;
import org.andromda.timetracker.domain.User;

/**
 * 
 */
public interface UserManageableDao
{
    /**
     * @param username 
     * @param password 
     * @param firstName 
     * @param lastName 
     * @param email 
     * @param isActive 
     * @param creationDate 
     * @param comment 
     * @param id 
     * @param roles 
     * @return User
     */
    public User create(String username, String password, String firstName, String lastName, String email, boolean isActive, Date creationDate, String comment, Long id, Long[] roles);

    /**
     * @param id
     * @return User
     */
    public User readById(Long id);

    /**
     * @param username 
     * @param password 
     * @param firstName 
     * @param lastName 
     * @param email 
     * @param isActive 
     * @param creationDate 
     * @param comment 
     * @param id 
     * @param roles 
     * @return List<User>
     */
    public List<User> read(String username, String password, String firstName, String lastName, String email, Boolean isActive, Date creationDate, String comment, Long id, Long[] roles);

    /**
     * @return List<User>
     */
    public List<User> readAll();

    /**
     * @return BackingLists Map<String,?>
     */
    public Map<String,?> readBackingLists();

    /**
     * @param username 
     * @param password 
     * @param firstName 
     * @param lastName 
     * @param email 
     * @param isActive 
     * @param creationDate 
     * @param comment 
     * @param id 
     * @param roles 
     * @return User
     */
    public User update(String username, String password, String firstName, String lastName, String email, boolean isActive, Date creationDate, String comment, Long id, Long[] roles);

    /**
     * @param ids
     */
    public void delete(Long[] ids);
}