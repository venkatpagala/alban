// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org.andromda.timetracker.domain;

import java.util.List;
import org.andromda.timetracker.vo.TimecardSearchCriteriaVO;
import org.andromda.timetracker.vo.TimecardSummaryVO;
import org.andromda.timetracker.vo.TimecardVO;

/**
 * @see Timecard
 */
public class TimecardDaoImpl
    extends TimecardDaoBase
{
    /**
     * {@inheritDoc}
     */
    protected List handleFindByCriteria(TimecardSearchCriteriaVO criteria)
    {
        // TODO implement public List handleFindByCriteria(TimecardSearchCriteriaVO criteria)
        return null;
}

    /**
     * {@inheritDoc}
     */
    public void toTimecardSummaryVO(
        Timecard source,
        TimecardSummaryVO target)
    {
        // TODO verify behavior of toTimecardSummaryVO
        super.toTimecardSummaryVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    public TimecardSummaryVO toTimecardSummaryVO(final Timecard entity)
    {
        // TODO verify behavior of toTimecardSummaryVO
        return super.toTimecardSummaryVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Timecard loadTimecardFromTimecardSummaryVO(TimecardSummaryVO timecardSummaryVO)
    {
        // TODO implement loadTimecardFromTimecardSummaryVO
        throw new UnsupportedOperationException("org.andromda.timetracker.domain.loadTimecardFromTimecardSummaryVO(TimecardSummaryVO) not yet implemented.");

        /* A typical implementation looks like this:
        Timecard timecard = this.load(timecardSummaryVO.getId());
        if (timecard == null)
        {
            timecard = Timecard.Factory.newInstance();
        }
        return timecard;
        */
    }

    /**
     * {@inheritDoc}
     */
    public Timecard timecardSummaryVOToEntity(TimecardSummaryVO timecardSummaryVO)
    {
        // TODO verify behavior of timecardSummaryVOToEntity
        Timecard entity = this.loadTimecardFromTimecardSummaryVO(timecardSummaryVO);
        this.timecardSummaryVOToEntity(timecardSummaryVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void timecardSummaryVOToEntity(
        TimecardSummaryVO source,
        Timecard target,
        boolean copyIfNull)
    {
        // TODO verify behavior of timecardSummaryVOToEntity
        super.timecardSummaryVOToEntity(source, target, copyIfNull);
    }
    /**
     * {@inheritDoc}
     */
    public void toTimecardVO(
        Timecard source,
        TimecardVO target)
    {
        // TODO verify behavior of toTimecardVO
        super.toTimecardVO(source, target);
        // WARNING! No conversion for target.allocations (can't convert source.getAllocations():org.andromda.timetracker.domain.TimeAllocation to org.andromda.timetracker.vo.TimeAllocationVO[]
    }

    /**
     * {@inheritDoc}
     */
    public TimecardVO toTimecardVO(final Timecard entity)
    {
        // TODO verify behavior of toTimecardVO
        return super.toTimecardVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Timecard loadTimecardFromTimecardVO(TimecardVO timecardVO)
    {
        // TODO implement loadTimecardFromTimecardVO
        throw new UnsupportedOperationException("org.andromda.timetracker.domain.loadTimecardFromTimecardVO(TimecardVO) not yet implemented.");

        /* A typical implementation looks like this:
        Timecard timecard = this.load(timecardVO.getId());
        if (timecard == null)
        {
            timecard = Timecard.Factory.newInstance();
        }
        return timecard;
        */
    }

    /**
     * {@inheritDoc}
     */
    public Timecard timecardVOToEntity(TimecardVO timecardVO)
    {
        // TODO verify behavior of timecardVOToEntity
        Timecard entity = this.loadTimecardFromTimecardVO(timecardVO);
        this.timecardVOToEntity(timecardVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void timecardVOToEntity(
        TimecardVO source,
        Timecard target,
        boolean copyIfNull)
    {
        // TODO verify behavior of timecardVOToEntity
        super.timecardVOToEntity(source, target, copyIfNull);
    }
}