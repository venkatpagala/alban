// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by EntityEmbeddable.vsl in andromda-ejb3-cartridge on 03/27/2012 13:19:38.
//
package org.andromda.timetracker.domain;

import java.io.Serializable;
import java.util.Date;
import java.util.Set;
import java.util.TreeSet;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.MappedSuperclass;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Autogenerated POJO EJB mapped super class for User containing the
 * bulk of the entity implementation.
 *
 * This is a mapped super class and autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 *
 */
@MappedSuperclass
public abstract class UserEmbeddable implements Serializable
{
    private static final long serialVersionUID = -3876530241628970605L;

    // ----------- 9 Attribute Definitions ------------
    private String            username;
    private String            password;
    private String            firstName;
    private String            lastName;
    private String            email;
    private boolean           isActive;
    private Date              creationDate;
    private String            comment;
    private Long              id;

    // --------- 1 Relationship Definitions -----------
    private Set<UserRole>     roles            = new TreeSet<UserRole>();

    // ---- Manageable Display Attributes (Transient) -----

    // -------- 9 Attribute Accessors ----------
    /**
     * Get the username property.
     *
     * @return String The value of username
     */
    @Column(name = "USERNAME", unique = true, nullable = false, insertable = true, updatable = true)
    public String getUsername()
    {
        return this.username;
    }

    /**
     * Set the username property.
     * @param value the new value
     */
    public void setUsername(final String value)
    {
        this.username = value;
    }

    /**
     * Get the password property.
     *
     * @return String The value of password
     */
    @Column(name = "PASSWORD", nullable = false, insertable = true, updatable = true)
    public String getPassword()
    {
        return this.password;
    }

    /**
     * Set the password property.
     * @param value the new value
     */
    public void setPassword(final String value)
    {
        this.password = value;
    }

    /**
     * Get the firstName property.
     *
     * @return String The value of firstName
     */
    @Column(name = "FIRST_NAME", nullable = false, insertable = true, updatable = true)
    public String getFirstName()
    {
        return this.firstName;
    }

    /**
     * Set the firstName property.
     * @param value the new value
     */
    public void setFirstName(final String value)
    {
        this.firstName = value;
    }

    /**
     * Get the lastName property.
     *
     * @return String The value of lastName
     */
    @Column(name = "LAST_NAME", nullable = false, insertable = true, updatable = true)
    public String getLastName()
    {
        return this.lastName;
    }

    /**
     * Set the lastName property.
     * @param value the new value
     */
    public void setLastName(final String value)
    {
        this.lastName = value;
    }

    /**
     * Get the email property.
     *
     * @return String The value of email
     */
    @Column(name = "EMAIL", unique = true, nullable = false, insertable = true, updatable = true)
    public String getEmail()
    {
        return this.email;
    }

    /**
     * Set the email property.
     * @param value the new value
     */
    public void setEmail(final String value)
    {
        this.email = value;
    }

    /**
     * Get the isActive property.
     *
     * @return boolean The value of isActive
     */
    @Column(name = "IS_ACTIVE", nullable = false, insertable = true, updatable = true)
    public boolean isIsActive()
    {
        return this.isActive;
    }

    /**
     * Set the isActive property.
     * @param value the new value
     */
    public void setIsActive(final boolean value)
    {
        this.isActive = value;
    }

    /**
     * Get the creationDate property.
     *
     * @return Date The value of creationDate
     */
    @Column(name = "CREATION_DATE", nullable = false, insertable = true, updatable = true)
    @Temporal(TemporalType.TIMESTAMP)
    public Date getCreationDate()
    {
        return this.creationDate;
    }

    /**
     * Set the creationDate property.
     * @param value the new value
     */
    public void setCreationDate(final Date value)
    {
        this.creationDate = value;
    }

    /**
     * Get the comment property.
     *
     * @return String The value of comment
     */
    @Column(name = "COMMENT", insertable = true, updatable = true)
    public String getComment()
    {
        return this.comment;
    }

    /**
     * Set the comment property.
     * @param value the new value
     */
    public void setComment(final String value)
    {
        this.comment = value;
    }

    /**
     * Get the id property.
     *
     * @return Long The value of id
     */
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "ID", unique = true, nullable = false, insertable = true, updatable = true)
    public Long getId()
    {
        return this.id;
    }

    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(final Long value)
    {
        this.id = value;
    }

    // ------------- 1 Relations ------------------
    /**
     * Get the roles Collection
     *
     * @return Set<UserRole>
     */
    // @OneToMany(cascade = { CascadeType.ALL })
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinTable(name = "USER2ROLES", joinColumns = { @JoinColumn(name = "USER_ID_FK", referencedColumnName = "ID") }, inverseJoinColumns = { @JoinColumn(name = "ROLES_ID_FK", referencedColumnName = "ID") })
    public Set<UserRole> getRoles()
    {
        return this.roles;
    }

    /**
     * Set the roles
     *
     * @param rolesIn
     */
    public void setRoles(final Set<UserRole> rolesIn)
    {
        this.roles = rolesIn;
    }

    // --------------- Constructors -----------------

    /**
     * Default empty constructor
     */
    public UserEmbeddable()
    {
        // Default empty constructor
    }

    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param username Value for the username property
     * @param password Value for the password property
     * @param firstName Value for the firstName property
     * @param lastName Value for the lastName property
     * @param email Value for the email property
     * @param isActive Value for the isActive property
     * @param creationDate Value for the creationDate property
     * @param comment Value for the comment property
     */
    public UserEmbeddable(final String username, final String password, final String firstName, final String lastName, final String email, final boolean isActive, final Date creationDate, final String comment)
    {
        this.setUsername(username);
        this.setPassword(password);
        this.setFirstName(firstName);
        this.setLastName(lastName);
        this.setEmail(email);
        this.setIsActive(isActive);
        this.setCreationDate(creationDate);
        this.setComment(comment);
    }

    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param username Value for the username property
     * @param password Value for the password property
     * @param firstName Value for the firstName property
     * @param lastName Value for the lastName property
     * @param email Value for the email property
     * @param isActive Value for the isActive property
     * @param creationDate Value for the creationDate property
     * @param comment Value for the comment property
     * @param roles Value for the roles relation
     */
    public UserEmbeddable(final String username, final String password, final String firstName, final String lastName, final String email, final boolean isActive, final Date creationDate, final String comment,
            final Set<UserRole> roles)
    {
        this.setUsername(username);
        this.setPassword(password);
        this.setFirstName(firstName);
        this.setLastName(lastName);
        this.setEmail(email);
        this.setIsActive(isActive);
        this.setCreationDate(creationDate);
        this.setComment(comment);

        this.setRoles(roles);
    }

    // -------- Common Methods -----------

    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    @Override
    public boolean equals(final Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof UserEmbeddable))
        {
            return false;
        }
        final UserEmbeddable that = (UserEmbeddable) object;
        if ((this.getId() == null) || (that.getId() == null) || !this.getId().equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    @Override
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = (29 * hashCode) + (this.getId() == null ? 0 : this.getId().hashCode());

        return hashCode;
    }

    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    @Override
    public String toString()
    {
        final StringBuilder sb = new StringBuilder();
        sb.append("UserEmbeddable(=");
        sb.append("username: ");
        sb.append(this.getUsername());
        sb.append(", password: ");
        sb.append(this.getPassword());
        sb.append(", firstName: ");
        sb.append(this.getFirstName());
        sb.append(", lastName: ");
        sb.append(this.getLastName());
        sb.append(", email: ");
        sb.append(this.getEmail());
        sb.append(", isActive: ");
        sb.append(this.isIsActive());
        sb.append(", creationDate: ");
        sb.append(this.getCreationDate());
        sb.append(", comment: ");
        sb.append(this.getComment());
        sb.append(", id: ");
        sb.append(this.getId());
        sb.append(")");
        return sb.toString();
    }

}
