<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.andromda.timetracker.ejb3</groupId>
        <artifactId>timetracker-ejb3</artifactId>
        <version>3.4</version>
    </parent>
    <artifactId>war-base</artifactId>
    <packaging>war</packaging>
    <name>[${project.parent.artifactId} :: EJB3 Web Base] - ${project.artifactId} : ${project.version}</name>
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>common</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
            <type>ejb</type>
            <scope>provided</scope>
        </dependency>        
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>oro</groupId>
            <artifactId>oro</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- JSR-303 (Bean Validation) Implementation -->
        <!-- Provides portable constraints such as @Email -->
        <!-- Hibernate Validator is shipped in JBoss AS 7 -->
        <dependency>
            <artifactId>hibernate-validator</artifactId>
            <groupId>org.hibernate</groupId>
            <scope>provided</scope>
            <exclusions>
              <exclusion>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
              </exclusion>
            </exclusions>            
        </dependency>    

	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-search</artifactId>
		<version>${hibernate.search.version}</version>
		<exclusions>
			<exclusion>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
               
        <!-- GWT validation uses Hibernate Validator, and requires the sources 
          at compile time. -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-validator</artifactId>
          <version>${hibernate.validator.version}</version>          
          <scope>provided</scope>
          <classifier>sources</classifier>
          <exclusions>
            <exclusion>
              <groupId>org.slf4j</groupId>
              <artifactId>slf4j-api</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
                
        <!-- Import the Bean Validation API, which is used both on the server 
        and the client. -->                
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <!-- GWT validation also requires the validation API sources at compile 
          time -->
        <dependency>
          <groupId>javax.validation</groupId>
          <artifactId>validation-api</artifactId>
          <version>${validation.api.version}</version>
          <classifier>sources</classifier>
        </dependency>        
        
        <!--
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-jsf-cartridge-components</artifactId>
            -->
            <!-- 'unknown' because the version doesn't matter for system dependencies>
            <version>${andromda.version}</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/target/src/WEB-INF/lib/andromda-jsf-cartridge-components.jar</systemPath -->
            <!--
        </dependency>
        -->
        
        <dependency>
            <groupId>com.sun.facelets</groupId>
            <artifactId>jsf-facelets</artifactId>
        </dependency>   
             
        <!-- icefaces 
        <dependency>
            <groupId>org.icefaces</groupId>
            <artifactId>icefaces</artifactId>
        </dependency>
	<dependency>
	    <groupId>org.icefaces</groupId>
	    <artifactId>icefaces-comps</artifactId>
	</dependency>
	<dependency>
	    <groupId>org.icefaces</groupId>
	    <artifactId>icefaces-facelets</artifactId>
	</dependency>
	-->
        
    	<!-- richfaces -->
        <dependency>
          <groupId>org.richfaces.framework</groupId>
          <artifactId>richfaces-api</artifactId>
          <scope>provided</scope>
        </dependency>
                	
    	<dependency>
    	  <groupId>org.richfaces.framework</groupId>
    	  <artifactId>richfaces-impl</artifactId>
    	</dependency>
    	
    	<dependency>
    	  <groupId>org.richfaces.ui</groupId>
    	  <artifactId>richfaces-ui</artifactId>
    	</dependency>
	
    	<dependency>
    	  <groupId>org.richfaces.samples</groupId>
    	  <artifactId>glassX</artifactId>
    	</dependency>
    	  
    	<dependency>
    	  <groupId>org.richfaces.samples</groupId>
    	  <artifactId>darkX</artifactId>
    	</dependency>   
        
	<dependency>
		<groupId>org.testng</groupId>
		<artifactId>testng</artifactId>
		<version>${testng.version}</version>
		<scope>test</scope>
	</dependency>
		        
        <!-- replace this by slf4j-api and slf4j-simple
        http://pwu-developer.blogspot.com/2010/08/caused-by-javalangerror-this-version-of.html
        <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <scope>test</scope>
        </dependency>
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <!-- for jboss 5.1.0-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
           <!-- for jboss 5.1.0-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <!-- for jboss 5.1.0-->
            <scope>provided</scope>
        </dependency>

		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<version>${el.api.version}</version>
			<scope>provided</scope>
		</dependency>	
    		    
        	<dependency>
        	  <groupId>javax.ejb</groupId>
        	  <artifactId>ejb-api</artifactId>
        	  <scope>provided</scope>
		  <optional>true</optional> 
        	</dependency>
        	
        <!-- *************** Seam Dependencies *************** -->
	<dependency>
	  <groupId>org.jboss.seam</groupId>
	  <artifactId>jboss-seam</artifactId>
	  <version>${seam.version}</version>
	  <scope>provided</scope> <!-- needed for tomcat but not for jboss -->
	  <type>ejb</type>
	</dependency>    
        
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-ui</artifactId>
        </dependency>
        
        <!-- optional, but a reasonable requirement for a newly created project -->
        <dependency>
          <groupId>org.jboss.seam</groupId>
          <artifactId>jboss-seam-debug</artifactId>
        </dependency>
   
	<dependency>
		<groupId>org.jboss.seam</groupId>
		<artifactId>jboss-seam-remoting</artifactId>
		<version>${seam.version}</version>
		<scope>provided</scope>
		<exclusions>
			<exclusion>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
			</exclusion>
		</exclusions>
	</dependency>

	<dependency>
		<groupId>javassist</groupId>
		<artifactId>javassist</artifactId>
		<version>${javassist.version}</version>
		<scope>provided</scope> <!-- needed for tomcat but not for jboss -->
	</dependency>
		
        <dependency>
        	<groupId>asm</groupId>
        	<artifactId>asm</artifactId>
        	<version>${asm.version}</version>
        </dependency>		
       <dependency>
		<groupId>cglib</groupId>
		<artifactId>cglib</artifactId>
		<version>${cglib.version}</version>
	</dependency>		
		
        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-j2ee</artifactId>
        </dependency>
        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-ejb3-client</artifactId>
        </dependency>
        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-ejb3x</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>ejb3-persistence</artifactId>
        </dependency>
        <!--
        <dependency>
            <groupId>hibernate-entitymanager</groupId>
            <artifactId>ejb3-persistence</artifactId>
        </dependency>
        -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId> 
            <artifactId>hibernate-core</artifactId>
        </dependency>              

	<!-- *************** Drools / jBPM Dependency *************** -->

	<dependency>
		<groupId>org.drools</groupId>
		<artifactId>drools-core</artifactId>
		<version>${drools.version}</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.drools</groupId>
		<artifactId>drools-compiler</artifactId>
		<version>${drools.version}</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.mvel</groupId>
		<artifactId>mvel2</artifactId>
		<version>${org.mvel.mvel2.version}</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.jbpm</groupId>
		<artifactId>jbpm-jpdl</artifactId>
		<version>${jbpm.jpdl.version}</version>
		<scope>provided</scope>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>

        <!-- gwt-user is required at runtime because we use some of the client/server 
        shared APIs such as RegExp, so scope is 'compile' rather than 'provided'. -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwt.version}</version>
            <!--<scope>compile</scope> error in deployment -->
            <scope>provided</scope> <!-- prevents from including this in war -->
        </dependency>
        <!--
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <version>${gwt.version}</version>
            <scope>provided</scope> --><!-- prevents from including this in war --><!--
        </dependency>

        <dependency>
             <groupId>com.google.gwt</groupId>
             <artifactId>gwt-servlet</artifactId>
             <version>${gwt.version}</version>
            <scope>compile</scope>
        </dependency>
        -->
	<dependency>
		<groupId>xerces</groupId>
		<artifactId>xercesImpl</artifactId>
		<version>${xerces.version}</version>
		<scope>provided</scope>
		<exclusions>
			<exclusion>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
 
	<dependency>
		<groupId>org.jboss.el</groupId>
		<artifactId>jboss-el</artifactId>
		<version>${jboss.el.version}</version>
		<scope>provided</scope>
	</dependency>
	 
       <dependency>
               <groupId>org.hibernate.javax.persistence</groupId>
               <artifactId>hibernate-jpa-2.0-api</artifactId>
               <version>${hibernate.jpa.api.version}</version>
               <scope>provided</scope>
       </dependency>	
         
        <dependency>
            <groupId>nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
            <version>${nekohtml.version}</version>
            <scope>provided</scope>
        </dependency>
       		
    </dependencies>
    
    <properties>    
    	<target.dir>target</target.dir>
    </properties>
    	    
    <build>
        <finalName>${project.parent.artifactId}</finalName>

        <plugins>
            <!-- GWT plugin to compile client-side java code to javascript and 
            to run GWT development mode -->
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>gwt-maven-plugin</artifactId>
              <version>${maven.gwt.plugin.version}</version>
              <configuration>
                <inplace>true</inplace>
                <logLevel>INFO</logLevel>
                <extraJvmArgs>-Xmx512m</extraJvmArgs>
                <!-- Configure GWT's development mode (formerly known as hosted 
                  mode) to not start the default server (embedded jetty), but to download the 
                  HTML host page from the configured runTarget. -->
                <noServer>true</noServer>
                <runTarget>http://localhost:8180/timetracker-ejb3/HelloWorldGWT.html</runTarget>
             
              </configuration>
              <executions>
                <execution>
                  <goals>
                    <goal>resources</goal>
                    <goal>compile</goal>
                  </goals>
                </execution>
                <execution>
                  <id>gwt-clean</id>
                  <phase>clean</phase>
                  <goals>
                    <goal>clean</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven.war.plugin.version}</version>
                <configuration>
                    <!-- the default value is the filter list under build -->
          	    <!-- specifying a filter will override the filter list under build -->
          	    <filters>
          	      <filter>${home.dir}/filters/${project.parent.artifactId}-${environment}.properties</filter>
          	    </filters>
          	    <webResources>
          	      <webResource>
          	        <directory>${basedir}/src/main/webapp/WEB-INF</directory>
          	        <targetPath>WEB-INF</targetPath>
          	        <filtering>true</filtering>
          	      </webResource>
          	    </webResources>                
                    <!--<warSourceDirectory>${target.dir}/src/main/webapp</warSourceDirectory>-->
                    <!-- Needed for mvn 2.1 with war-plugin 2.1. See http://jira.codehaus.org/browse/MWAR-187 -->
                    <!--
                    <useCache>false</useCache>
                    <excludes>**/*.java</excludes>
                    -->
                    <!--packagingExcludes>**/aopa*.jar,**/cglib-*.jar,**/commons-codec*.jar,**/commons-fileu*.jar,**/commons-logging*.jar,**/hibernate-validator*.jar,**/spring-a*.jar,**/spring-bean*.jar,**/spring-co*.jar,**/spring-expr*.jar,**/spring-tx*.jar,**/spring-web*.jar</packagingExcludes-->
                    <!-- We must exclude GWT client local classes from the deployment, 
                      or classpath scanners such as Hibernate and Weld get confused when the webapp 
                      is bootstrapping. -->
                    <!-- workaround for openejb exluded ejb-jar.xml and components.xml from **/WEB-INF/classes/META-INF/ -->
                    <!--<packagingExcludes>**/javax/**/*.*,**/client/local/**/*.class,**/WEB-INF/classes/META-INF/*.xml</packagingExcludes>-->     
                    <packagingExcludes>**/javax/**/*.*,**/client/local/**/*.class</packagingExcludes>    
                    <!--<webappDirectory>${jboss.deploy.directory}/${project.parent.artifactId}</webappDirectory>-->
                    <archive>
                      <manifestEntries>
                        <Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies>
                      </manifestEntries>
                    </archive>  
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.andromda.maven.plugins</groupId>
                <artifactId>andromdapp-maven-plugin</artifactId>
            </plugin>
            <!-- tomcat deploy use mvn tomcat:deploy -->
            <!-- tomcat run use mvn tomcat:run -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <version>${maven.tomcat.plugin.version}</version>
                <configuration>
                    <url>${deploy.url}</url>
                    <server>tomcat</server> <!-- check server in settings.xml -->
                    <!--<mode>context</mode>-->
                    <path>/${product.name}</path>
                    <!--
                    <systemProperties>
                      <application.property.dir>${env.PROJECT_DEV}/etc</application.property.dir>
                    </systemProperties>      
                    -->              
                </configuration>
            </plugin>                  
            <!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
            <!-- To use, set the JBOSS_HOME environment variable and run:
             mvn package jboss-as:deploy -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${maven.jboss.as.maven.plugin.version}</version>
            </plugin>
            <!-- mvn -Dslf4j=false -Dlog4j.configuration=file:../../etc/log4j.lcf -Dapplication.property.dir=../../etc jetty:run-war -->
            <!-- mvn jetty:run-war >jetty.log -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>${maven.jetty.plugin.version}</version>
                <configuration>
		    <scanIntervalSeconds>10</scanIntervalSeconds>
          	    <connectors>
          	      <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
          	        <port>8050</port>
          	        <maxIdleTime>60000</maxIdleTime>
          	      </connector>
          	    </connectors>                
          	    <!--
                    <webAppSourceDirectory>${project.basedir}/${target.dir}/src/main/java</webAppSourceDirectory>
                    <webAppConfig>
                        <contextPath>/</contextPath>
                        <baseResource implementation="org.mortbay.resource.ResourceCollection">
                            <resourcesAsCSV>${project.basedir}/src/main/webapp, ${project.basedir}/${target.dir}/src/main/webapp</resourcesAsCSV>
                        </baseResource>
                        <contextPath>/${application.id}-${project.version}</contextPath>
                    </webAppConfig>
                    -->
                </configuration>
                <!-- jsp 2
		<dependencies>
                    <dependency>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp-api-2.0</artifactId>
                        <version>6.1.14</version>
                    </dependency>
                    <dependency>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-compiler-jdt</artifactId>
                        <version>5.5.15</version>
                    </dependency>
                    <dependency>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-compiler</artifactId>
                        <version>5.5.15</version>
                    </dependency>
                    <dependency>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-runtime</artifactId>
                        <version>5.5.15</version>
                    </dependency>
                    <dependency>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp-2.1</artifactId>
                        <version>6.1.14</version>
                        <scope>provided</scope>
                        <exclusions>
                            <exclusion>
                                <groupId>org.mortbay.jetty</groupId>
                                <artifactId>jsp-api-2.1</artifactId>
                            </exclusion>
                            <exclusion>
                                <groupId>org.mortbay.jetty</groupId>
                                <artifactId>start</artifactId>
                            </exclusion>
                            <exclusion>
                                <groupId>org.mortbay.jetty</groupId>
                                <artifactId>jetty-annotations</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
		</dependencies>                
		-->
            </plugin>
        </plugins>
    </build>
</project>
