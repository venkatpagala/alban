<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.andromda.timetracker</groupId>
    <artifactId>timetracker</artifactId>
    <packaging>pom</packaging>
    <version>3.4-SNAPSHOT</version>
    <name>TimeTracker</name>
    <description>The TimeTracker Project.</description>
    
    <parent>
	<groupId>com.nabla.project.uml</groupId>
	<artifactId>nabla</artifactId>
	<version>1.0</version>
    </parent>
        
    <dependencyManagement>
        <dependencies>
             <!--
	     <dependency>
               <groupId>${project.groupId}</groupId>
               <artifactId>timetracker-sar</artifactId>
               <version>${project.version}</version>
               <type>sar</type>
             </dependency>        
             -->
            <dependency>
                <groupId>org.andromda.cartridges</groupId>
                <artifactId>andromda-jsf-cartridge-components</artifactId>
                <version>${andromda.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.core</groupId>
                <artifactId>myfaces-api</artifactId>
                <!--<version>1.2.9</version>-->
                <version>${myfaces.version}</version>                
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.core</groupId>
                <artifactId>myfaces-impl</artifactId>
                <!--<version>1.2.9</version>-->
                <version>${myfaces.version}</version>
            </dependency>            
            <dependency>
                <groupId>org.apache.myfaces.tomahawk</groupId>
                <artifactId>tomahawk12</artifactId>         
                <version>${org.apache.myfaces.tomahawk.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xmlParserAPIs</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--
            <dependency>
                <groupId>org.apache.myfaces.tomahawk</groupId>
                <artifactId>tomahawk20</artifactId>
                <version>${org.apache.myfaces.tomahawk.version}</version>
            </dependency>
            -->
            <!-- validation dependencies -->
            <dependency>
                <groupId>org.apache.myfaces.extensions.validator</groupId>
                <artifactId>myfaces-extval-core</artifactId>
                <version>${myfaces.extval.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
                <artifactId>myfaces-extval-property-validation</artifactId>
                <version>${myfaces.extval.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
                <artifactId>myfaces-extval-bean-validation</artifactId>
                <version>${myfaces.extval.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.extensions.validator.component-support-modules</groupId>
                <artifactId>myfaces-extval-generic-support</artifactId>
                <version>${myfaces.extval.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>cglib</groupId>
                        <artifactId>cglib</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.extensions.validator.component-support-modules</groupId>
                <artifactId>myfaces-extval-trinidad-support</artifactId>
                <version>${myfaces.extval.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.trinidad</groupId>
                <artifactId>trinidad-api</artifactId>
                <version>${org.apache.myfaces.trinidad.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.trinidad</groupId>
                <artifactId>trinidad-impl</artifactId>
                <version>${org.apache.myfaces.trinidad.version}</version>
            </dependency>

	    <!--
            <dependency>
                <groupId>jboss</groupId>
                <artifactId>jboss-j2ee</artifactId>
                <version>${jboss.version}</version>
                <scope>provided</scope>
            </dependency>
            -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate3.version}</version>
                <!--<version>${hibernate.entitymanager.version}</version>-->
                <exclusions>
                    <exclusion>
                        <groupId>cglib</groupId>
                        <artifactId>cglib</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javassist</groupId>
                        <artifactId>javassist</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.transaction</groupId>
                        <artifactId>jta</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring3.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring3.version}</version>
            </dependency>
            <!-- Uncomment out below if using JDBC or aop or spring test>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency -->
            
            <!--dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.18</version>
            </dependency-->
        </dependencies>
    </dependencyManagement>
    <build>
        <defaultGoal>install</defaultGoal>
        <pluginManagement>
            <plugins>         
                <!--     
		<plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>jboss-packaging-maven-plugin</artifactId>
                  <version>2.0-SNAPSHOT</version>
                </plugin>     
                -->                  
            </plugins>
        </pluginManagement>
        <plugins>
             <!--
	     <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>jboss-packaging-maven-plugin</artifactId>
               -->
               <!-- Enable 'jboss-sar', etc., as a recoginized maven packaging type -->
               <!--
               <extensions>true</extensions>
             </plugin>   
             -->          
        </plugins>
    </build>
    <modules>
        <!-- Save the values used to generate this project from andromdapp
        ejb3Persistence=$ejb3Persistence
        ear=true
        ejb=$ejb
        ejb3=$ejb3
        transactionPersistenceType=spring
        jsr181Webservice=$jsr181Webservice
        hibernate=$hibernate
        spring=true
        webservice=false
        web=true
        struts=$struts
        jsf=true
        cxf=$cxf
        rest=$rest
        ear=true
        jbossSeam=$jbossSeam
        soapStack=$soapStack
        -->
        <module>mda</module>
        <module>common</module>
        <module>core</module>
        <module>web</module>
        <!--<module>sar</module>-->
        <module>app</module>
    </modules>
    <properties>
        <!--<andromda.version>3.4-SNAPSHOT</andromda.version>-->       
        <!-- H2 Database with No emulation mode and Hibernate dialect, for local in-memory testing -->
        <testdb.groupId>com.h2database</testdb.groupId>
        <testdb.artifactId>h2</testdb.artifactId>
        <testdb.version>1.3.160</testdb.version>
        <testdb.driver>org.h2.Driver</testdb.driver>
        <!-- See http://www.h2database.com/html/features.html#database_url (mixed mode) -->
        <testdb.url>jdbc:h2:~/timetracker;AUTO_SERVER=TRUE;AUTO_RECONNECT=TRUE;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</testdb.url>
        <testdb.username>sa</testdb.username>
        <testdb.password>sa</testdb.password>
        <testdb.dialect>org.hibernate.dialect.H2Dialect</testdb.dialect>
        <!--
        <testdb.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</testdb.dialect>
            Change this to generate to the correct MDA database mappings,
            For H2 use: H2SQL
            For MySql use: MySQL
            For Hypersonic use: HypersonicSql
            For Oracle9i use: Oracle9i
            For DB2 use: DB2
            For Informix use: InformixDB
            For MSSQL use: MSSQL
            For Pointbase use: PointBase
            For Postgres use: PostgreSQL
            For Sybase use: Sybase
            For SapDB use: SapDB
            For Derby use: Derby
        -->
        <sql.mappings>H2Sql</sql.mappings>
        <!--
            Change this for the appropriate database
            For Derby use: org.hibernate.dialect.DerbyDialect
            For MySql use: org.hibernate.dialect.MySQL5Dialect
            For MySql InnoDB use: org.hibernate.dialect.MySQL5InnoDBDialect
            For MySql MyISAM use: org.hibernate.dialect.MySQLMyISAMDialect
            For H2 use: org.hibernate.dialect.H2Dialect
            For Hypersonic use: org.hibernate.dialect.HSQLDialect
            For Oracle any version use: org.hibernate.dialect.OracleDialect
            For Oracle9i/10g use: org.hibernate.dialect.Oracle10gDialect
            For DB2 use: org.hibernate.dialect.DB2Dialect or org.hibernate.dialect.DB2390Dialect org.hibernate.dialect.DB2400Dialect
            For Informix use: org.hibernate.dialect.InformixDialect
            For MSSQL use: org.hibernate.dialect.SQLServerDialect
            For Pointbase use: org.hibernate.dialect.PointbaseDialect
            For Postgres use: org.hibernate.dialect.PostgreSQLDialect
            For Sybase use: org.hibernate.dialect.SybaseDialect or org.hibernate.dialect.Sybase11Dialect
            For Sybase Anywhere use: org.hibernate.dialect.SybaseAnywhereDialect
            For SapDB use: org.hibernate.dialect.SAPDBDialect
            For Progress use: org.hibernate.dialect.ProgressDialect
            For Derby use: org.hibernate.dialect.DerbyDialect
        -->
        <hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
        <jboss.home>${env.JBOSS_HOME}</jboss.home>
        <application.id>timetracker</application.id>
        <application.package>org.andromda.timetracker</application.package>
        <application.name>TimeTracker</application.name>
        <application.version>${project.version}</application.version>
        <dataSource.name>jdbc/${application.id}</dataSource.name>
        <!-- JBoss7 uses java:/ and everyone else uses java:comp/env for server compatibility -->
        <dataSource>java:/${dataSource.name}</dataSource>
        <!--
        <hibernate.version>3.6.7.Final</hibernate.version>
        <spring.version>3.0.6.RELEASE</spring.version>
        -->
    </properties>
    <profiles>
        <profile>
            <id>db</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--
                Change driver path and jar for appropriate database
                    For MySQL use: mysql-connector-java-X-bin.jar
                    For H2 use: h2-version.jar
                    For Hypersonic use: hsqldb.jar
                -->
                <jdbc.driver.jar>
                    <!-- JBoss5 gives classloader exceptions if the JDBC driver is bundled with the EAR -->
                    ${settings.localRepository}/com/h2database/${testdb.artifactId}/${testdb.version}/${testdb.artifactId}-${testdb.version}.jar
                </jdbc.driver.jar>
                <!--
                    Change driver for appropriate database
                    For MySQL use: com.mysql.jdbc.Driver
                    For H2 use: org.h2.jdbcDriver
                    For Hypersonic use: org.hsqldb.jdbcDriver
                    For Oracle9i use: oracle.jdbc.driver.OracleDriver
                    For DB2 use: COM.ibm.db2.jdbc.app.DB2Driver
                    For Informix use: com.informix.jdbc.IfxDriver
                    For MSSQL use: com.microsoft.jdbc.sqlserver.SQLServerDriver
                    For Pointbase use: com.pointbase.jdbc.jdbcUniversalDriver
                    For Postgres use: org.postgresql.Driver
                    For Sybase use: com.sybase.jdbc2.jdbc.SybDataSource
                    For SapDB use: com.sap.dbtech.jdbc.DriverSapDB
                    For Progress use: com.progress.sql.jdbc.JdbcProgressDriver
                    For Derby use: org.apache.derby.jdbc.EmbeddedDriver
                -->
                <jdbc.driver>org.h2.Driver</jdbc.driver>
                <!--
                    Change connection url for appropriate database
                    For MySQL use: jdbc:mysql://localhost:3306/timetracker
                    For H2 use: jdbc:h2
                    For Hypersonic use: jdbc:hsqldb:hsql://127.0.0.1:1701
                    For Oracle9i use: jdbc:oracle:thin:@localhost:1521:yoursid
                    For DB2 use: jdbc:db2:timetracker
                    For Informix use: jdbc:informix-sqli://localhost:1557/timetracker:INFORMIXSERVER=myserver
                    For MSSQL use: jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=timetracker
                    For Pointbase use: jdbc:pointbase:server://@pointbase.server@:@pointbase.port/pointbase.timetracker@,new
                    For Postgres use: jdbc:postgresql://localhost/timetracker
                    For Sybase use: jdbc:sybase:Tds:localhost:5000/timetracker?JCONNECT_VERSION=6
                    For SapDB use: jdbc:sapdb://127.0.0.1/timetracker
                    For Progress use: jdbc:JdbcProgress:T:localhost:3305:timetracker
                -->
                <jdbc.url>
                    jdbc:h2:~/timetracker;AUTO_SERVER=TRUE;AUTO_RECONNECT=TRUE;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1
                </jdbc.url>
                <jdbc.username>sa</jdbc.username>
                <jdbc.password>sa</jdbc.password>
                <!--
                    Change exception sorter class name for appropriate database
                    For MySQL use: org.jboss.resource.adapter.jdbc.vendor.MySQLExceptionSorter
                    For H2 use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Hypersonic use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Oracle9i use: org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter
                    For DB2 use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Informix use: org.jboss.resource.adapter.jdbc.vendor.InformixExceptionSorter
                    For MSSQL use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Pointbase use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Postgres use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Sybase use: org.jboss.resource.adapter.jdbc.vendor.SybaseExceptionSorter
                    For SapDB use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Progress use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                -->
                <jdbc.exception.sorter>
                    org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                </jdbc.exception.sorter>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.andromda.maven.plugins</groupId>
                            <artifactId>andromdapp-maven-plugin</artifactId>
                            <version>${andromda.version}</version>
                            <!-- provides the injection of the script wrapper support into the class files (this should only
                                 be done when developing locally), uncomment this executions element to enable
                            <executions>
                                <execution>
                                    <id>instrument-scripts</id>
                                    <goals>
                                        <goal>instrument-scripts</goal>
                                    </goals>
                                </execution>
                            </executions>
                            -->
                            <configuration>
                                <scriptWrapper>org.andromda.scriptwrappers.GroovyScriptWrapper</scriptWrapper>
                                <locations>
                                    <location>
                                        <rootPath>${project.basedir}/src/main/java</rootPath>
                                        <!-- adjust these to include or exclude specific files, by default
                                             all files found in the rootPath are considered
                                        <includes>
                                            <include>relative/path/to/file/to/include/SomeClass.java</include>
                                        </includes>
                                        <excludes>
                                            <exclude>relative/path/to/file/to/include/SomeClass.java</exclude>
                                        </excludes>
                                        -->
                                    </location>
                                </locations>
                            </configuration>
                        </plugin>
                        <!--
                        <plugin>
                            <artifactId>maven-compiler-plugin</artifactId>
                            <version>2.3.2</version>
                            <configuration>
                                <source>1.5</source>
                                <target>1.5</target>
                                <compilerArgument>-Xlint:cast,unchecked,fallthrough,finally,serial</compilerArgument>
                                <showDeprecation>true</showDeprecation>
                                <showWarnings>true</showWarnings>
                            </configuration>
                        </plugin>
                        <plugin>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>2.10</version>
                        </plugin>
                        <plugin>
                            <artifactId>maven-site-plugin</artifactId>
                            <version>2.2</version>
                            -->
                            <!--dependencies>
                                <dependency>
                                    <groupId>org.apache.maven.doxia</groupId>
                                    <artifactId>doxia-module-twiki</artifactId>
                                    <version>1.1.3</version>
                                </dependency>
                            </dependencies-->
                            <!--
                        </plugin>
                        -->
                    </plugins>
                </pluginManagement>
            </build>
            <!--
            <distributionManagement>
                <repository>
                    <id>andromda-repository</id>
                    <name>AndroMDA Repository</name>
                    <url>file:/var/www/maven2</url>
                    <uniqueVersion>false</uniqueVersion>
                </repository>
                <snapshotRepository>
                    <id>andromda-snapshots</id>
                    <name>AndroMDA Snapshot Repository</name>
                    <url>file:/var/www/maven2</url>
                    <uniqueVersion>false</uniqueVersion>
                </snapshotRepository>
                <site>
                    <id>website</id>
                    <url>file:/var/www/docs/samples/timetracker</url>
                </site>
            </distributionManagement>
            -->
        </profile>       
    </profiles>
</project>
