// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package org.andromda.test.howto1.e;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * Autogenerated POJO EJB class for Car containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 *
 *
 */
@Entity
@Table(name = "CAR")
@NamedQuery(name = "Car.findAll", query = "select car from Car AS car")
public class Car implements Serializable, Comparable<Car> {

    private static final long serialVersionUID = 5852341216223813462L;

    // ----------- Attribute Definitions ------------

    private String            serial;
    private String            name;
    private String            type;

    // --------------- Constructors -----------------

    /**
     * Default empty constructor
     */
    public Car() {
    }

    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param serial Value for the serial property
     * @param name Value for the name property
     * @param type Value for the type property
     */
    public Car(final String serial, final String name, final String type) {
        this.setSerial(serial);
        this.setName(name);
        this.setType(type);
    }

    // -------- Attribute Accessors ----------

    /**
     * Get the serial property.
     *
     * @return String The value of serial
     */
    @Id
    @Column(name = "SERIAL", unique = true, nullable = false, insertable = true, updatable = true)
    public String getSerial() {
        return this.serial;
    }

    /**
     * Set the serial property.
     * @param value the new value
     */
    public void setSerial(final String value) {
        this.serial = value;
    }

    /**
     * Get the name property.
     *
     * @return String The value of name
     */
    @Column(name = "NAME", insertable = true, updatable = true)
    public String getName() {
        return this.name;
    }

    /**
     * Set the name property.
     * @param value the new value
     */
    public void setName(final String value) {
        this.name = value;
    }

    /**
     * Get the type property.
     *
     * @return String The value of type
     */
    @Column(name = "TYPE", unique = true, nullable = false, insertable = true, updatable = true)
    public String getType() {
        return this.type;
    }

    /**
     * Set the type property.
     * @param value the new value
     */
    public void setType(final String value) {
        this.type = value;
    }

    // ------------- Relations ------------------

    // -------- Common Methods -----------

    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    @Override
    public boolean equals(final Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof Car)) {
            return false;
        }
        final Car that = (Car) object;
        if ((this.getSerial() == null) || (that.getSerial() == null) || !this.getSerial().equals(that.getSerial())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    @Override
    public int hashCode() {
        int hashCode = 0;
        hashCode = (29 * hashCode) + (this.getSerial() == null ? 0 : this.getSerial().hashCode());

        return hashCode;
    }

    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder();
        sb.append("Car(=");
        sb.append("serial: ");
        sb.append(this.getSerial());
        sb.append(", name: ");
        sb.append(this.getName());
        sb.append(", type: ");
        sb.append(this.getType());
        sb.append(")");
        return sb.toString();
    }

    /**
     * @see Comparable#compareTo(T)
     */
    @Override
    public int compareTo(final Car o) {
        int cmp = 0;
        if (this.getSerial() != null) {
            cmp = this.getSerial().compareTo(o.getSerial());
        } else {
            if (this.getName() != null) {
                cmp = (cmp != 0 ? cmp : this.getName().compareTo(o.getName()));
            }
            if (this.getType() != null) {
                cmp = (cmp != 0 ? cmp : this.getType().compareTo(o.getType()));
            }
        }
        return cmp;
    }
}
