// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package org.andromda.test.howto9.b;

import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorType;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

/**
 * TODO: Model Documentation for org.andromda.test.howto9.b.Vehicle
 *
 * Autogenerated POJO EJB class for Vehicle containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 */
@Entity
@Table(name="VEHICLE")
@Inheritance(strategy=InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name="TYPE", discriminatorType=DiscriminatorType.STRING)
@DiscriminatorValue("V")
@NamedQuery(name="Vehicle.findAll", query="SELECT v FROM Vehicle AS v")
public class Vehicle implements Serializable, Comparable<Vehicle>{
    private static final long serialVersionUID = 7054703851638781109L;

    // ----------- 4 Attribute Definitions ------------
    private String make;
    private String model;
    private Short age;
    private String serial;

    // -------- 4 Attribute Accessors ----------
    /**
     * TODO: Model Documentation for org.andromda.test.howto9.b.Vehicle.make
     * Get the make property.
     * @return String The value of make
     */
    @Column(name="MAKE", unique=true, nullable=false, insertable=true, updatable=true)
    @NotNull(message="make is required")
    public String getMake()
    {
        return this.make;
    }

    /**
     * TODO: Model Documentation for org.andromda.test.howto9.b.Vehicle.make
     * Set the make property.
     * @param value the new value
     */
    public void setMake(String value)
    {
        this.make = value;
    }

    /**
     * TODO: Model Documentation for org.andromda.test.howto9.b.Vehicle.model
     * Get the model property.
     * @return String The value of model
     */
    @Column(name="MODEL", unique=true, nullable=false, insertable=true, updatable=true)
    @NotNull(message="model is required")
    public String getModel()
    {
        return this.model;
    }

    /**
     * TODO: Model Documentation for org.andromda.test.howto9.b.Vehicle.model
     * Set the model property.
     * @param value the new value
     */
    public void setModel(String value)
    {
        this.model = value;
    }

    /**
     * TODO: Model Documentation for org.andromda.test.howto9.b.Vehicle.age
     * Get the age property.
     * @return Short The value of age
     */
    @Column(name="AGE", unique=true, nullable=false, insertable=true, updatable=true)
    @NotNull(message="age is required")
    public Short getAge()
    {
        return this.age;
    }

    /**
     * TODO: Model Documentation for org.andromda.test.howto9.b.Vehicle.age
     * Set the age property.
     * @param value the new value
     */
    public void setAge(Short value)
    {
        this.age = value;
    }

    /**
     * TODO: Model Documentation for org.andromda.test.howto9.b.Vehicle.serial
     * Get the serial property.
     * @return String The value of serial
     */
    @Id
    @Column(name="SERIAL", unique=true, nullable=false, insertable=true, updatable=true)
    @NotNull(message="serial is required")
    public String getSerial()
    {
        return this.serial;
    }

    /**
     * TODO: Model Documentation for org.andromda.test.howto9.b.Vehicle.serial
     * Set the serial property.
     * @param value the new value
     */
    public void setSerial(String value)
    {
        this.serial = value;
    }


    // ------------- 0 Relations ------------------
    // --------------- Constructors -----------------

    /**
     * Default empty no-arg constructor
     */
    public Vehicle()
    {
        // Default empty constructor
    }

    /**
     * Constructor with all updatable Entity attributes except auto incremented identifiers.
     *
     * @param make String value for the make property true  1
     * @param model String value for the model property true  1
     * @param age Short value for the age property false  0
     * @param serial String value for the serial property true  1
     */
    public Vehicle(String make, String model, Short age, String serial)
    {
        setMake(make);
        setModel(model);
        setAge(age);
        setSerial(serial);
    }



    // -------- Common Methods -----------
    /**
     * Indicates if the argument is of the same type and all values are equal.
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     * @see Object#equals(Object)
     */
    @Override
    public boolean equals(Object object)
    {
        if (null == object)
        {
            return false;
        }
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof Vehicle))
        {
            return false;
        }
        final Vehicle that = (Vehicle)object;
        if (this.getSerial() == null || that.getSerial() == null || !this.getSerial().equals(that.getSerial()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     * @return int The hash code value
     * @see Object#hashCode
     */
    @Override
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getSerial() == null ? 0 : getSerial().hashCode());

        return hashCode;
    }

    /**
     * Returns a String representation of the object
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     * @see Object#toString
     */
    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("Vehicle(");
        sb.append(" make=").append(getMake());
        sb.append(" model=").append(getModel());
        sb.append(" age=").append(getAge());
        sb.append(" serial=").append(getSerial());
        sb.append(")");
        return sb.toString();
    }

    /**
     * @see Comparable#compareTo
     */
            @Override
    public int compareTo(Vehicle o)
    {
        int cmp = 0;
        if (this.getSerial() != null)
        {
            cmp = this.getSerial().compareTo(o.getSerial());
        }
        else
        {
            if (this.getMake() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getMake().compareTo(o.getMake()));
            }
            if (this.getModel() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getModel().compareTo(o.getModel()));
            }
            if (this.getAge() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getAge().compareTo(o.getAge()));
            }
        }
        return cmp;
    }


}