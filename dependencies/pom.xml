<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- @version $Revision: $ $Date: $ $Author: $ $State: $ -->
	
	<parent>
	    <groupId>com.nabla</groupId>
	    <artifactId>users</artifactId>
	    <version>1.0</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.nabla.project</groupId>
	<artifactId>dependencies</artifactId>
	<packaging>pom</packaging>

	<name>Dependencies pom file</name>
	<description>The Dependencies pom file is a superpom to	centralize all third parties</description>
	<inceptionYear>2012</inceptionYear>
	<url>http://maven.nabla.mobi</url>

	<organization>
		<name>Nabla Software</name>
		<url>http://code.google.com/p/alban</url>
	</organization>

	<prerequisites>
		<maven>3.0.4</maven>
	</prerequisites>

	<issueManagement>
		<!--
		<system>bugzilla</system>
		<url>http://localhost</url>
		-->
		<system>Google Code</system>
		<url>http://code.google.com/p/alban/issues/list</url>
	</issueManagement>

	<!--
		Mailing	lists are a great tool for keeping in touch with people	about
		a project. Most	mailing	lists are for developers and users.
	-->
	<mailingLists>
		<mailingList>
			<name>${project.name} Nabla dev	mailing	list</name>
			<post>dev@nabla.mobi</post>
			<!--<archive>https://alban.andrieu.nabladev.net/servlets/SummarizeList?listName=dev</archive> -->
		</mailingList>
	</mailingLists>

	<ciManagement>
		<!--
		<system>hudson</system>
		<url>http://localhost:8070/hudson/</url>
		-->
		<system>jenkins</system>
		<url>https://nabla.ci.cloudbees.com/</url>
		<notifiers>
			<notifier>
				<type>mail</type>
				<sendOnError>true</sendOnError>
				<sendOnFailure>true</sendOnFailure>
				<sendOnSuccess>false</sendOnSuccess>
				<sendOnWarning>false</sendOnWarning>
				<configuration>
					<address>dev@nabla.mobi</address>
				</configuration>
			</notifier>
		</notifiers>
	</ciManagement>
	<!--http://blog.fastconnect.fr/?p=275 -->
	<scm>
		<connection>scm:svn:http://alban.googlecode.com/svn/${project.svn.path}</connection>
		<developerConnection>scm:svn:https://alban.googlecode.com/svn/${project.svn.path}</developerConnection>
		<url>https://alban.googlecode.com/svn/${project.svn.path}</url>
		<!-- <connection>scm:${scm.base}/users/${project.svn.path}/</connection>
			<developerConnection>scm:${scm.base}/users/${project.svn.path}/</developerConnection>
			<url>${scm.base}/users/${kplustp.workspace}/#dirlist</url> -->
		<tag>HEAD</tag>
	</scm>
	<developers>
		<developer>
			<id>albandri</id>
			<name>Andrieu Alban</name>
			<email>alban.andrieu@nabla.mobi</email>
			<url>http://plus.google.com/116805748993308767756/about</url>
			<organization>Nabla</organization>
			<roles>
				<role>Java Developer</role>
				<role>C++ Developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>
	<!--
		Contributors are like developers yet play an ancillary role in a
		project's lifecycle.
	-->
	<contributors>
		<contributor>
			<name>Alban Andrieu</name>
			<email>alban.andrieu@nabla.mobi</email>
			<url>http://plus.google.com/116805748993308767756/about</url>
			<organization>Nabla</organization>
			<roles>
				<role>Project Leader</role>
				<role>Project Manager</role>
				<role>Architect</role>
				<role>Technical	Analyst</role>
			</roles>
			<timezone>+1</timezone>
		</contributor>

	</contributors>
	<licenses>
		<license>
			<!--<name>GNU Lesser General Public License, Version 2.1</name>-->
			<name>Nabla</name>
            		<url>http://www.gnu.org/licenses/lgpl-2.1.txt</url>
            		<!-- TODO remove hard coded LICENSE-1.0.txt -->
            		<!--<url>../build-tools/src/main/resources/project/LICENSE-1.0.txt</url>-->
            		<!--<distribution>repo</distribution>-->
			<distribution>perso</distribution>
			<comments>This program is the property of Nabla</comments>
		</license>
	</licenses>

	<profiles>
		<!-- ================= START Environment Profiles ================= -->
    		<profile>
    		  <id>env.WORKSPACE.default</id>
    		  <activation>
			<property>
			  <name>!env.WORKSPACE</name>
			</property>
    		  </activation>
    		  <properties>
			<env.WORKSPACE>${env.HOME}</env.WORKSPACE>
    		  </properties>
    		</profile>	
		<profile>
		  <!-- e.g: mvn	initialize -Pshow-properties -->
		  <id>show-properties</id>
		  <activation>
			<property>
				<name>profile.activation</name>
			</property>
		  </activation>
		  <build>
		    <plugins>
		      <plugin>
			<groupId>org.codehaus.gmaven</groupId>
			<artifactId>gmaven-plugin</artifactId>
			<version>${maven.gmaven.plugin.version}</version>
			<executions>
			  <execution>
			    <id>g-show-properties</id>
			    <phase>initialize</phase>
			    <goals>
			      <goal>execute</goal>
			    </goals>
			    <configuration>
			      <source>
			      <![CDATA[
				def profiles = project.getActiveProfiles();
				log.info "========================================================================"
				log.info "Active profiles:"
				log.info "========================================================================"
				if(profiles.size > 0) {
				  profiles.each{ profile ->
				    log.info profile.id;
				  }
				}
				else {
				  log.info "No active profiles"
				}

				// Pattern to match ${property}	placeholders
				def placeholderPattern = ~/\$\{(.*?)\}/;
				log.info ""
				log.info "========================================================================"
				log.info "Maven	project.properties:"
				log.info "========================================================================"
				if (project.parent) log.info "project.parent.basedir  =	$project.parent.basedir";
				log.info "project.basedir	  = $project.basedir";
				log.info "project.artifactId	  = $project.artifactId";
				log.info "project.build.directory = $project.build.directory";
				log.info "project.build.finalName = $project.build.finalName";

				project.properties.sort{it.key}.each { key, value ->
				  def matcher =	placeholderPattern.matcher(value);
				  if(matcher)
				    log.warn "NON EXISTING PROPERTY IN PLACEHOLDER: $key = $value"
				  else
				    log.info "$key = $value";
				}
				log.info "========================================================================"
			      ]]>
			      </source>
			    </configuration>
			  </execution>
			</executions>
		      </plugin>
		    </plugins>
		  </build>
		</profile>
		<!-- ================= END Environment Profiles	================= -->

		<profile>
			<id>maven-3-site</id>
			<activation>
				<file>
					<!-- This employs that the basedir expression is only recognized by
						Maven 3.x (see MNG-2363) -->
					<exists>${basedir}</exists>
				</file>
			</activation>
			<properties>
				<maven.test.skip>false</maven.test.skip>
				<lastModifiedCheck>true</lastModifiedCheck> <!-- for mvn site to work with andromda-cartridge-plugin -->
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-site-plugin</artifactId>
							<version>${maven.site.plugin.version}</version>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>maven-2-site</id>
			<properties>
				<maven.test.skip>false</maven.test.skip>
				<lastModifiedCheck>true</lastModifiedCheck> <!-- for mvn site to work with andromda-cartridge-plugin -->
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-site-plugin</artifactId>
							<version>${maven.site.old.plugin.version}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-site-plugin</artifactId>
						<version>${maven.site.old.plugin.version}</version>
						<configuration>
							<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
							<outputEncoding>${project.build.sourceEncoding}</outputEncoding>

							<locales>en</locales>
							<!--<locales>en,fr</locales> -->
							<excludeModules>build-tools</excludeModules>
							<!--<excludeModules>maven-gui-plugin</excludeModules>-->
							<!--<siteDirectory>${basedir}/site/src/site</siteDirectory>-->
							<port>8070</port>
						</configuration>
						<dependencies>
							<!--
							<dependency>
								<groupId>org.apache.maven.skins</groupId>
								<artifactId>maven-default-skin</artifactId>
								<version>${maven.default.skin.version}</version>
							</dependency>
							-->
							<dependency>
								<groupId>com.nabla.project</groupId>
								<artifactId>skin</artifactId>
								<version>1.0</version>
							</dependency>
							<dependency>
								<groupId>org.apache.maven.doxia</groupId>
								<artifactId>doxia-module-twiki</artifactId>
								<version>${doxia.module.twiki.version}</version>
							</dependency>
						</dependencies>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-project-info-reports-plugin</artifactId>
						<version>${maven.project.info.reports.plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>${maven.dependency.plugin.version}</version>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>clirr-maven-plugin</artifactId>
						<version>${maven.clirr.plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changelog-plugin</artifactId>
						<version>${maven.changelog.plugin.version}</version>
					</plugin>
					<!--
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>emma-maven-plugin</artifactId>
						<version>${maven.emma.plugin.version}</version>
						<inherited>true</inherited>
						<executions>
						  <execution>
						    <phase>process-classes</phase>
						    <goals>
						      <goal>instrument</goal>
						    </goals>
						  </execution>
						</executions>
					</plugin>
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-scm-plugin</artifactId>
						<version>${maven.scm.plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
						<version>${maven.jxr.plugin.version}</version>
					</plugin>
					<!-- http://checkstyle.sourceforge.net -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${maven.checkstyle.plugin.version}</version>
						<dependencies>
							<!-- The file defined in the location is stored	in this	dependency -->
							<dependency>
								<groupId>com.nabla.project</groupId>
								<artifactId>build-tools</artifactId>
								<version>1.0</version>
							</dependency>
						</dependencies>
					</plugin>

					<!-- Code Coverage by Clover -->
					<!-- Bind Clover Coverage instrumentation to the site generation -->
					<!-- Blocked by	http://jira.codehaus.org/browse/MCLOVER-50 -->
					<plugin>
						<groupId>com.atlassian.maven.plugins</groupId>
						<artifactId>maven-clover2-plugin</artifactId>
						<version>${maven.clover.plugin.version}</version>
						<configuration>
							<generateHistorical>true</generateHistorical>
							<generateHtml>true</generateHtml>
							<snapshot>${user.home}/.clover/${project.groupId}-${project.artifactId}/clover.snapshot</snapshot>
						</configuration>
					</plugin>

					<!-- Delete code coverage database when	'mvn clean' is executed	-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>${maven.cobertura.plugin.version}</version>
						<configuration>
							<check>
								<branchRate>55</branchRate>
								<lineRate>55</lineRate>
								<haltOnFailure>false</haltOnFailure>
								<totalBranchRate>55</totalBranchRate>
								<totalLineRate>55</totalLineRate>
								<packageLineRate>55</packageLineRate>
								<packageBranchRate>55</packageBranchRate>
								<regexes>
									<regex>
										<pattern>${application.package}.*</pattern>
										<branchRate>90</branchRate>
										<lineRate>80</lineRate>
									</regex>
									<regex>
										<pattern>org.andromda.test.*</pattern>
										<branchRate>40</branchRate>
										<lineRate>30</lineRate>
									</regex>
								</regexes>
							</check>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>clean</goal>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dashboard-maven-plugin</artifactId>
						<version>${maven.dashboard.plugin.version}</version>
						<configuration>
							<dialect>org.hibernate.dialect.DerbyDialect</dialect>
							<driverClass>org.apache.derby.jdbc.ClientDriver</driverClass>
							<connectionUrl>jdbc:derby://localhost:1527/myDB;create=true</connectionUrl>
							<username>usr</username>
							<password>usr</password>
							<configLocation>project/myDashboardConfig.xml</configLocation>
							<keepVersionAsDiscriminantCriteria>false</keepVersionAsDiscriminantCriteria>
						</configuration>
						<dependencies>
							<!-- Comment out if deploying to a Java	EE 5 server with a server provided
								data source -->
							<dependency>
								<groupId>org.apache.derby</groupId>
								<artifactId>derbyclient</artifactId>
								<version>${jdbc.derby.version}</version>
							</dependency>
							<dependency>
								<groupId>org.apache.derby</groupId>
								<artifactId>derby</artifactId>
								<version>${jdbc.derby.version}</version>
								<scope>compile</scope>
							</dependency>
							<dependency>
								<groupId>org.apache.derby</groupId>
								<artifactId>derbytools</artifactId>
								<version>${jdbc.derby.version}</version>
								<scope>compile</scope>
							</dependency>
							<dependency>
								<groupId>org.apache.derby</groupId>
								<artifactId>derbynet</artifactId>
								<version>${jdbc.derby.version}</version>
								<scope>compile</scope>
							</dependency>
							<!-- to	override commons-logging in Hibernate library dependency -->
							<dependency>
								<groupId>commons-logging</groupId>
								<artifactId>commons-logging</artifactId>
								<version>${commons.logging.version}</version>
							</dependency>
							<dependency>
								<groupId>com.nabla.project</groupId>
								<artifactId>build-tools</artifactId>
								<version>1.0</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>taglist-maven-plugin</artifactId>
						<version>${maven.taglist.plugin.version}</version>
					</plugin>
				</plugins>
			</build>

			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-project-info-reports-plugin</artifactId>
						<version>${maven.project.info.reports.plugin.version}</version>
						<configuration>
							<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
							<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
						</configuration>
						<!--
						<reportSets>
						  <reportSet>
						    <reports>
						      <report>cim</report>
						      <report>dependencies</report>
						      <report>dependency-convergence</report>
						      <report>dependency-management</report>
						      <report>help</report>
						      <report>index </report>
						      <report>issue-tracking</report>
						      <report>license</report>
						      <report>mailing-list</report>
						      <report>modules</report>
						      <report>plugin-management</report>
						      <report>plugins</report>
						      <report>project-team</report>
						      <report>scm</report>
						      <report>summary</report>
						    </reports>
						  </reportSet>
						</reportSets>
					-->
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-plugin-plugin</artifactId>
						<version>${maven.plugin.plugin.plugin.version}</version>
					</plugin>

					<!-- Add this plug-ins only if you use SCM -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changes-plugin</artifactId>
						<version>${maven.changes.plugin.version}</version>
						<reportSets>
							<reportSet>
								<reports>
									<report>changes-report</report>
									<!-- Uncomment if using	JIRA -->
									<!--report>jira-report</report-->
								</reports>
							</reportSet>
						</reportSets>
						<configuration>
							<columnNames>Key,Type,Summary,Assignee,Status,Resolution,Priority,Component</columnNames>
							<sortColumnNames>Key</sortColumnNames>
						</configuration>
					</plugin>
					<!-- Add this plug-ins only if you use SCM -->

					<!-- Uncomment after configuring SCM connection	-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changelog-plugin</artifactId>
						<version>${maven.changelog.plugin.version}</version>
						<reportSets>
							<reportSet>
								<id>dual-report</id>
								<configuration>
									<type>range</type>
									<range>90</range>
									<dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
								</configuration>
								<reports>
									<report>changelog</report>
									<report>file-activity</report>
									<report>dev-activity</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
					<!-- *** GENERATION JAVADOC ***	-->
					<!-- Javadoc settings -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven.javadoc.plugin.version}</version>
						<reportSets>
							<reportSet>
								<id>non-aggregate</id>
								<configuration>
									<!-- Specific configuration for	the non	aggregate report -->
									<doctitle>Nabla	API for	${project.name}	${project.version}</doctitle>
									<windowtitle>Nabla API for ${project.name} ${project.version}</windowtitle>
									<testDoctitle>Nabla Test API for ${project.name} ${project.version}</testDoctitle>
									<testWindowtitle>Nabla Test API	for ${project.name} ${project.version}</testWindowtitle>
								</configuration>
								<reports>
									<report>javadoc</report>
									<report>test-javadoc</report>
								</reports>
							</reportSet>

							<!-- TODO deactivate if	mvn site is too	slow -->
							<!--
							<reportSet>
								<id>aggregate</id>
								<configuration>
									<doctitle>Nabla	Aggregate API for ${project.name} ${project.version}</doctitle>
									<windowtitle>Nabla Aggregate API for ${project.name} ${project.version}</windowtitle>
									<testDoctitle>Nabla Aggregate Test API for ${project.name} ${project.version}</testDoctitle>
									<testWindowtitle>Nabla Aggregate Test API for ${project.name} ${project.version}</testWindowtitle>
									-->
									<!-- Specific configuration for	the aggregate report -->
									<!--
									<tags>
										<tag>
											<name>date</name>
											<placement>a</placement>
											<head>date</head>
										</tag>
										<tag>
											<name>version.interne</name>
											<placement>a</placement>
											<head>version interne</head>
										</tag>
										<tag>
											<name>todo</name>
											<placement>a</placement>
											<head>To Do:</head>
										</tag>
										<tag>
											<name>note</name>
											<placement>a</placement>
											<head>Note:</head>
										</tag>
										<tag>
											<name>opt</name>
											<placement>X</placement>
											<head>opt:</head>
										</tag>
									</tags>
								</configuration>
								<reports>
									<report>aggregate</report>
									<report>test-aggregate</report>
								</reports>
							</reportSet>
							-->
						</reportSets>
						<configuration>
							<!-- Default configuration for all reports -->
							<excludePackageNames>*.ejb.*</excludePackageNames>
							<groups>
								<group>
									<title>Database</title>
									<packages>${application.package}.db*</packages>
								</group>
								<group>
									<title>Model</title>
									<packages>${application.package}.model*</packages>
								</group>
								<group>
									<title>Uml</title>
									<packages>${application.package}.uml.*</packages>
								</group>
								<group>
									<title>Application</title>
									<packages>${application.package}.application.*</packages>
								</group>
								<group>
									<title>Validation</title>
									<packages>${application.package}.validation.*</packages>
								</group>
								<group>
									<title>Service</title>
									<packages>${application.package}.service.*</packages>
								</group>
								<group>
									<title>Realtime	Service</title>
									<packages>${application.package}.realtime.*</packages>
								</group>
								<group>
									<title>Corba</title>
									<packages>${application.package}.corba.*</packages>
								</group>
								<group>
									<title>Tool</title>
									<packages>${application.package}.tool.*</packages>
								</group>
								<group>
									<title>Common Service</title>
									<packages>${application.package}.common.service*</packages>
								</group>
								<group>
									<title>Common</title>
									<packages>${application.package}.common.*</packages>
								</group>
								<group>
									<title>Utils</title>
									<packages>${application.package}.utils.*</packages>
								</group>
								<group>
									<title>Mask</title>
									<packages>${application.package}.mask.*</packages>
								</group>
								<group>
									<title>Mask implementation</title>
									<packages>${application.package}.mask_impl.*</packages>
								</group>
								<group>
									<title>Gui</title>
									<packages>${application.package}.gui.*</packages>
								</group>
								<group>
									<title>Choice</title>
									<packages>${application.package}.choice.*</packages>
								</group>
								<group>
									<title>Examples</title>
									<packages>com.nabla.samples.*:com.nabla.demo.*:org.andromda.test.*</packages>
								</group>
							</groups>

							<stylesheet>maven</stylesheet>
							<!--
								<minmemory>128m</minmemory> <maxmemory>512m</maxmemory>
							-->
							<!--
							<minmemory>128m</minmemory>
							<maxmemory>2g</maxmemory>
							<maxmemory>512m</maxmemory>
							<maxmemory>1548m</maxmemory>
							-->
							<!--<show>package</show>-->
							<show>public</show>
							<version>true</version>
							<javadocVersion>${jdkLevel}</javadocVersion>
							<failOnError>false</failOnError>
							<linksource>true</linksource>
							<serialwarn>true</serialwarn>
							<detectLinks>false</detectLinks>
							<detectOfflineLinks>false</detectOfflineLinks>

							<charset>${project.build.sourceEncoding}</charset>
							<docencoding>${project.build.sourceEncoding}</docencoding>
							<encoding>${project.build.sourceEncoding}</encoding>

							<!--<sourcepath>${basedir}/src/main/java;${basedir}/src/generated/main/java</sourcepath>-->
							<!--
							<doclet>gr.spinellis.umlgraph.doclet.UmlGraphDoc</doclet>
							<docletArtifact>
								<groupId>gr.spinellis</groupId>
								<artifactId>UmlGraph</artifactId>
								<version>4.9.0</version>
							</docletArtifact>
							<additionalparam> -inferrel -inferdep -quiet -hide java.* -hide
								com.nabla.gui.*	-collpackages java.util.* -collpackages
								com.nabla.logical.*
								-collpackages
								com.nabla.utils.* -qualify
								-postfixpackage
								-nodefontsize 9	-nodefontpackagesize 7
								-outputencoding	utf8</additionalparam>
							<excludePackageNames>com.nabla.andromda.cartridges.technical.karma.*:com.nabla.andromda.cartridges.technical..unittest:*.cartridges.*</excludePackageNames>
							-->
							<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
							<docletArtifact>
								<groupId>org.umlgraph</groupId>
								<artifactId>doclet</artifactId>
								<version>5.1</version>
							</docletArtifact>
							<additionalparam>-views</additionalparam>
							<additionalparam>-operations</additionalparam>
							<additionalparam>-qualify</additionalparam>
							<additionalparam>-types</additionalparam>
							<additionalparam>-visibility</additionalparam>
							<additionalparam>-collpackages</additionalparam>
							<show>private</show>

						</configuration>
					</plugin>

					<!-- *** GENERATION DES	SOURCES	NAVIGABLES EN HTML *** -->
					<!-- Source code cross-reference -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
						<version>${maven.jxr.plugin.version}</version>
						<configuration>
							<linkJavadoc>true</linkJavadoc>
							<!--<aggregate>true</aggregate>	generate [WARNING] DEPRECATED [aggregate] -->
							<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
							<outputEncoding>${project.build.sourceEncoding}</outputEncoding>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>${maven.surefire.plugin.version}</version>
						<!--
						<configuration>
							<aggregate>true</aggregate>
						</configuration>
						-->
					</plugin>

					<!-- Comment gerer un rapport des tags -->
					<!-- taglist must be after dashboard and jxr in	order to avoid error -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>taglist-maven-plugin</artifactId>
						<version>${maven.taglist.plugin.version}</version>
						<configuration>
							<charset>${project.build.sourceEncoding}</charset>
							<docencoding>${project.build.sourceEncoding}</docencoding>
							<encoding>${project.build.sourceEncoding}</encoding>
							<tagListOptions>
								<tagClasses>
									<tagClass>
										<displayName>Todo Work</displayName>
										<tags>
											<tag>
												<matchString>todo</matchString>
												<matchType>ignoreCase</matchType>
											</tag>
											<tag>
												<matchString>FIXME</matchString>
												<matchType>exact</matchType>
											</tag>
											<tag>
												<matchString>XXX</matchString>
												<matchType>exact</matchType>
											</tag>
											<tag>
												<matchString>@deprecated</matchString>
												<matchType>exact</matchType>
											</tag>
										</tags>
									</tagClass>
								</tagClasses>
							</tagListOptions>
						</configuration>
					</plugin>
					<!-- When there	is JXR cross-refernce output available,	it will	be linked
						to in case of test failures -->
					<!--
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>emma-maven-plugin</artifactId>
						<version>${maven.emma.plugin.version}</version>
						<inherited>true</inherited>
					</plugin>
					-->
					<!-- Comment verifier la qualitee code avec checkstyle ou PMD -->
					<!-- *** GENERATION CHECKSTYLE *** -->
					<!-- Checkstyle	plug-in	-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${maven.checkstyle.plugin.version}</version>
						<inherited>true</inherited>
						<configuration>
							<linkXref>true</linkXref>
							<!--<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding> -->
							<charset>${project.build.sourceEncoding}</charset>
							<docencoding>${project.build.sourceEncoding}</docencoding>
							<encoding>${project.build.sourceEncoding}</encoding>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<!--<configLocation>project/checkstyle_regles_nabla_eclipse.xml</configLocation>-->
							<configLocation>project/checkstyle_checks.xml</configLocation>
							<headerLocation>project/LICENSE-1.0.txt</headerLocation>
							<propertyExpansion>projectname=nabla</propertyExpansion>
							<!--
							<configLocation>${home.dir}/build-tools/src/main/resources/project/checkstyle_regles_nabla_eclipse.xml</configLocation>
							<headerLocation>${home.dir}/build-tools/src/main/resources/project/LICENSE-1.0.txt</headerLocation>
							 -->
						</configuration>
					</plugin>

					<!-- *** GENERATION PMD	*** -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>${maven.pmd.plugin.version}</version>
						<configuration>
							<linkXref>true</linkXref>
							<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
							<minimumTokens>100</minimumTokens>
							<targetJdk>${jdkLevel}</targetJdk>
							<excludes>
								<exclude>**/*Bean.java</exclude>
								<exclude>**/generated/*.java</exclude>
							</excludes>
							<excludeRoots>
								<excludeRoot>${basedir}/${target.dir}/generated-sources</excludeRoot>
							</excludeRoots>

							<rulesets>
								<!-- <ruleset>project/pmd_regles_nabla.xml</ruleset> -->
								<ruleset>project/pmd_ruleset.xml</ruleset>
								<!--<ruleset>/rulesets/basic.xml</ruleset>
								<ruleset>/rulesets/braces.xml</ruleset>
								<ruleset>/rulesets/clone.xml</ruleset>
								<ruleset>/rulesets/codesize.xml</ruleset>
								<ruleset>/rulesets/controversial.xml</ruleset>
								<ruleset>/rulesets/coupling.xml</ruleset>
								<ruleset>/rulesets/design.xml</ruleset>
								<ruleset>/rulesets/finalizers.xml</ruleset>
								<ruleset>/rulesets/logging-java.xml</ruleset>
								<ruleset>/rulesets/j2ee.xml</ruleset>
								<ruleset>/rulesets/javabeans.xml</ruleset>
								<ruleset>/rulesets/junit.xml</ruleset>
								<ruleset>/rulesets/naming.xml</ruleset>
								<ruleset>/rulesets/optimizations.xml</ruleset>
								<ruleset>/rulesets/strictexception.xml</ruleset>
								<ruleset>/rulesets/strings.xml</ruleset>
								<ruleset>/rulesets/sunsecure.xml</ruleset>
								<ruleset>/rulesets/typeresolution.xml</ruleset>
								<ruleset>/rulesets/unusedcode.xml</ruleset>
								-->
							</rulesets>
						</configuration>
					</plugin>

					<!-- *** GENERATION FINDBUGS *** -->
					<!-- Java Heap Space possible si trop de source	a analyser -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>${maven.findbugs.plugin.version}</version>
						<configuration>
							<!--<findbugsXmlOutput>true</findbugsXmlOutput>-->
							<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
							<xmlOutput>true</xmlOutput>
							<threshold>Normal</threshold>
							<effort>Default</effort>
							<!--<failOnError>true</failOnError>-->
							<excludeFilterFile>project/findbugs-exclude-filters.xml</excludeFilterFile>
						</configuration>
					</plugin>

					<!-- Comment analyser les metriques avec JDepend -->
					<!-- TODO does not work jdepend:generate -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>jdepend-maven-plugin</artifactId>
						<version>${maven.jdepend.plugin.version}</version>
					</plugin>

					<!-- TODO javancss:report does not work -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>javancss-maven-plugin</artifactId>
						<version>${maven.javancss.plugin.version}</version>
					</plugin>
					<!--
					<plugin>
					    <groupId>org.codehaus.mojo</groupId>
					    <artifactId>versions-maven-plugin</artifactId>
					    <version>${maven.versions.plugin.version}</version>
					    <reportSets>
						<reportSet>
						  <reports>
						    <report>dependency-updates-report</report>
						    <report>plugin-updates-report</report>
						    <report>property-updates-report</report>
						  </reports>
						</reportSet>
					    </reportSets>
					</plugin>
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-doap-plugin</artifactId>
						<version>${maven.doap.plugin.version}</version>
						<configuration>
							<doapOptions>
								<programmingLanguage>java</programmingLanguage>
								<category>build-management</category>
							</doapOptions>
							<asfExtOptions>
								<included>false</included>
							</asfExtOptions>
						</configuration>
					</plugin>
					<!-- Compare APIs to a previous	version, uncomment when	a release version exists -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>clirr-maven-plugin</artifactId>
						<version>${maven.clirr.plugin.version}</version>
						<inherited>true</inherited>
						<configuration>
							<minSeverity>info</minSeverity>
						</configuration>
					</plugin>
					<!--
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>rat-maven-plugin</artifactId>
						<version>${maven.rat.plugin.version}</version>
					</plugin>
					-->
					<!--
					<plugin>
						<groupId>org.apache.rat</groupId>
						<artifactId>apache-rat-plugin</artifactId>
						<version>${maven.apache.rat.plugin.version}</version>
						<configuration>
						  <licenses>
						    <license implementation="org.apache.rat.analysis.license.SimplePatternBasedLicense">
						      <licenseFamilyCategory>YASL1</licenseFamilyCategory>
						      <licenseFamilyName>Yet Another Software License (YASL) 1.0</licenseFamilyName>
						      <notes></notes>
						      <patterns>
							<pattern>Copyright (c) 2002-2004, Nabla</pattern>
						      </patterns>
						    </license>
						  </licenses>
						  <licenseFamilies>
						    <licenseFamily implementation="org.apache.rat.license.SimpleLicenseFamily">
						      <familyName>Yet Another Software License</familyName>
						    </licenseFamily>
						  </licenseFamilies>
						</configuration>
					</plugin>
					-->

					<!-- Comment gerer un rapport de couverture des	tests -->
					<!-- Code Coverage by Cobertura	-->
					<!--
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>${maven.cobertura.plugin.version}</version>
						<configuration>
							<aggregate>true</aggregate>
							<formats>
								<format>xml</format>
								<format>html</format>
							</formats>
						</configuration>
					</plugin>
					-->

					<!-- dashboard must be done at the end in order	to have	a complete report -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dashboard-maven-plugin</artifactId>
						<version>${maven.dashboard.plugin.version}</version>
						<inherited>true</inherited>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<version>${maven.gwt.plugin.version}</version>
					</plugin>
				</plugins>
			</reporting>
		</profile>
	</profiles>

	<!-- Keep Alphabetical Order. Capital Letter goes first	-->
	<properties>
		<project.svn.path>trunk</project.svn.path>
		<target.dir>target</target.dir>	<!-- default value that	can be overrided -->
		<environment>development</environment> <!-- default value that can be overrided	-->

		<product.id>nabla</product.id>
		<product.name>nabla</product.name>
		<product.title>${product.name} Application : ${env.BUILD_TAGS}</product.title>
		<product.major.version>${project.version}</product.major.version>

		<product.sourceDirectory>${home.dir}/${product.name}</product.sourceDirectory>

		<product.branch.version>${env.VERSION}</product.branch.version>
		<product.status.number>1</product.status.number>
		<product.load.number>${env.EXECUTOR_NUMBER}</product.load.number>
		<product.patch.number>${env.BUILD_NUMBER}</product.patch.number>
		<product.patch.version>${product.major.version}.${product.status.number}.${product.load.number}${product.patch.number}</product.patch.version>
		<product.push.number>${env.SVN_REVISION}</product.push.number>
		<product.push.version>${product.patch.version}.${product.push.number}</product.push.version>
		<product.dependencies>${product.name} ${product.patch.version}</product.dependencies>
		<product.version>${product.major.version}${product.push.version}</product.version>

		<product.username>${env.UNIX_USERNAME}</product.username>

		<product.workspace>${product.username}${product.major.version}</product.workspace>
		<product.thirdparty>${env.THIRDPARTY_ROOT}</product.thirdparty>	<!-- used for dtd in mda -->

		<!--<scm.base>svn:svn://ALBAN-PC/svn/repo/main/user/trunk</scm.base> -->
		<scm.base>svn:http://alban.googlecode.com/svn/</scm.base>
		<!-- TODO fix env setting for overrided	home.dir -->
		<!--<home.dir>${env.HOME}</home.dir>
		<home.dir>C:\workspace\users\albandri10</home.dir>
		-->
		<home.dir>${env.WORKSPACE}</home.dir>
		<!--<settings.localRepository>${env.M2_REPO}</settings.localRepository>-->
		<!--<deploy.dir>${home.dir}/fullsite</deploy.dir>-->

		<!-- TODO overrided in filter -->
		<jdkLevel>1.7</jdkLevel>
		<jdkDebug>true</jdkDebug>
		<jdkOptimize>false</jdkOptimize>
		<fork>false</fork>

		<java.runtime.version>${jdkLevel}</java.runtime.version>
		<java.source.version>${jdkLevel}</java.source.version>

		<!--<maven.version>2.2.1</maven.version>-->
		<maven.version>3.0.4</maven.version>

		<maven.test.skip>false</maven.test.skip>
		<maven.test.failure.skip>true</maven.test.failure.skip>
		<!--<maven.clover.licenseLocation>${home.dir}/build-tools/src/main/resources/project/clover.license</maven.clover.licenseLocation>-->
		<!-- TODO overrided in filter -->

		<copyright.year>2012</copyright.year>
		<scope.ear>provided</scope.ear>
		<scope.web>compile</scope.web>
		<scope.type>${scope.ear}</scope.type> <!-- check overrided pom.xml in server -->

		<!-- BEGIN of Thirdparties versions stick to project recommandations -->
		<andromda.version>3.5</andromda.version>

		<tibjms.version>4.2.0</tibjms.version>
		<!--<tibrv.version>8.1.2</tibrv.version>-->
		<tibrv.version>8.2.2</tibrv.version>
		<mq.version>1.0</mq.version>
		<jaxen.version>1.1.1</jaxen.version>
		<isorelax.version>1.0</isorelax.version>
		<msv.version>1.0</msv.version>

		<castor.version>1.3.1</castor.version>
		<jtidy.version>4aug2000r7-dev-hudson-1</jtidy.version>

		<neethi.version>2.0.1</neethi.version>
		<stax.api.version>1.0.1</stax.api.version>
		<stax.util.version>20100402</stax.util.version>
		<woden.impl.om.version>1.0M8</woden.impl.om.version>
		<concurrent.version>1.3.4</concurrent.version>

		<jaws.version>1.0</jaws.version>
		<cssparser.version>0.9.4</cssparser.version>
		<!--<itext.version>1.3.1</itext.version> -->
		<itext.version>2.1.7</itext.version>
		<poi.version>3.7</poi.version>
		<opencsv.version>2.2</opencsv.version>
		<ws.version>1.0</ws.version>

		<jfreechart.version>1.0.7</jfreechart.version>
		<jfreechart.version2>1.0.13</jfreechart.version2>
		<jfree.jcommon.version>1.0.16</jfree.jcommon.version>
		<jfreechart-demo.version>1.0.13</jfreechart-demo.version>
		<junitperf.version>1.9.1</junitperf.version>
		<clover.version>3.1.8</clover.version>
		<dbunit.version>2.4.9</dbunit.version>
		<testng.version>6.8</testng.version>
		<htmlunit.version>1.11</htmlunit.version>
		<org.beanshell.bsh.version>2.0b5</org.beanshell.bsh.version>
		<oro.version>2.0.8</oro.version>

		<javax.j2ee.version>1.3.1</javax.j2ee.version>
		<saxon.version>8.7</saxon.version>
		<classworlds.version>1.1</classworlds.version>
		<dom4j.version>1.6.1</dom4j.version>
		<jmdns.version>1.0</jmdns.version>

		<fop.version>0.95</fop.version>
		<axis.version>1.4</axis.version>
		<axis.jaxrpc.version>1.4</axis.jaxrpc.version>
		<axis2.version>1.2</axis2.version>
		<annogen.version>0.1.0</annogen.version>
		<axiom.api.version>1.2.10</axiom.api.version>
		<axiom.impl.version>${axiom.api.version}</axiom.impl.version>
		<axiom.dom.version>${axiom.api.version}</axiom.dom.version>

		<backport.util.concurrent.version>3.1</backport.util.concurrent.version>
		<!-- common parties versions -->
		<commons.lang.version>2.6</commons.lang.version>
		<commons.beanutils.version>1.8.3</commons.beanutils.version>
		<commons.dbcp.version>1.2.2</commons.dbcp.version>
		<commons.pool.version>1.4</commons.pool.version>
		<commons.fileupload.version>1.2.2</commons.fileupload.version>
		<commons.io.version>2.1</commons.io.version>
		<commons.collections.version>3.2.1</commons.collections.version>
		<commons.httpclient.version>3.1</commons.httpclient.version>
		<commons.logging.version>1.1.1</commons.logging.version>
		<commons.configuration.version>1.6</commons.configuration.version>
		<commons.validator.version>1.3.1</commons.validator.version>
		<commons.discovery.version>0.4</commons.discovery.version>
		<commons.digester.version>2.1</commons.digester.version>
		<commons.codec.version>1.5</commons.codec.version>
		<commons.cli.version>1.2</commons.cli.version>
		<commons.math.version>2.2</commons.math.version>
		<commons.math3.version>3.0</commons.math3.version>
		<lucene.version>2.4.1</lucene.version> <!-- Hibernate Search does not work with	Lucene 2.9.4 3.0.0 -->

		<jakarta.httpcore.version>4.0-alpha4</jakarta.httpcore.version>

		<avalon.framework.version>4.1.3</avalon.framework.version>
		<odmg.version>3.0</odmg.version>
		<aopalliance.version>1.0</aopalliance.version>
		<activemq.core.version>4.1.1</activemq.core.version>

		<taglibs.version>1.1.2</taglibs.version>
		<javax.activation.version>1.1.1</javax.activation.version>
		<antlr.version>2.7.7</antlr.version>
		<org.antlr.version>3.3</org.antlr.version>
		<jdom.version>1.0</jdom.version>
		<ant-nodeps.version>1.7.0</ant-nodeps.version>
		<ant.version>1.7.0</ant.version>
		<ant.trax.version>1.7.0</ant.trax.version>
		<c3p0.version>0.8.5.2</c3p0.version>

		<jdbc.derby.version>10.3.1.4</jdbc.derby.version>
		<jdbc.hsqldb.version>1.8.0.10</jdbc.hsqldb.version>

		<jconn.version>6.0</jconn.version>
		<!--<asm.version>2.2.3</asm.version>-->	<!-- error running openejb -->
		<asm.version>3.3.1</asm.version> <!-- works with cglib -->
		<cglib.version>2.2</cglib.version>
		<!--<cglib.nodep.version>2.1_3</cglib.nodep.version>-->
		<cglib.nodep.version>2.2.2</cglib.nodep.version>
		<javax.transaction.version>1.1</javax.transaction.version>
		<acegi.security.version>1.0.1</acegi.security.version>
		<xml.security.version>1.3.0</xml.security.version>
		<xml.apis.version>1.0.b2</xml.apis.version>
		<!--<xml.apis.version>2.0.2</xml.apis.version>-->
		<batik.ext.version>1.7</batik.ext.version>

		<jboss.version>4.2.2.GA</jboss.version>
		<jbossall.client.version>4.2.3.GA</jbossall.client.version>
		<jboss.annotations.ejb3.version>4.2.3.GA</jboss.annotations.ejb3.version>
		<jboss.embeddable.version>1.0.0.Alpha9</jboss.embeddable.version>
		<jboss.microcontainer.version>alpha_9</jboss.microcontainer.version>
		<jboss.interceptors.api.spec.version>1.0.0.Final</jboss.interceptors.api.spec.version>
		<jboss.cache.version>1.4.1.SP9</jboss.cache.version>
		<jboss.el.version>1.0_02.CR5</jboss.el.version>
		<jboss.logging.version>3.1.2.GA</jboss.logging.version>
		<jboss.common.core.version>2.2.20.GA</jboss.common.core.version>
		<jbossws.framework.version>3.0.2-GA</jbossws.framework.version>
		<jbossws.client.version>2.0.1.SP2</jbossws.client.version>
		<el.api.version>2.2.1-b04</el.api.version>
		<el.ri.version>1.0</el.ri.version>
		<org.mvel.mvel2.version>2.0.10</org.mvel.mvel2.version>
		<openejb.javaee.api.version>5.0-3</openejb.javaee.api.version>
		<openejb.core.version>3.1.4</openejb.core.version>
		<seam.embedded.version>beta3.SP15</seam.embedded.version>
		<seam.utils.version>1.0</seam.utils.version>
		<jbossws.native.client.version>3.2.0.GA</jbossws.native.client.version>

		<jboss.dist.path>${env.JBOSS_HOME}</jboss.dist.path>
		<application.server>jboss</application.server>
		<jboss.common.version>2.0.4.GA</jboss.common.version>

		<hessian.version>4.0.7</hessian.version>
		<inject.version>1</inject.version>
		<guice.version>3.0</guice.version>
		<jsr305.version>2.0.1</jsr305.version>
		<joda.time.version>2.1</joda.time.version>
		<guava.version>13.0.1</guava.version>
		<jarjar.version>0.6</jarjar.version>
		<acegi.version>1.0.5</acegi.version>
		<acegijsf.version>1.1.2</acegijsf.version>
		<jsf.version>1.2_12</jsf.version>
		<jsf.api.version>${jsf.version}</jsf.api.version>
		<jsf.impl.version>${jsf.version}</jsf.impl.version>
		<sun.jsf.version>2.1.0-b03</sun.jsf.version>
		<ajax4jsf.version>1.0.6</ajax4jsf.version>
		<aspectj.version>1.6.6</aspectj.version>
		<clickstream.version>1.0.2</clickstream.version>
		<corejsf.validator.version>1.0</corejsf.validator.version>
		<displaytag.version>1.2</displaytag.version>
		<dwr.version>2.0.1</dwr.version>
		<ehcache.version>2.4.6</ehcache.version>
		<ehcache.jar.version>1.5.0</ehcache.jar.version>
		<org.javassist.version>3.15.0-GA</org.javassist.version>
		<javassist.version>3.12.1.GA</javassist.version>
		<el.version>1.2</el.version>
		<facelets.version>1.1.13</facelets.version>
		<toplink.essentials.version>2.0-40</toplink.essentials.version>
		<openjpa.version>1.2.1</openjpa.version>
		<openjpa.all.version>0.9.7-incubating-SNAPSHOT</openjpa.all.version>
		<hibernate.version>3.2.6.ga</hibernate.version>
		<hibernate.legacy.core.version>3.3.2.GA</hibernate.legacy.core.version>
		<hibernate.legacy.entitymanager.version>${hibernate.legacy.core.version}</hibernate.legacy.entitymanager.version>
		<!-- https://community.jboss.org/wiki/HibernateCompatibilityMatrix -->
		<!--<hibernate3.version>3.6.8.Final</hibernate3.version>--> <!-- for hibernate-core and	hibernate-entitymanager	-->
		<hibernate.core.version>3.3.2.GA</hibernate.core.version>
		<!--<hibernate.core.version>3.6.8.Final</hibernate.core.version>-->
		<hibernate.entitymanager.version>${hibernate.core.version}</hibernate.entitymanager.version>
		<!--<hibernate.infinispan.version>${hibernate.core.version}</hibernate.infinispan.version>-->
		<hibernate.infinispan.version>3.6.8.Final</hibernate.infinispan.version>
		<!--<hibernate.annotations.version>3.3.1.GA</hibernate.annotations.version>-->
		<hibernate.annotations.version>3.4.0.GA</hibernate.annotations.version>
		<hibernate.tools.version>3.2.0.ga</hibernate.tools.version>
		<hibernate.validator.version>3.1.0.GA</hibernate.validator.version> <!-- works with hibernate.core.version 3.3.2.GA -->
		<!--<hibernate.validator.version>4.0.2.GA</hibernate.validator.version>--> <!-- works with hibernate.core.version 3.6.8.GA -->
		<!--<hibernate.validator.version>4.3.1.Final</hibernate.validator.version>--> <!-- works with hibernate.core.version 4.1.8.Final -->
		<!--<hibernate.commons.annotations.version>3.3.0.ga</hibernate.commons.annotations.version>--> <!-- Do not use 3.3.0.ga See https://jira.springsource.org/browse/SPR-7701, http://forum.springsource.org/showthread.php?89693-AnnotationSessionFactoryBean-needs-MetadataProvider -->
		<hibernate.commons.annotations.version>3.2.0.Final</hibernate.commons.annotations.version>
		<hibernate.validator.legacy.version>4.0.2.GA</hibernate.validator.legacy.version>
		<hibernate.search.version>3.1.1.GA</hibernate.search.version>
		<!--<hibernate.search.version>4.0.0.Final</hibernate.search.version>-->
		<hibernate.jpa.api.version>1.0.0.Final</hibernate.jpa.api.version>
		<hibernate.jpamodelgen.version>1.1.1.Final</hibernate.jpamodelgen.version>
		<ejb3.persistence.version>1.0.2.GA</ejb3.persistence.version>
		<jboss.ejb3.persistence.version>4.0.5-GA</jboss.ejb3.persistence.version>
		<net.sf.hibernate.version>2.1.8</net.sf.hibernate.version>
		<jbpm.version>3.3.1.GA</jbpm.version>
		<ibatis.version>2.3.0</ibatis.version>
		<javax.ejb.api.version>3.0</javax.ejb.api.version>
		<javax.mail.version>1.4.5</javax.mail.version>
		<jpa.version>1.0</jpa.version>
		<jstl.version>1.2</jstl.version>
		<log4j.version>1.2.17</log4j.version>
		<oscache.version>2.3</oscache.version>
		<shale.version>1.0.4</shale.version>
		<sitemesh.version>2.2.1</sitemesh.version>
		<spring.version>2.5.6</spring.version>
		<spring3.version>3.1.3.RELEASE</spring3.version>
		<spring.security.web>3.1.3.RELEASE</spring.security.web> <!-- TODO spring3.version -->
		<!--<spring.jpa.version>2.0.6</spring.jpa.version>-->
		<springmodules.validation.version>0.8</springmodules.validation.version>
		<spring.mock.version>2.0.8</spring.mock.version>
		<struts.version>1.2.9</struts.version>
		<struts.menu.version>2.4.3</struts.menu.version>
		<tacos.version>4.1.0</tacos.version>
		<tapestry.version>4.1.3</tapestry.version>
		<tapestry.flash.version>1.0.0</tapestry.flash.version>
		<tapestry.spring.version>1.0.0</tapestry.spring.version>
		<urlrewrite.version>3.0.4</urlrewrite.version>
		<velocity.version>1.7</velocity.version>
		<webtest.version>R_1600</webtest.version>
		<xfire.version>1.2.6</xfire.version>

		<!-- Testing dependency	versions -->
		<cargo.version>1.0</cargo.version>
		<jmock.version>2.6.0-RC2</jmock.version>
		<easymock.version>3.1</easymock.version>
		<mockito.version>1.9.5</mockito.version>
		<mockrunner.version>0.4.2</mockrunner.version>
		<hamcrest.core.version>1.3.RC2</hamcrest.core.version>
		<jsp.version>2.0</jsp.version>
		<jsp-api.version>2.2.1-b03</jsp-api.version>
		<junit.version>4.11-beta-1</junit.version>
		<org.jboss.arquillian.version>1.0.3.Final</org.jboss.arquillian.version>
		<org.jboss.arquillian.junit.version>1.0.0.Alpha5</org.jboss.arquillian.junit.version>
		<httpunit.version>1.6.2</httpunit.version>
		<xmlunit.version>1.3</xmlunit.version>
		<wiser.version>1.2</wiser.version>

		<google.api.client.version>1.0.10-alpha</google.api.client.version>
		<!--<gwt.version>2.5.0-rc2</gwt.version>-->
		<gwt.version>2.4.0</gwt.version>
		<gae.version>1.5.3</gae.version>
		<gwtp.all.version>0.7</gwtp.all.version>
		<gwt.seam.version>1.0</gwt.seam.version>
		<gwt.test.utils.version>0.38</gwt.test.utils.version>
		<objectify.version>4.0b1</objectify.version>
		<errai.version>2.0.Beta3</errai.version>

		<selenium.version>0.8.1</selenium.version>
		<drools.version>5.0.1</drools.version>
		<!--<drools.version>5.1.1</drools.version>-->
		<jbpm.jpdl.version>3.2.3</jbpm.jpdl.version>

		<richfaces.version>3.3.3.Final</richfaces.version>
		<myfaces.version>1.2.9</myfaces.version>
		<!--<myfaces.version>1.2.11</myfaces.version> does not work-->
		<!--<myfaces.version>2.1.6</myfaces.version>-->
		<myfaces.extval.version>1.2.5</myfaces.extval.version>
		<!--<myfaces.extval.version>2.0.5</myfaces.extval.version>-->
		<org.apache.myfaces.tomahawk.version>1.1.11</org.apache.myfaces.tomahawk.version>
		<org.apache.myfaces.trinidad.version>1.2.14</org.apache.myfaces.trinidad.version>
		<!--<org.apache.myfaces.trinidad.version>2.0.0</org.apache.myfaces.trinidad.version>-->
		<jsf.facelets.version>1.1.15.B1</jsf.facelets.version>
		<el.api.version>2.2.1-b04</el.api.version>
		<portlet.api.version>1.0</portlet.api.version>
		<portals.bridges.portletfilter.version>1.0.4</portals.bridges.portletfilter.version>
		<icefaces.version>1.8.2</icefaces.version>
		<nekohtml.version>1.9.6.2</nekohtml.version>

		<!-- APPFUSE settings -->
		<amp.genericCore>true</amp.genericCore>
		<amp.fullSource>false</amp.fullSource>
		<!-- APPFUSE Persistence settings -->
		<dao.framework>jpa</dao.framework>
		<web.framework>struts</web.framework>
		<appfuse.version>2.1.0-M1</appfuse.version>
		<javax.persistence.version>1.0.2</javax.persistence.version>

		<cxf.version>2.5.6</cxf.version>
		<shiro.version>1.2.1</shiro.version>
		<xalan.version>2.7.1</xalan.version>
		<xerces.version>2.9.1</xerces.version>
		<!--<xerces.version>2.10.0</xerces.version> TODO add dependency	batik to avoid java.lang.NoClassDefFoundError: org/w3c/dom/ElementTraversal -->
		<tomcat.version>6.0.29</tomcat.version>

		<!--<jconnect.version>6.0.5.26312</jconnect.version>-->
		<jconnect.version>7.0.7</jconnect.version>
		<jtds.version>1.2.6</jtds.version>
		<logback.version>0.9.26</logback.version>
		<slf4j.version>1.7.2</slf4j.version>
		<derby.version>10.9.1.0</derby.version>
		<commons.dbcp>1.2.2</commons.dbcp>

		<blazeds.version>3.2.0.3978</blazeds.version>
		<ezmorph.version>1.0.6</ezmorph.version>
		<fastinfoset.version>1.2.3</fastinfoset.version>
		<flex.messaging.common.version>3.3.0.4852</flex.messaging.common.version>
		<geronimo.version>1.0</geronimo.version>
		<geronimo.jms.version>1.1.1</geronimo.jms.version>
		<geronimo.activation.spec.version>1.0.2</geronimo.activation.spec.version>
		<geronimo.annotation.spec.version>1.1.1</geronimo.annotation.spec.version>
		<geronimo.ejb.2.1.spec.version>1.1</geronimo.ejb.2.1.spec.version>
		<geronimo.ejb.3.0.spec.version>1.0</geronimo.ejb.3.0.spec.version>
		<geronimo.jaxws.2.1.spec.version>1.0</geronimo.jaxws.2.1.spec.version>
		<geronimo.jaxws.2.2.spec.version>1.0</geronimo.jaxws.2.2.spec.version>
		<geronimo.servlet.2.5.spec.version>1.2</geronimo.servlet.2.5.spec.version>
		<geronimo.servlet.3.0.spec.version>1.0</geronimo.servlet.3.0.spec.version>
		<geronimo.j2ee.specs.version>1.1</geronimo.j2ee.specs.version>
		<geronimo.stax.api.spec.version>1.0.1</geronimo.stax.api.spec.version>
		<geronimo.ws.metadata.spec.version>1.1.3</geronimo.ws.metadata.spec.version>

		<seam.version>2.2.1.Final</seam.version>
		<seam.bom.version>3.1.0.Final</seam.bom.version>
		<!--<seam.version>2.3.0.CR1</seam.version>-->
		<seam.international.version>3.0.0.Alpha1</seam.international.version>

		<jaxb.api.version>2.1</jaxb.api.version>
		<jaxb.impl.version>2.1.13</jaxb.impl.version>
		<javax.jms.version>1.1</javax.jms.version>
		<json.lib.version>2.3</json.lib.version>

		<saaj.api.version>1.3</saaj.api.version>
		<saaj.impl.version>1.3.2</saaj.impl.version>
		<servlet.api.version>2.5</servlet.api.version>
		<!--<servlet.version>2.4</servlet.version>-->
		<wstx.asl.version>3.2.9</wstx.asl.version>
		<validation.api.version>1.0.0.GA</validation.api.version>

		<xml.resolver>1.2</xml.resolver>
		<xmlschema.version>1.4.6</xmlschema.version>
		<xmt.version>1.0</xmt.version>
		<xpp3_min.version>1.1.4c</xpp3_min.version>
		<xstream.version>1.4.2</xstream.version>
		<yourkit.version>9.0.8</yourkit.version>
		<xmlsec.version>1.4.3</xmlsec.version>
		<wss4j.version>1.5.8</wss4j.version>
		<wsdl4j.version>1.6.2</wsdl4j.version>
		<groovy.version>2.0.5</groovy.version>

		<flex.sdk.version>4.5.0.20967</flex.sdk.version>
		<flexlib.version>2.5</flexlib.version>
		<flexunit.version>4.0-rc-1</flexunit.version>
		<ilog-elixir.version>3.0.21588</ilog-elixir.version>
		<jackson.version>1.9.9</jackson.version>
		<jersey.version>1.14</jersey.version>
		<jetty.version>6.1.25</jetty.version>
		<jetty7.version>7.6.5.v20120716</jetty7.version>

		<!--
			French Encoding	in some	files: can't use UTF-8,	TODO update source
			files
		-->
		<!-- Explicitly	declaring the source encoding eliminates the following
		  message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually)	to copy	filtered
		  resources, i.e. build	is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- TODO ???
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
		<build.datetime>${maven.build.timestamp}</build.datetime>  
		-->

		<!-- Plugin version definitions	-->
		<maven.project.version>3.0-alpha-2</maven.project.version>
		<plexus.util.version>3.0.10</plexus.util.version>
		<plexus.container.default.version>1.5.5</plexus.container.default.version>

		<!--<wagon.webdav.plugin.version>1.0-beta-2</wagon.webdav.plugin.version>-->
		<wagon.webdav.jackrabbit.version>1.0-beta-7</wagon.webdav.jackrabbit.version>
		<wagon.svn.plugin.version>1.8</wagon.svn.plugin.version>
		<wagon.ftp.plugin.version>2.2</wagon.ftp.plugin.version>
		<wagon.ssh.plugin.version>1.0-beta-6</wagon.ssh.plugin.version>

		<maven.docbkx.plugin.version>2.0.8</maven.docbkx.plugin.version>
		<doxia.module.twiki.version>1.1.3</doxia.module.twiki.version>
		<lifecycle.mapping.version>1.0.0-RC1</lifecycle.mapping.version>

		<maven.xdoclet.plugin.version>1.0</maven.xdoclet.plugin.version>
		<maven.xml.plugin.version>1.0</maven.xml.plugin.version>
		<maven.tomcat.plugin.version>1.2-SNAPSHOT</maven.tomcat.plugin.version>
		<maven.apache.rat.plugin.version>0.9-SNAPSHOT</maven.apache.rat.plugin.version>
		<maven.rat.plugin.version>1.0-alpha-3</maven.rat.plugin.version>
		<maven.cobertura.plugin.version>2.5.2</maven.cobertura.plugin.version>
		<maven.release.plugin.version>2.3.2</maven.release.plugin.version>
		<maven.antrun.plugin.version>1.7</maven.antrun.plugin.version>
		<maven.emma.plugin.version>1.0-alpha-3</maven.emma.plugin.version>
		<maven.shared.jar.version>1.0</maven.shared.jar.version>
		<maven.jar.plugin.version>2.4</maven.jar.plugin.version>
		<maven.ejb.plugin.version>2.3</maven.ejb.plugin.version>
		<maven.war.plugin.version>2.3</maven.war.plugin.version>
		<maven.qalab.plugin.version>2.2</maven.qalab.plugin.version>
		<maven.plugin.api.plugin.version>2.0</maven.plugin.api.plugin.version>
		<maven.archiver.plugin.version>2.5</maven.archiver.plugin.version>
		<maven.plexus.util.plugin.version>1.1</maven.plexus.util.plugin.version>
		<maven.artifact.plugin.version>${maven.version}</maven.artifact.plugin.version>
		<maven.plugin.api.plugin.version>${maven.version}</maven.plugin.api.plugin.version>
		<maven.gui.plugin.version>1.0</maven.gui.plugin.version>
		<maven.plugin.plugin.plugin.version>3.1</maven.plugin.plugin.plugin.version>
		<maven.clirr.plugin.version>2.5</maven.clirr.plugin.version>
		<maven.patch.plugin.version>1.1.1</maven.patch.plugin.version>
		<maven.one.plugin.version>1.2</maven.one.plugin.version>
		<maven.findbugs.plugin.version>2.5.2</maven.findbugs.plugin.version>
		<maven.javancss.plugin.version>2.0</maven.javancss.plugin.version>
		<maven.jdepend.plugin.version>2.0-beta-2</maven.jdepend.plugin.version>
		<maven.changes.plugin.version>2.8</maven.changes.plugin.version>
		<maven.dashboard.plugin.version>1.0.0-beta-1</maven.dashboard.plugin.version>
		<maven.native2ascii.maven.plugin.version>1.0-beta-1</maven.native2ascii.maven.plugin.version>
		<maven.archetype.plugin.version>2.2</maven.archetype.plugin.version>
		<maven.deploy.plugin.version>2.7</maven.deploy.plugin.version>
		<maven.assembly.plugin.version>2.3</maven.assembly.plugin.version>
		<maven.changelog.plugin.version>2.2</maven.changelog.plugin.version>
		<maven.scm.plugin.version>1.8.1</maven.scm.plugin.version>
		<maven.checkstyle.plugin.version>2.9.1</maven.checkstyle.plugin.version>
		<maven.clean.plugin.version>2.5</maven.clean.plugin.version>
		<maven.compiler.plugin.version>3.0</maven.compiler.plugin.version>
		<maven.dependency.plugin.version>2.5.1</maven.dependency.plugin.version>
		<maven.clover.plugin.version>${clover.version}</maven.clover.plugin.version>
		<maven.eclipse.plugin.version>2.9</maven.eclipse.plugin.version>
		<maven.replacer.plugin.version>1.4.1</maven.replacer.plugin.version>
		<maven.gpg.plugin.version>1.4</maven.gpg.plugin.version>
		<maven.properties.maven.plugin.version>1.0-alpha-2</maven.properties.maven.plugin.version>
		<maven.sonar.maven.plugin.version>2.0</maven.sonar.maven.plugin.version>
		<maven.hotdeploy.plugin.version>0.3.3</maven.hotdeploy.plugin.version>
		<maven.cli.plugin.version>1.0.6</maven.cli.plugin.version>
		<maven.shade.plugin.version>1.7.1</maven.shade.plugin.version>
		<maven.rar.plugin.version>2.2</maven.rar.plugin.version>
		<maven.install.plugin.version>2.4</maven.install.plugin.version>
		<maven.ear.plugin.version>2.8</maven.ear.plugin.version>
		<maven.jboss.plugin.version>1.4.1</maven.jboss.plugin.version> <!-- only version 1.4.1 supports	hard deploying multiple	files -->
		<!--<maven.jboss.plugin.version>1.5.0</maven.jboss.plugin.version>-->
		<maven.jboss.packaging.plugin.version>2.2</maven.jboss.packaging.plugin.version>
		<maven.invoker.plugin.version>1.7</maven.invoker.plugin.version>
		<maven.minify.plugin.version>1.3.5</maven.minify.plugin.version>
		<maven.javadoc.plugin.version>2.9</maven.javadoc.plugin.version>
		<maven.jxr.plugin.version>2.3</maven.jxr.plugin.version>
		<maven.pmd.plugin.version>2.7.1</maven.pmd.plugin.version>
		<maven.project.info.reports.plugin.version>2.5.1</maven.project.info.reports.plugin.version>
		<maven.resources.plugin.version>2.6</maven.resources.plugin.version>
		<maven.site.old.plugin.version>2.3</maven.site.old.plugin.version>
		<!--<maven.site.plugin.version>${maven.site.old.plugin.version}</maven.site.plugin.version>-->
		<maven.site.plugin.version>3.2</maven.site.plugin.version>
		<maven.source.plugin.version>2.2.1</maven.source.plugin.version>
		<maven.buildnumber.plugin.version>1.2</maven.buildnumber.plugin.version>
		<maven.buildmetadata.plugin.version>1.1.5</maven.buildmetadata.plugin.version>	
		<maven.license.plugin.version>1.9.0</maven.license.plugin.version>	
		<maven.gmaven.plugin.version>1.4</maven.gmaven.plugin.version>
		<maven.verifier.plugin.version>1.0</maven.verifier.plugin.version>
		<maven.surefire.plugin.version>2.12.4</maven.surefire.plugin.version>
		<maven.surefire.report.plugin.version>${maven.surefire.plugin.version}</maven.surefire.report.plugin.version>
		<maven.sablecc.plugin.version>2.2</maven.sablecc.plugin.version>
		<maven.taglist.plugin.version>2.4</maven.taglist.plugin.version>
		<maven.versions.plugin.version>1.3.1</maven.versions.plugin.version>
		<maven.idea.plugin.version>2.2</maven.idea.plugin.version>
		<maven.cargo.maven2.plugin.version>1.2.4</maven.cargo.maven2.plugin.version>
		<maven.jetty.plugin.version>7.0.0.pre5</maven.jetty.plugin.version>
		<maven.jboss.as.plugin.version>7.2.Final</maven.jboss.as.plugin.version>
		<maven.ant.plugin.version>2.3</maven.ant.plugin.version>
		<maven.jalopy.plugin.version>1.0-alpha-1</maven.jalopy.plugin.version>
		<maven.axistools.plugin.version>1.4</maven.axistools.plugin.version>
		<maven.enforcer.plugin.version>1.1.1</maven.enforcer.plugin.version>
		<maven.bees.plugin.version>1.3.2</maven.bees.plugin.version>
		<maven.doap.plugin.version>1.1</maven.doap.plugin.version>
		<!--<maven.antlr3.plugin.version>3.1.1.2</maven.antlr3.plugin.version>-->
		<maven.antlr3.plugin.version>${org.antlr.version}</maven.antlr3.plugin.version>
		<maven.help.plugin.version>2.1.1</maven.help.plugin.version>
		<maven.build.helper.plugin.version>1.7</maven.build.helper.plugin.version>
		<maven.repository.plugin.version>2.3.1</maven.repository.plugin.version>
		<maven.remote.resources.plugin.version>1.3</maven.remote.resources.plugin.version>
		<maven.default.skin.version>1.0</maven.default.skin.version>
		<maven.jaxb.plugin.version>1.1.1</maven.jaxb.plugin.version>
		<maven.jaxb2.plugin.version>0.8.2</maven.jaxb2.plugin.version>
		<maven.sql.plugin.version>1.5</maven.sql.plugin.version>
		<maven.torque.plugin.version>3.3-RC2</maven.torque.plugin.version>
		<maven.exec.plugin.version>1.2.1</maven.exec.plugin.version>
		<maven.gwt.plugin.version>${gwt.version}</maven.gwt.plugin.version>
		<maven.java.formatter.plugin.version>0.3.1</maven.java.formatter.plugin.version>
		<maven.failsafe.plugin.version>2.12.4</maven.failsafe.plugin.version>
		<maven.dbunit.plugin.version>1.0-beta-3</maven.dbunit.plugin.version>
		<maven.flex.pmd.plugin.version>1.2</maven.flex.pmd.plugin.version>
		<maven.bundle.plugin.version>2.3.7</maven.bundle.plugin.version>
		<maven.flexmojos.plugin.version>3.8</maven.flexmojos.plugin.version>

		<hibernate3.maven.plugin.version>2.2</hibernate3.maven.plugin.version>

		<package.tomcat.zip.version>${tomcat.version}</package.tomcat.zip.version>

		<!-- Define the	version	of JBoss' Java EE 6 APIs we want to import. Any
		  dependencies from org.jboss.spec will	have their version defined by this
		  BOM -->
		<!--<org.jboss.spec.jboss.javaee6.version>2.0.0.Final</org.jboss.spec.jboss.javaee6.version>-->
		<org.jboss.spec.jboss.javaee6.version>3.0.1.Final</org.jboss.spec.jboss.javaee6.version>
		<!--<org.jboss.spec.jboss.javaee6.version>3.0.1.Final</org.jboss.spec.jboss.javaee6.version>-->
		<!-- Define the	version	of Tomcat' Java	EE 6 APIs we want to import. Any
		  dependencies from org.jboss.spec will	have their version defined by this
		  BOM -->
		<javax.javaee.api.version>6.0</javax.javaee.api.version>
		<!-- Alternatively, comment out	the above line,	and un-comment the line
		  below	to use version 3.0.0.Beta1-redhat-1 which is a release certified to
		  work with JBoss EAP 6. It requires you have access to	the JBoss EAP 6	maven
		  repository. -->
		<!-- <org.jboss.spec.jboss.javaee6.version>3.0.0.Beta1-redhat-1</org.jboss.spec.jboss.javaee6.version> -->
		<!-- Define the version of JBoss' Java EE 6 APIs and Tools we want to import.  -->
        	<org.jboss.bom.jboss.javaee6.with.tools.version>1.0.0.M6</org.jboss.bom.jboss.javaee6.with.tools.version>
        	<org.jboss.as.arquillian.container.version>7.1.1.Final</org.jboss.as.arquillian.container.version> <!-- same as version.jbossas7 -->
        	<org.jboss.spec.jboss.javaee.6.0.version>${org.jboss.bom.jboss.javaee6.with.tools.version}</org.jboss.spec.jboss.javaee.6.0.version>
        	<!-- Define the version of JBoss' Java EE 6 APIs and Tools we want to import.  -->
      		<jboss.bom.version>1.0.3.Final</jboss.bom.version>
	</properties>

	<build>
		<extensions>
			<!-- WebDAV for	remote deployment -->
			<!-- sonar desactivation required -->
			<!-- not working with maven 3 mvn site
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav</artifactId>
				<version>${wagon.webdav.plugin.version}</version>
			</extension>
			-->
			<!-- comment to	avoid basic authentication scheme selected -->
			<extension>
			       <groupId>org.apache.maven.wagon</groupId>
			       <artifactId>wagon-webdav-jackrabbit</artifactId>
			       <version>${wagon.webdav.jackrabbit.version}</version>
			</extension>
			<extension>
				<groupId>org.jvnet.wagon-svn</groupId>
				<artifactId>wagon-svn</artifactId>
				<version>${wagon.svn.plugin.version}</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>${wagon.ftp.plugin.version}</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.wagon</groupId> 
				<artifactId>wagon-ssh</artifactId> 
				<version>${wagon.ssh.plugin.version}</version> 
			</extension> 
			<!-- Needed for	dashboard-maven-plugin and jalopy-maven-plugin and maven-checkstyle-plugin -->
			<extension>
				<groupId>com.nabla.project</groupId>
				<artifactId>build-tools</artifactId>
				<version>1.0</version>
			</extension>
		</extensions>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven.eclipse.plugin.version}</version>
				</plugin>
				<!--This plugin's configuration	is used	to store Eclipse m2e settings
					only. It has no	influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${lifecycle.mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[${maven.antrun.plugin.version},)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore	/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>aspectj-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>test-compile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jvnet.jaxb2.maven2</groupId>
										<artifactId>maven-jaxb2-plugin</artifactId>
										<versionRange>[0.7,)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.andromda.maven.plugins</groupId>
										<artifactId>andromda-cartridge-plugin</artifactId>
										<versionRange>[${andromda.version},)</versionRange>
										<goals>
											<goal>test</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore	/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.andromda.maven.plugins</groupId>
										<artifactId>andromda-maven-plugin</artifactId>
										<versionRange>[${andromda.version},)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore	/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.andromda.maven.plugins</groupId>
										<artifactId>andromdapp-maven-plugin</artifactId>
										<versionRange>[${andromda.version},)</versionRange>
										<goals>
											<goal>generate</goal>
											<goal>clean-structure</goal>
											<goal>instrument-scripts</goal>
											<goal>eclipse</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore	/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[${maven.dependency.plugin.version},)</versionRange>
										<goals>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore	/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.andromda.maven.plugins</groupId>
										<artifactId>andromda-bootstrap-plugin</artifactId>
										<versionRange>[${andromda.version},)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore	/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>hibernate3-maven-plugin</artifactId>
										<versionRange>[${hibernate3.maven.plugin.version},)</versionRange>
										<goals>
											<goal>hbm2ddl</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>sql-maven-plugin</artifactId>
										<versionRange>[${maven.sql.plugin.version},)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>properties-maven-plugin</artifactId>
										<versionRange>[${maven.properties.maven.plugin.version},)</versionRange>
										<goals>
											<goal>read-project-properties</goal>
											<goal>write-active-profile-properties</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.gmaven</groupId>
										<artifactId>gmaven-plugin</artifactId>
										<versionRange>[${maven.gmaven.plugin.version},)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<!--
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.ctp.seam.maven</groupId>
										<artifactId>maven-hotdeploy-plugin</artifactId>
										<versionRange>[${maven.hotdeploy.plugin.version},)</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								-->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[${maven.build.helper.plugin.version},)</versionRange>
										<goals>
											<goal>add-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[${maven.build.helper.plugin.version},)</versionRange>
										<goals>
											<goal>add-test-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>								
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.googlecode.maven-java-formatter-plugin</groupId>
										<artifactId>maven-java-formatter-plugin</artifactId>
										<versionRange>[${maven.java.formatter.plugin.version},)</versionRange>
										<goals>
											<goal>format</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
									  <groupId>org.codehaus.mojo</groupId>
									  <artifactId>gwt-maven-plugin</artifactId>
									  <versionRange>[${maven.gwt.plugin.version},)</versionRange>
									  <goals>
									    <goal>resources</goal>
									  </goals>
									</pluginExecutionFilter>
									<action>
									  <execute />
									</action>
								</pluginExecution>
								<pluginExecution>
								  <pluginExecutionFilter>
								    <groupId>net.kindleit</groupId>
								    <artifactId>maven-gae-plugin</artifactId>
								    <versionRange>[0.7.3,)</versionRange>
								    <goals>
								      <goal>unpack</goal>
								    </goals>
								  </pluginExecutionFilter>
								  <action>
								    <execute />
								  </action>
								</pluginExecution>

								<pluginExecution>
								  <pluginExecutionFilter>
								    <groupId>org.bsc.maven</groupId>
								    <artifactId>maven-processor-plugin</artifactId>
								    <versionRange>[2.0.5,)</versionRange>
								    <goals>
								      <goal>process</goal>
								    </goals>
								  </pluginExecutionFilter>
								  <action>
								    <execute />
								  </action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>xml-maven-plugin</artifactId>
										<versionRange>[${maven.xml.plugin.version},)</versionRange>
										<goals>
											<goal>transform</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<plugin>
				  <groupId>org.codehaus.mojo</groupId>
				  <artifactId>properties-maven-plugin</artifactId>
				  <version>${maven.properties.maven.plugin.version}</version>
				  <executions>
				    <execution>
				      <phase>validate</phase>
				      <goals>
					<goal>read-project-properties</goal>
				      </goals>
				    </execution>
				  </executions>
				</plugin>

				<plugin>
				  <groupId>org.codehaus.mojo</groupId>
				  <artifactId>sonar-maven-plugin</artifactId>
				  <version>${maven.sonar.maven.plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven.gpg.plugin.version}</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!--
				<plugin>
				    <groupId>com.ctp.seam.maven</groupId>
				    <artifactId>maven-hotdeploy-plugin</artifactId>
				    <version>${maven.hotdeploy.plugin.version}</version>
				</plugin>
				-->
				<plugin>
				    <groupId>org.twdata.maven</groupId>
				    <artifactId>maven-cli-plugin</artifactId>
				    <version>${maven.cli.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven.antrun.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.ant</groupId>
							<artifactId>ant</artifactId>
							<version>${ant.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.ant</groupId>
							<artifactId>ant-trax</artifactId>
							<version>${ant.trax.version}</version>
						</dependency>
					</dependencies>
					<!--
						<executions> <execution> <id>echodir</id> <goals> <goal>run</goal>
						</goals> <phase>verify</phase> <inherited>false</inherited>
						<configuration>	<tasks>	<echo> Build Dir:
						${project.build.directory} </echo> </tasks> </configuration>
						</execution> </executions> <dependencies> <dependency>
						<groupId>ant</groupId> <artifactId>ant-trax</artifactId>
						<version>1.6.5</version> </dependency> </dependencies>
					-->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<source>${java.source.version}</source>
						<target>${java.runtime.version}</target>
						<compilerVersion>${java.source.version}</compilerVersion>
						<meminitial>128m</meminitial>
						<maxmem>512m</maxmem>
						<fork>${fork}</fork>
						<debug>${jdkDebug}</debug>
						<optimize>${jdkOptimize}</optimize>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
						<encoding>${project.build.sourceEncoding}</encoding>
						<compilerArgument>-Xlint:cast,unchecked,fallthrough,finally,serial</compilerArgument>
						<!--
							<verbose>true</verbose>	<excludes>
							<exclude>**/*Point*.java</exclude> </excludes>
						-->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-repository-plugin</artifactId>
					<version>${maven.repository.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-archetype-plugin</artifactId>
					<version>${maven.archetype.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven.install.plugin.version}</version>
					<configuration>
						<createChecksum>true</createChecksum>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>

					<!--
						We must	force maven site 2.0-beta-5 because beta-6 does	compile
						only with Java 5
					-->
					<version>${maven.release.plugin.version}</version>
					<configuration>
						<useReleaseProfile>true</useReleaseProfile>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<useReleaseProfile>true</useReleaseProfile>
						<arguments>-Prelease</arguments>
						<preparationGoals>clean	install</preparationGoals>
						<!--
							<preparationGoals>install</preparationGoals>

							<tagBase>https://svn.apache.org/repos/asf/maven/components/releases</tagBase>
						-->

						<tagBase>https://alban.googlecode.com/svn/mavenrepo/releases</tagBase>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven.enforcer.plugin.version}</version>
					<executions>
						<execution>
							<id>enforce-jdk</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<!-- minimum version is	2.0.7, higher versions allowed -->
										<version>[${maven.version},]</version>
									</requireMavenVersion>

									<requireJavaVersion>
										<message>You need at least Java	${jdkLevel}!</message>
										<!-- minimum version is	1.5, higher versions allowed -->
										<version>[${jdkLevel},]</version>
										<!--<version>[1.6.0,]</version>-->
									</requireJavaVersion>
									<DependencyConvergence/>
									<requirePluginVersions>
										<message>Best Practice is to always define plugin versions!</message>
										<banLatest>true</banLatest>
										<banRelease>true</banRelease>
										<banTimestamps>true</banTimestamps>
										<banSnapshots>false</banSnapshots>
										<phases>clean,deploy,site</phases>
									</requirePluginVersions>

								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- allow to create a single jar with all dependencies	-->
				<!-- only use for tests	and not	in production -->
				<!-- command : mvn assembly:assembly -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven.assembly.plugin.version}</version>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id> <!-- this is used for inheritance merges	-->
							<phase>package</phase> <!-- append to the packaging phase. -->
							<goals>
								<goal>directory-inline</goal> <!-- goals == mojos -->
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven.site.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resources.plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<!--
					Automatically attach sources to	build artifact as
					artifact-version-sources.jar and deploy	to local repository
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven.source.plugin.version}</version>
					<configuration>
						<includePom>true</includePom>
					</configuration>
					<!--
					mvn source:jar mvn source:test-jar
					-->
					<!--
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
					-->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-verifier-plugin</artifactId>
					<version>${maven.verifier.plugin.version}</version>
				</plugin>
				<!-- Global test exclusions -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
					<inherited>true</inherited>
					<configuration>
						<!-- Enable or disable JUnit tests -->
						<skip>${maven.test.skip}</skip>
						<linkXRef>true</linkXRef>
						<argLine>-Xms64m -Xmx256m -Djava.awt.headless=true -XX:-UseSplitVerifier</argLine>
						<excludes>
							<exclude implementation="java.lang.String">**/Abstract*.*</exclude>
						</excludes>
						<!-- Enable or disable Stop maven -->
						<testFailureIgnore>${maven.test.failure.skip}</testFailureIgnore>
						<!-- when forked, debugging in Eclipse won't work -->
						<!--<forkMode>never</forkMode>-->
						<forkMode>once</forkMode>
						<!--<forkMode>pertest</forkMode>-->
						<!--<forkMode>always</forkMode>-->
						<useSystemClassLoader>true</useSystemClassLoader>
						<useManifestOnlyJar>false</useManifestOnlyJar>
						<!-- shows total/fail/error summaries on stdout: -->
						<printSummary>true</printSummary>
						<!-- this gives	test class name	& time elapsed in report files:	-->
						<!--<reportFormat>plain</reportFormat> -->
						<reportFormat>xml</reportFormat>
						<!--<classesDirectory>${project.build.directory}/generated-classes/emma/classes</classesDirectory>-->
						<systemPropertyVariables>
							<!--
							<property>
								<name>application.property.dir</name>
								<value>${product.sourceDirectory}/presentation/ear/etc</value>
							</property>
							<property>
								<name>application.property.name</name>
								<value>product.properties</value>
							</property>
							-->
							<!-- How to prevent tests from running twice -->
							<property>
								<name>net.sourceforge.cobertura.datafile</name>
								<value>~/cobertura.ser</value>
							</property>
						</systemPropertyVariables>
						 <!-- Add source folders to test classpath in order to run gwt-tests as	normal junit-tests -->
						<additionalClasspathElements>
						  <additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
						  <additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
						</additionalClasspathElements>
						<!-- Folder for	generated testing stuff	-->
						<systemProperties>
						  <property>
						    <name>gwt.args</name>
						    <value>-out	${project.build.directory}/${project.build.finalName}</value>
						  </property>
						</systemProperties>
					</configuration>

					<!--
						Skip the normal	tests, we'll run them in the integration-test
						phase with selenium
					-->
					<!--
						<configuration>	<skip>true</skip> </configuration> <executions>
						<execution> <phase>integration-test</phase> <goals>
						<goal>test</goal> </goals> <configuration> <skip>false</skip>
						</configuration> </execution> </executions>
					-->

				</plugin>
				<!-- The build date is available as $buildNumber in my POMs and	resource files.	-->
				<!-- buildnumber-maven-plugin DOES not WORKS use maven-buildmetadata-plugin instead -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>${maven.buildnumber.plugin.version}</version>
					<configuration>
						<format>{0,date,yyyy-MM-dd HH:mm:ss}.{1}</format>
            					<items>
            					    <item>timestamp</item>
            					    <item>scmVersion</item>
            					</items>
						<!--<format>{0,number}</format>-->
						<!--<format>Build: #{0} ({1,date})</format>-->
						<!--<format>{0,date,yyyy-MM-dd HH:mm:ss}</format>-->
						<!--
						<items>
						        <item>buildNumber\d*</item>
							<item>timestamp</item>
						</items>  
						-->
						<buildNumberPropertyName>buildNumberSeq</buildNumberPropertyName>
     						<!-- 
     						 doCheck and doUpdate actually talk to repository if it's true,
     						 Check would check that there are no local changes. 
     						 Update would update it 
     						-->					
						<doCheck>true</doCheck>
						<doUpdate>true</doUpdate>
						<revisionOnScmFailure>1.0</revisionOnScmFailure>    
						<getRevisionOnlyOnce>true</getRevisionOnlyOnce> 
					</configuration>
					<executions>
						<execution>
						  <phase>validate</phase>
						  <goals>
							<goal>create</goal>
						  </goals>
						</execution>
					</executions>
				</plugin>

		  		<plugin>
		  		  <groupId>de.smartics.maven.plugin</groupId>
		  		  <artifactId>maven-buildmetadata-plugin</artifactId>
		  		  <version>${maven.buildmetadata.plugin.version}</version>
		  		</plugin>		
				<plugin>
				  <groupId>com.mycila.maven-license-plugin</groupId>
				  <artifactId>maven-license-plugin</artifactId>
				  <version>${maven.license.plugin.version}</version>
				  <configuration>
				    <properties>
				      <year>\${build.copyright.year}</year>
				    </properties>
				  </configuration>
				</plugin>		  				
				<!--
				  see: http://docs.codehaus.org/display/GMAVEN/Home
				-->
				<plugin>
				  <groupId>org.codehaus.gmaven</groupId>
				  <artifactId>gmaven-plugin</artifactId>
				  <version>${maven.gmaven.plugin.version}</version>
				  <configuration>
				    <providerSelection>2.0</providerSelection>
				    <debug>${jdkDebug}</debug>
				    <stacktrace>${jdkDebug}</stacktrace>
				    <targetBytecode>${jdkLevel}</targetBytecode> <!-- is the value to compile for a JDK	1.5 or later JVM. -->
				    <verbose>true</verbose>
				    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
				  </configuration>

				  <!--
				    By default,	GMaven 1.3 will	always use Groovy 1.7.0	for compilation, no matter which
				    Groovy version you have on the class path. This is here to to configure GMaven to use a
				    different Groovy version, see e.g.
				      http://code.google.com/p/spock/source/browse/branches/groovy-1.7/spock-example/pom.xml
				   -->
				  <dependencies>
				    <dependency>
				      <groupId>org.codehaus.gmaven.runtime</groupId>
				      <artifactId>gmaven-runtime-1.7</artifactId>
				      <version>${maven.gmaven.plugin.version}</version>

				      <exclusions>
					<exclusion>
					  <groupId>org.codehaus.groovy</groupId>
					  <artifactId>groovy-all</artifactId>
					</exclusion>
				      </exclusions>
				    </dependency>

				    <dependency>
				      <groupId>org.codehaus.groovy</groupId>
				      <artifactId>groovy-all</artifactId>
				      <version>${groovy.version}</version>
				    </dependency>

				  </dependencies>

				  <!--
				    Add	this to	pom where plugin is actually used. see e.g. groovybooking-jee project
				    see: http://communitymapbuilder.org/pages/viewpage.action?pageId=110166073
				    see: http://btilford.blogspot.com/2010_02_01_archive.html
				  -->
				  <!--
				  <executions>
				    <execution>
				      <goals>
					<goal>compile</goal>
					<goal>testCompile</goal>
					<goal>generateStubs</goal>
					<goal>generateTestStubs</goal>
				      </goals>
				    </execution>
				  </executions>
				  -->
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>xdoclet-maven-plugin</artifactId>
					<version>${maven.xdoclet.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>xdoclet</groupId>
							<artifactId>xjavadoc</artifactId>
							<version>1.5-050611</version>
							<scope>runtime</scope>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>xdoclet</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>xdoclet</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ejb-plugin</artifactId>
					<version>${maven.ejb.plugin.version}</version>
					<configuration>
						<!--<ejbVersion>2.1</ejbVersion>-->
						<ejbVersion>3.0</ejbVersion>
						<encoding>${project.build.sourceEncoding}</encoding>
						<!--<generateClient>true</generateClient> -->
						<generateClient>false</generateClient>
						<!--
							<clientIncludes> <clientInclude>**/ejb/**</clientInclude>
							<clientInclude>**/exceptions/**</clientInclude>
							<clientInclude>**/events/**</clientInclude>
							<clientInclude>**/util/**</clientInclude>
							<clientInclude>**/filters/**</clientInclude>
							<clientInclude>**/mask/**</clientInclude> </clientIncludes>
							<clientExcludes> <clientExclude>**/meta-inf/**</clientExclude>
							<clientExclude>**/META-INF/**</clientExclude> </clientExcludes>
						-->
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
					                  <Url>${project.url}</Url>
					                  <Specification-Title>${project.name}-${product.title}</Specification-Title>
					                  <Specification-Version>${project.version}-${product.version}</Specification-Version>
					                  <Specification-Vendor>${project.organization.name}</Specification-Vendor>
					                  <Implementation-Title>${project.name}-${product.title}</Implementation-Title>
					                  <Implementation-Version>${project.version}-${product.version}</Implementation-Version>
					                  <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
					                  <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
					                  <Implementation-Build>${maven.build.timestamp}</Implementation-Build>							
        				                  <Implementation-SCM-Revision-Number>${build.scmRevision.id}</Implementation-SCM-Revision-Number>
        				                  <Implementation-SCM-Revision-Date>${build.scmRevision.date}</Implementation-SCM-Revision-Date>
        				                  <Implementation-URL>${project.url}</Implementation-URL>
        				                  <Implementation-Date>${build.date}</Implementation-Date>
        				                  <Implementation-Timestamp>${build.timestamp.millis}</Implementation-Timestamp>
        				                  <Implementation-DatePattern>${build.date.pattern}</Implementation-DatePattern>
        				                  <Implementation-Full-Version>${build.version.full}</Implementation-Full-Version>
        				                  <Built-Host>${build.host.name}</Built-Host>
        				                  <Built-OS>${os.name} / ${os.arch} / ${os.version}</Built-OS>
        				                  <Built-By>${build.user}</Built-By>
        				                  <Build-Machine>${env.COMPUTERNAME}</Build-Machine>
					                  <Build-Date>${build.date}</Build-Date>
					                  <Build-Revision>${build.scmRevision.id}-${buildNumberSeq}</Build-Revision>
        				                  <Maven-Version>${build.maven.version}</Maven-Version>
        				                  <Java-Version>${java.version}</Java-Version>
        				                  <Java-Vendor>${java.vendor}</Java-Vendor>														
					                  <X-Compile-Source-JDK>${jdkLevel}</X-Compile-Source-JDK>
					                  <X-Compile-Target-JDK>${jdkLevel}</X-Compile-Target-JDK>								
					                  <Mode>${environment}</Mode>
							</manifestEntries>
						</archive>
						<includeJar>false</includeJar>
						<excludes>
							<exclude>**/*.ref</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>axistools-maven-plugin</artifactId>
					<version>${maven.axistools.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ear-plugin</artifactId>
					<version>${maven.ear.plugin.version}</version>
					<configuration>
					  <!--
					    MNGECLIPSE-1541:
					    During the import of a mavenized ear project (File > Import... > General > Maven Projects)
					    an application.xml file is generated in src/main/application/META-INF/application.xml.
					    https://issues.sonatype.org/browse/MNGECLIPSE-1541

					    MNGECLIPSE-2145:
					    Generated application.xml doesn't contain final names
					    https://issues.sonatype.org/browse/MNGECLIPSE-2145

					    To fix this	we excludes the	eclipse	generated application.xml during mvn package
					  -->
					  <earSourceExcludes>**/application.xml</earSourceExcludes>

					  <!-- Use maven generated application.xml -->
					  <generateApplicationXml>true</generateApplicationXml>

					  <version>5</version>
					  <defaultLibBundleDir>lib</defaultLibBundleDir>
					  <encoding>${project.build.sourceEncoding}</encoding>
					  <archive>
					    <manifest>
					      <addClasspath>true</addClasspath>
					      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
					    </manifest>
					    <manifestEntries>
					      <Url>${project.url}</Url>
					      <Specification-Title>${project.name}-${product.title}</Specification-Title>
					      <Specification-Version>${project.version}-${product.version}</Specification-Version>
					      <Specification-Vendor>${project.organization.name}</Specification-Vendor>
					      <Implementation-Title>${project.name}-${product.title}</Implementation-Title>
					      <Implementation-Version>${project.version}-${product.version}</Implementation-Version>
					      <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
					      <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
					      <Implementation-Build>${maven.build.timestamp}</Implementation-Build>							
        				      <Implementation-SCM-Revision-Number>${build.scmRevision.id}</Implementation-SCM-Revision-Number>
        				      <Implementation-SCM-Revision-Date>${build.scmRevision.date}</Implementation-SCM-Revision-Date>
        				      <Implementation-URL>${project.url}</Implementation-URL>
        				      <Implementation-Date>${build.date}</Implementation-Date>
        				      <Implementation-Timestamp>${build.timestamp.millis}</Implementation-Timestamp>
        				      <Implementation-DatePattern>${build.date.pattern}</Implementation-DatePattern>
        				      <Implementation-Full-Version>${build.version.full}</Implementation-Full-Version>
        				      <Built-Host>${build.host.name}</Built-Host>
        				      <Built-OS>${os.name} / ${os.arch} / ${os.version}</Built-OS>
        				      <Built-By>${build.user}</Built-By>
        				      <Build-Machine>${env.COMPUTERNAME}</Build-Machine>
					      <Build-Date>${build.date}</Build-Date>
					      <Build-Revision>${build.scmRevision.id}-${buildNumberSeq}</Build-Revision>
        				      <Maven-Version>${build.maven.version}</Maven-Version>
        				      <Java-Version>${java.version}</Java-Version>
        				      <Java-Vendor>${java.vendor}</Java-Vendor>														
					      <X-Compile-Source-JDK>${jdkLevel}</X-Compile-Source-JDK>
					      <X-Compile-Target-JDK>${jdkLevel}</X-Compile-Target-JDK>								
					      <Mode>${environment}</Mode>
					    </manifestEntries>
					  </archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.plugin.version}</version>
					<configuration>
						<excludes>
							<exclude>**/*.ref</exclude>
						</excludes>
						<encoding>${project.build.sourceEncoding}</encoding>
						<archive>
							<!--

								! prevent maven	from adding pom	meta-data to our jars. ! See:
								http://maven.apache.org/guides/mini/guide-archive-configuration.html
								! for info on the archiver configuration properties. ! NOTE:
								<addMavenDescriptor> requires v	2.1 or greater archive plugin.
							-->
							<addMavenDescriptor>false</addMavenDescriptor>

							<!--
								Disabled for http://mule.mulesource.org/jira/browse/MULE-1153
								and http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4408526

								<index>false</index>
							-->
							<!--
								<index>true</index>
							-->
							<!-- List dependencies in the MANIFEST.MF -->
							<!--<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>--> <!-- for maven-bundle-plugin -->
							<manifest>
								<addClasspath>true</addClasspath>								
								<!--
									<mainClass>
									com.sgcib.services.extract.eoleextract.FullExtract</mainClass>
									<addDefaultSpecificationEntries>false</addDefaultSpecificationEntries>
									<addDefaultImplementationEntries>false</addDefaultImplementationEntries>
								-->
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>

								<!--
									<addExtensions>true</addExtensions>
								-->
								<!--
									DO NOT USE classpathMavenRepositoryLayout TO OVERIDE KARMA
									<classpathMavenRepositoryLayout>true</classpathMavenRepositoryLayout>
								-->
							</manifest>

							<!-- Custom Entries -->
							<manifestEntries>
					      		  <Url>${project.url}</Url>
					      		  <Specification-Title>${project.name}-${product.title}</Specification-Title>
					      		  <Specification-Version>${project.version}-${product.version}</Specification-Version>
					      		  <Specification-Vendor>${project.organization.name}</Specification-Vendor>
					      		  <Implementation-Title>${project.name}-${product.title}</Implementation-Title>
					      		  <Implementation-Version>${project.version}-${product.version}</Implementation-Version>
					      		  <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
					      		  <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
					      		  <Implementation-Build>${maven.build.timestamp}</Implementation-Build>							
        				      		  <Implementation-SCM-Revision-Number>${build.scmRevision.id}</Implementation-SCM-Revision-Number>
        				      		  <Implementation-SCM-Revision-Date>${build.scmRevision.date}</Implementation-SCM-Revision-Date>
        				      		  <Implementation-URL>${project.url}</Implementation-URL>
        				      		  <Implementation-Date>${build.date}</Implementation-Date>
        				      		  <Implementation-Timestamp>${build.timestamp.millis}</Implementation-Timestamp>
        				      		  <Implementation-DatePattern>${build.date.pattern}</Implementation-DatePattern>
        				      		  <Implementation-Full-Version>${build.version.full}</Implementation-Full-Version>
        				      		  <Built-Host>${build.host.name}</Built-Host>
        				      		  <Built-OS>${os.name} / ${os.arch} / ${os.version}</Built-OS>
        				      		  <Built-By>${build.user}</Built-By>
        				      		  <Build-Machine>${env.COMPUTERNAME}</Build-Machine>
					      		  <Build-Date>${build.date}</Build-Date>
					      		  <Build-Revision>${build.scmRevision.id}-${buildNumberSeq}</Build-Revision>
        				      		  <Maven-Version>${build.maven.version}</Maven-Version>
        				      		  <Java-Version>${java.version}</Java-Version>
        				      		  <Java-Vendor>${java.vendor}</Java-Vendor>														
					      		  <X-Compile-Source-JDK>${jdkLevel}</X-Compile-Source-JDK>
					      		  <X-Compile-Target-JDK>${jdkLevel}</X-Compile-Target-JDK>								
					      		  <Mode>${environment}</Mode>
							</manifestEntries>

							<!--
								This would work	if this	issue gets closed:
								http://jira.codehaus.org/browse/MNG-1832
							-->
							<!-- Build-Date>${mvn.timestamp.yyyy-MM-dd-HH:mm:ss}</Build-Date -->
							<!--  include repository revision from buildnumber plugin -->
							<!--<Build-Revision>${build.scmRevision.id}</Build-Revision>-->
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ant-plugin</artifactId>
					<version>${maven.ant.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.antlr</groupId>
					<artifactId>antlr3-maven-plugin</artifactId>
					<version>${maven.antlr3.plugin.version}</version>
                			<executions>
                			    <execution>
                			        <goals>
                			            <goal>antlr</goal>
                			        </goals>
                			        <configuration>
                			            <goals>
                			                <goal>antlr</goal>
                			            </goals>
                			            <conversionTimeout>10000</conversionTimeout>
                			            <debug>false</debug>
                			            <dfa>false</dfa>
                			            <nfa>false</nfa>
                			            <libDirectory>src/main/antlr3/imports</libDirectory>
                			            <messageFormat>antlr</messageFormat>
                			            <outputDirectory>target/generated-sources/antlr3</outputDirectory>
                			            <printGrammar>false</printGrammar>
                			            <profile>false</profile>
                			            <report>false</report>
                			            <sourceDirectory>src/main/antlr3</sourceDirectory>
                			            <trace>true</trace>
                			            <verbose>true</verbose>
                			        </configuration>
                			    </execution>
                			</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>native2ascii-maven-plugin</artifactId>
					<version>${maven.native2ascii.maven.plugin.version}</version>
					<!--
						<dependencies> <dependency> <groupId>com.sun</groupId>
						<artifactId>tools</artifactId> <version>1.5.0</version>
						<scope>system</scope>
						<systemPath>${java.home}/../lib/tools.jar</systemPath>
						</dependency> </dependencies>
					-->
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jalopy-maven-plugin</artifactId>
					<version>${maven.jalopy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-rar-plugin</artifactId>
					<version>${maven.rar.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${maven.build.helper.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>${maven.help.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven.clean.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven.war.plugin.version}</version>
					<configuration>
					  <encoding>${project.build.sourceEncoding}</encoding>
					  <webResources>
					    <webResource>
					      <directory>${basedir}/src/main/webapp/WEB-INF</directory>
					      <targetPath>WEB-INF</targetPath>
					      <filtering>true</filtering>
					    </webResource>
					  </webResources>
					  <archive>
					    <manifest>
					      <addClasspath>true</addClasspath>
					      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
					    </manifest>
					    <manifestEntries>
					      <Url>${project.url}</Url>
					      <Specification-Title>${project.name}-${product.title}</Specification-Title>
					      <Specification-Version>${project.version}-${product.version}</Specification-Version>
					      <Specification-Vendor>${project.organization.name}</Specification-Vendor>
					      <Implementation-Title>${project.name}-${product.title}</Implementation-Title>
					      <Implementation-Version>${project.version}-${product.version}</Implementation-Version>
					      <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
					      <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
					      <Implementation-Build>${maven.build.timestamp}</Implementation-Build>							
        				      <Implementation-SCM-Revision-Number>${build.scmRevision.id}</Implementation-SCM-Revision-Number>
        				      <Implementation-SCM-Revision-Date>${build.scmRevision.date}</Implementation-SCM-Revision-Date>
        				      <Implementation-URL>${project.url}</Implementation-URL>
        				      <Implementation-Date>${build.date}</Implementation-Date>
        				      <Implementation-Timestamp>${build.timestamp.millis}</Implementation-Timestamp>
        				      <Implementation-DatePattern>${build.date.pattern}</Implementation-DatePattern>
        				      <Implementation-Full-Version>${build.version.full}</Implementation-Full-Version>
        				      <Built-Host>${build.host.name}</Built-Host>
        				      <Built-OS>${os.name} / ${os.arch} / ${os.version}</Built-OS>
        				      <Built-By>${build.user}</Built-By>
        				      <Build-Machine>${env.COMPUTERNAME}</Build-Machine>
					      <Build-Date>${build.date}</Build-Date>
					      <Build-Revision>${build.scmRevision.id}-${buildNumberSeq}</Build-Revision>
        				      <Maven-Version>${build.maven.version}</Maven-Version>
        				      <Java-Version>${java.version}</Java-Version>
        				      <Java-Vendor>${java.vendor}</Java-Vendor>														
					      <X-Compile-Source-JDK>${jdkLevel}</X-Compile-Source-JDK>
					      <X-Compile-Target-JDK>${jdkLevel}</X-Compile-Target-JDK>								
					      <Mode>${environment}</Mode>
					    </manifestEntries>
					  </archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${maven.plugin.plugin.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-remote-resources-plugin</artifactId>
					<version>${maven.remote.resources.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven.shade.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-invoker-plugin</artifactId>
					<version>${maven.invoker.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.samaxes.maven</groupId>
					<artifactId>maven-minify-plugin</artifactId>
					<version>${maven.minify.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-one-plugin</artifactId>
					<version>${maven.one.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-patch-plugin</artifactId>
					<version>${maven.patch.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>clirr-maven-plugin</artifactId>
					<version>${maven.clirr.plugin.version}</version>
					<configuration>
						<minSeverity>info</minSeverity>
						<comparisonVersion>1.0</comparisonVersion>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${maven.versions.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven.project.info.reports.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven.surefire.report.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.plugin.version}</version>
						<dependencies>
						  <dependency>
						    <groupId>org.codehaus.mojo</groupId>
						    <artifactId>clirr-maven-plugin</artifactId>
						    <version>${maven.clirr.plugin.version}</version>
						  </dependency>
						</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>${maven.scm.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>${maven.jxr.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>taglist-maven-plugin</artifactId>
					<version>${maven.taglist.plugin.version}</version>
					<configuration>
						<tagListOptions>
							<tagClasses>
								<tagClass>
									<displayName>Todo Work</displayName>
									<tags>
										<tag>
											<matchString>todo</matchString>
											<matchType>ignoreCase</matchType>
										</tag>
										<tag>
											<matchString>FIXME</matchString>
											<matchType>exact</matchType>
										</tag>
										<tag>
											<matchString>XXX</matchString>
											<matchType>exact</matchType>
										</tag>
										<tag>
											<matchString>@deprecated</matchString>
											<matchType>exact</matchType>
										</tag>
									</tags>
								</tagClass>
							</tagClasses>
						</tagListOptions>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${maven.findbugs.plugin.version}</version>
					<configuration>
						<findbugsXmlOutput>true</findbugsXmlOutput>
						<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
						<xmlOutput>true</xmlOutput>
						<fork>${fork}</fork>
						<!--<threshold>Normal</threshold>-->
						<threshold>High</threshold>
						<effort>Default</effort>
						<failOnError>false</failOnError>
						<excludeFilterFile>project/findbugs-exclude-filters.xml</excludeFilterFile>
					</configuration>
				</plugin>
				<!--
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>emma-maven-plugin</artifactId>
					<version>${maven.emma.plugin.version}</version>
				</plugin>
				-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${maven.cobertura.plugin.version}</version>
					<configuration>
						<formats>
							<format>html</format>
							<format>xml</format>
						</formats>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>dashboard-maven-plugin</artifactId>
					<version>${maven.dashboard.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-changelog-plugin</artifactId>
					<version>${maven.changelog.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-changes-plugin</artifactId>
					<version>${maven.changes.plugin.version}</version>
				</plugin>

				<!-- TODO does not work jdepend:generate -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jdepend-maven-plugin</artifactId>
					<version>${maven.jdepend.plugin.version}</version>
				</plugin>
				<!--
				<plugin>
					<groupId>org.apache.rat</groupId>
					<artifactId>apache-rat-plugin</artifactId>
					<version>${maven.apache.rat.plugin.version}</version>
				</plugin>
				-->

				<!-- TODO javancss:report does not work -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>javancss-maven-plugin</artifactId>
					<version>${maven.javancss.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${maven.pmd.plugin.version}</version>
					<configuration>
						<targetJdk>${jdkLevel}</targetJdk>
						<linkXRef>true</linkXRef>
						<rulesets>
							<ruleset>project/pmd_ruleset.xml</ruleset>
							<!--<ruleset>project/pmd_regles_nabla.xml</ruleset> -->
						</rulesets>
						<excludeRoots>
							<excludeRoot>${basedir}/${target.dir}/generated-sources</excludeRoot>
						</excludeRoots>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven.checkstyle.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.plugin.version}</version>
                        		<configuration>
                        		    <ignoreNonCompile>true</ignoreNonCompile>
                        		</configuration>
				</plugin>
				<plugin>
					<groupId>com.atlassian.maven.plugins</groupId>
					<artifactId>maven-clover2-plugin</artifactId>
					<version>${maven.clover.plugin.version}</version>
					<configuration>
						<jdk>${jdkLevel}</jdk>
						<generateXml>true</generateXml>
						<generatePdf>true</generatePdf>
						<generateHtml>true</generateHtml>
						<generateHistorical>true</generateHistorical>
						<!--<licenseLocation>${maven.clover.licenseLocation}</licenseLocation>-->
						<license><![CDATA[RoNNNCkExAorDfrErFIlrAmaUnonwEGmiwqRHvfUsiQnsdR
mj2L0GvL7ePpomMqqELByruVl2K3>1GMBYKI4nhRWIL2RCC
QMqOxUMMomNoqMomprpxWNQNrpONOqqqNrXtvUsSxUvrVWU
STwtwUoTXSwUUVvUvOMPoqnmnmUUnposvtummmmmmUUnpos
vtummmmmmUUI5LK5IJW69E1E391CWJF6KN1I5UUnmmmm]]></license>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-java2ws-plugin</artifactId>
					<version>${cxf.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-codegen-plugin</artifactId>
					<version>${cxf.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.cxf</groupId>
							<artifactId>cxf-rt-frontend-jaxws</artifactId>
							<version>${cxf.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.cxf</groupId>
							<artifactId>cxf-rt-frontend-simple</artifactId>
							<version>${cxf.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-doap-plugin</artifactId>
					<version>${maven.doap.plugin.version}</version>
					<configuration>
						<doapOptions>
							<programmingLanguage>java</programmingLanguage>
							<category>build-management</category>
						</doapOptions>
						<asfExtOptions>
							<included>false</included>
						</asfExtOptions>
					</configuration>
					<!--
					<executions>
					  <execution>
					    <id>site</id>
					    <phase>site</phase>
					    <goals>
					      <goal>generate</goal>
					    </goals>
					  </execution>
					</executions>
					-->
				</plugin>
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>${maven.jetty.plugin.version}</version>
					<configuration>
						<contextPath>/</contextPath>
						<scanIntervalSeconds>3</scanIntervalSeconds>
						<scanTargetPatterns>
							<scanTargetPattern>
								<directory>src/main/webapp/WEB-INF</directory>
								<excludes>
									<exclude>**/*.jsp</exclude>
								</excludes>
								<includes>
									<include>**/*.properties</include>
									<include>**/*.xml</include>
								</includes>
							</scanTargetPattern>
						</scanTargetPatterns>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jboss.as.plugins</groupId>
					<artifactId>jboss-as-maven-plugin</artifactId>
					<version>${maven.jboss.as.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tomcat-maven-plugin</artifactId>
					<version>${maven.tomcat.plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jboss-packaging-maven-plugin</artifactId>
					<version>${maven.jboss.packaging.plugin.version}</version>
					<!-- Enable packaging types and	lifecycle bindings. -->
					<extensions>true</extensions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jboss-maven-plugin</artifactId>
					<version>${maven.jboss.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>gwt-maven-plugin</artifactId>
					<version>${maven.gwt.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>xml-maven-plugin</artifactId>
					<version>${maven.xml.plugin.version}</version>
					<dependencies>
					    <dependency>
						<groupId>classworlds</groupId>
						<artifactId>classworlds</artifactId>
						<version>${classworlds.version}</version>
					    </dependency>
					    <dependency>
						<groupId>net.sf.saxon</groupId>
						<artifactId>saxon</artifactId>
						<version>${saxon.version}</version>
					    </dependency>
					</dependencies>
				</plugin>

				<plugin>
				    <groupId>com.adobe.ac</groupId>
				    <artifactId>flex-pmd-cpd-maven-plugin</artifactId>
				    <version>${maven.flex.pmd.plugin.version}</version>
				</plugin>
				<plugin>
				    <groupId>com.adobe.ac</groupId>
				    <artifactId>flex-pmd-maven-plugin</artifactId>
				    <version>${maven.flex.pmd.plugin.version}</version>
				</plugin>
				<plugin>
				    <groupId>com.adobe.ac</groupId>
				    <artifactId>flex-pmd-metrics-maven-plugin</artifactId>
				    <version>${maven.flex.pmd.plugin.version}</version>
				</plugin>

				<plugin>
				    <groupId>org.apache.felix</groupId>
				    <artifactId>maven-bundle-plugin</artifactId>
				    <version>${maven.bundle.plugin.version}</version>
				</plugin>

				<plugin>
				    <groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-failsafe-plugin</artifactId>
				    <version>${maven.failsafe.plugin.version}</version>
				</plugin>

				<plugin>
				    <groupId>org.sonatype.flexmojos</groupId>
				    <artifactId>flexmojos-maven-plugin</artifactId>
				    <version>${maven.flexmojos.plugin.version}</version>
				    <dependencies>
					<dependency>
					    <groupId>com.adobe.flex</groupId>
					    <artifactId>afe</artifactId>
					    <version>${flex.sdk.version}</version>
					</dependency>
					<dependency>
					    <groupId>com.adobe.flex</groupId>
					    <artifactId>aglj40</artifactId>
					    <version>${flex.sdk.version}</version>
					</dependency>
					<dependency>
					    <groupId>com.adobe.flex</groupId>
					    <artifactId>compiler</artifactId>
					    <version>${flex.sdk.version}</version>
					    <type>pom</type>
					</dependency>
					<dependency>
					    <groupId>com.adobe.flex</groupId>
					    <artifactId>flex-fontkit</artifactId>
					    <version>${flex.sdk.version}</version>
					</dependency>
					<dependency>
					    <groupId>com.adobe.flex</groupId>
					    <artifactId>rideau</artifactId>
					    <version>${flex.sdk.version}</version>
					</dependency>
					<dependency>
					    <groupId>com.adobe.flex.compiler</groupId>
					    <artifactId>asdoc</artifactId>
					    <version>${flex.sdk.version}</version>
					    <classifier>template</classifier>
					    <type>zip</type>
					</dependency>
				    </dependencies>
				</plugin>

			</plugins>
		</pluginManagement>

		<plugins>
		  <!-- does not works with maven 3
                  <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>${maven.buildnumber.plugin.version}</version>
                    <inherited>true</inherited>                                
                  </plugin>
                  -->
		  <plugin>
		    <groupId>de.smartics.maven.plugin</groupId>
		    <artifactId>maven-buildmetadata-plugin</artifactId>
		    <version>${maven.buildmetadata.plugin.version}</version>		    
		    <executions>
		      <execution>
		        <phase>initialize</phase>
		        <goals>
		          <goal>provide-buildmetadata</goal>
		        </goals>
		      </execution>
		    </executions>
  		    <configuration>
  		      <addProjectInfo>true</addProjectInfo>
  		      <propertyOutputFileMapping>
  		        <fileMapping>
  		          <packaging>war</packaging>
  		          <outputFile>${project.build.directory}/${project.build.finalName}/META-INF/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>ear</packaging>
  		          <outputFile>${project.build.directory}/${project.build.finalName}/META-INF/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>sar</packaging>
  		          <outputFile>${project.build.directory}/${project.build.finalName}/META-INF/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>rar</packaging>
  		          <outputFile>${project.build.directory}/${project.build.finalName}/META-INF/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>par</packaging>
  		          <outputFile>${project.build.directory}/${project.build.finalName}/META-INF/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>bundle</packaging>
  		          <outputFile>${project.build.outputDirectory}/META-INF/build.properties</outputFile>
  		        </fileMapping>    		        
  		        <fileMapping>
  		          <packaging>jar</packaging>
  		          <outputFile>${project.build.outputDirectory}/META-INF/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>ejb</packaging>
  		          <outputFile>${project.build.outputDirectory}/META-INF/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>maven-archetype</packaging>
  		          <outputFile>${project.build.outputDirectory}/META-INF/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>maven-plugin</packaging>
  		          <outputFile>${project.build.outputDirectory}/META-INF/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>eclipse-plugin</packaging>
  		          <outputFile>${project.build.directory}/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>eclipse-feature</packaging>
  		          <outputFile>${project.build.directory}/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>eclipse-repository</packaging>
  		          <outputFile>${project.build.directory}/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>eclipse-update-site</packaging>
  		          <outputFile>${project.build.directory}/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>targetplatform</packaging>
  		          <outputFile>${project.build.directory}/build.properties</outputFile>
  		        </fileMapping>
  		        <fileMapping>
  		          <packaging>pom</packaging>
  		          <outputFile>${project.build.directory}/build.properties</outputFile>
  		        </fileMapping>
  		      </propertyOutputFileMapping>
  		    </configuration>
		  </plugin>                  	
		  <plugin>
		   <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
		   <artifactId>maven-java-formatter-plugin</artifactId>
		   <version>${maven.java.formatter.plugin.version}</version>
		   <executions>
		     <execution>
		       <goals>
		         <goal>format</goal>
		       </goals>
		     </execution>
		   </executions>
		   <configuration>
		     <!--<configFile>${home.dir}/build-tools/src/main/resources/project/jalopy_regles_nabla_eclipse.xml</configFile>-->
		     <configFile>/project/jalopy_regles_nabla_eclipse.xml</configFile>
		     <compilerSource>${jdkLevel}</compilerSource>
		     <compilerCompliance>${jdkLevel}</compilerCompliance>
		     <compilerTargetPlatform>${jdkLevel}</compilerTargetPlatform>
		   </configuration>
		   <dependencies>
		     <dependency>
		       <groupId>com.nabla.project</groupId>
		       <artifactId>build-tools</artifactId>
		       <version>1.0</version>
		     </dependency>
		   </dependencies>
		  </plugin>
		  <plugin>
		    <groupId>com.cloudbees</groupId>
		    <artifactId>bees-maven-plugin</artifactId>
		    <version>${maven.bees.plugin.version}</version>
		  </plugin>
		</plugins>
	</build>
	<dependencyManagement>
		<dependencies>
			<!-- JBoss distributes a complete set of Java EE 6 APIs	including a
			  Bill of Materials (BOM). A BOM specifies the versions	of a "stack" (or a
			  collection) of artifacts. We use this	here so	that we	always get the correct
			  versions of artifacts. Here we use the jboss-javaee-6.0 stack	(you can read
			  this as the JBoss stack of the Java EE 6 APIs). You can actually use this
			  stack	with any version of JBoss AS that implements Java EE 6,	not just JBoss
			  AS 7!	-->
			<!-- manage wrong hibernate-jpa-2.0-api	with junit openejb
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-6.0</artifactId>
				<version>${org.jboss.spec.jboss.javaee6.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			-->
			<!-- Arquillian : http://arquillian.org/guides/getting_started_fr -->

			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0-with tools stack (you can 
				read this as the JBoss stack of the Java EE 6 APIs, with some extras tools 
				for your project, such as Arquillian for testing) -->
			<!--
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-tools</artifactId>
				<version>${org.jboss.bom.jboss.javaee6.with.tools.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			-->
						
			<!-- TODO use jboss-javaee-6.0-with-tools instead of jboss-javaee-6.0-->
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.0-api</artifactId>
				<version>${hibernate.jpa.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Tomcat -->
			<!--
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>${javax.javaee.api.version}</version>
				<scope>provided</scope>
			</dependency>
			-->
			<!--
			<dependency>
			   <groupId>org.jboss.seam</groupId>
			   <artifactId>seam</artifactId>
			   <version>${seam.version}</version>
			   <scope>import</scope>
			   <type>pom</type>
			</dependency>
			-->
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>seam-bom</artifactId>
				<version>${seam.bom.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<type>jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>httpunit</groupId>
				<artifactId>httpunit</artifactId>
				<version>${httpunit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junitperf</groupId>
				<artifactId>junitperf</artifactId>
				<version>${junitperf.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.mockrunner</groupId>
				<artifactId>mockrunner-jdbc</artifactId>
				<version>${mockrunner.version}</version>
				<classifier>jdk15</classifier>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock-junit4</artifactId>
				<version>${jmock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-mock</artifactId>
				<version>${spring.mock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>xmlunit</groupId>
				<artifactId>xmlunit</artifactId>
				<version>${xmlunit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.dbunit</groupId>
				<artifactId>dbunit</artifactId>
				<version>${dbunit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${testng.version}</version>
				<!--<classifier>jdk15</classifier>-->
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.beanshell</groupId>
				<artifactId>bsh</artifactId>
				<version>${org.beanshell.bsh.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>${hamcrest.core.version}</version>
			</dependency>
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${xerces.version}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>xalan</groupId>
				<artifactId>xalan</artifactId>
				<version>${xalan.version}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
			       <groupId>dom4j</groupId>
			       <artifactId>dom4j</artifactId>
			       <version>${dom4j.version}</version>
			       <scope>compile</scope>
			       <exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- to	remove for spring 3.x -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring</artifactId>
				<version>${spring.version}</version>
				<scope>compile</scope>
			</dependency>
			<!-- Spring MVC	for Servlet Environments (depends on spring-core, spring-beans,	spring-context,	spring-web) Define this	if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
				<scope>compile</scope>
			</dependency>
			<!-- Spring MVC	for Portlet Environments (depends on spring-core, spring-beans,	spring-context,	spring-web) Define this	if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc-portlet</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- Core utilities used by other modules. Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring3.version}</version>
			</dependency>
			<!-- Expression	Language (depends on spring-core) Define this if you use Spring	Expression APIs	(org.springframework.expression.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring3.version}</version>
			</dependency>
			<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB,	JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, spring-context) Define this if you	need OXM (org.springframework.oxm.*) -->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-oxm</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Web application development utilities applicable to both Servlet and Portlet Environments (depends	on spring-core,	spring-beans, spring-context) Define this if you use Spring MVC, or wish to use	Struts,	JSF, or	another	web framework with Spring (org.springframework.web.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring3.version}</version>
			</dependency>
			<!-- Bean Factory and JavaBeans	utilities (depends on spring-core) Define this if you use Spring Bean APIs (org.springframework.beans.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring3.version}</version>
			</dependency>
			<!-- Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans) This is the central artifact for	Spring's Dependency Injection Container	and is generally always	defined	-->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring3.version}</version>
			</dependency>
			<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)	Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring3.version}</version>
			</dependency>
			<!-- Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker	integration Define this	if you need any	of these integrations -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring3.version}</version>
			</dependency>
			<!-- Transaction Management Abstraction	(depends on spring-core, spring-beans, spring-aop, spring-context) Define this if you use Spring Transactions or DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring3.version}</version>
			</dependency>
			<!-- JMS Library (depends on spring-core, spring-beans,	spring-context,	spring-context-support,	spring-tx) Define this if you use Spring's JMS integration classes (org.springframework.jms.*) -->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-jms</artifactId>
			    <version>${spring.version}</version>
			</dependency>
			<!-- Object-to-Relation-Mapping	(ORM) integration with Hibernate, JPA, and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) Define this if you	need ORM (org.springframework.orm.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring3.version}</version>
			</dependency>
			<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)	Define this if you use Spring's	JdbcTemplate API (org.springframework.jdbc.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring3.version}</version>
			</dependency>
			<!-- Support for testing Spring	applications with tools	such as	JUnit and TestNG This artifact is generally always defined with	a 'test' scope for the integration testing framework and unit testing stubs -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.google.api.client</groupId>
				<artifactId>google-api-client</artifactId>
				<version>${google.api.client.version}</version>
				<scope>compile</scope>
			</dependency>
			<!-- see pom in	database -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate</artifactId>
				<version>${hibernate.version}</version>
				<!--<scope>compile</scope> error when deployed in jboss	-->
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>javax.transaction</groupId>
						<artifactId>jta</artifactId>
					</exclusion>
					<exclusion>
						<groupId>asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>asm</groupId>
						<artifactId>asm-attrs</artifactId>
					</exclusion>
					<exclusion>
						<groupId>cglib</groupId>
						<artifactId>cglib</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- For JBoss AS6 and earlier:	Avoid NoSuchMethodException: org.hibernate.validator.ClassValidator.<init> -->
			<dependency>
			    <groupId>org.hibernate</groupId>
			    <artifactId>hibernate-validator-legacy</artifactId>
			    <version>${hibernate.validator.legacy.version}</version>
			    <exclusions>
				<exclusion>
				    <groupId>org.hibernate</groupId>
				    <artifactId>hibernate-core</artifactId>
				</exclusion>
				<exclusion>
				    <groupId>org.hibernate</groupId>
				    <artifactId>hibernate-commons-annotations</artifactId>
				</exclusion>
			    </exclusions>
			</dependency>
			<!-- validator-legacy forces an	earlier	version	of annotations.	Change scope if	< JBoss6 -->
			<dependency>
			    <groupId>org.hibernate</groupId>
			    <artifactId>hibernate-commons-annotations</artifactId>
			    <version>${hibernate.commons.annotations.version}</version>
			    <scope>provided</scope>
			     <!-- Some transitive dependencies of Hibernate 3 are available
				 in JBoss AS 7 as modules, so we don't include them in WEB-INF/lib, but	instead
				 depend	on the modules -->
			     <exclusions>
				 <exclusion>
				     <groupId>org.slf4j</groupId>
				     <artifactId>slf4j-api</artifactId>
				 </exclusion>
		  		 <exclusion>
		  		     <groupId>javax.persistence</groupId>
		  		     <artifactId>persistence-api</artifactId>
		  		 </exclusion>				 
			     </exclusions>
			</dependency>
			<dependency>
				<groupId>asm</groupId>
				<artifactId>asm</artifactId>
				<version>${asm.version}</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>${cglib.nodep.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>${cglib.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>${javax.transaction.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.validator.version}</version>
				<!-- Some transitive dependencies of Hibernate 3 are available
				    in JBoss AS	7 as modules, so we don't include them in WEB-INF/lib, but instead
				    depend on the modules -->
				<exclusions>
				    <exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				    </exclusion>
                        	    <exclusion>
                        	        <groupId>org.jboss.logging</groupId>
                        	        <artifactId>jboss-logging</artifactId>
                        	    </exclusion>
				</exclusions>
			</dependency>
	    <dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-entitymanager</artifactId>
		<version>${hibernate.entitymanager.version}</version>
		<scope>provided</scope>
		<!-- Some transitive dependencies of Hibernate 3 are available
		    in JBoss AS	7 as modules, so we don't include them in WEB-INF/lib, but instead
		    depend on the modules -->
		<exclusions>
		  <exclusion>
		    <groupId>commons-logging</groupId>
		    <artifactId>commons-logging</artifactId>
		  </exclusion>
		  <exclusion>
		    <groupId>org.hibernate</groupId>
		    <artifactId>ejb3-persistence</artifactId>
		  </exclusion>
		  <exclusion>
		    <groupId>jboss</groupId>
		    <artifactId>javassist</artifactId>
		  </exclusion>
		  <exclusion>
		    <groupId>javax.persistence</groupId>
		    <artifactId>persistence-api</artifactId>
		  </exclusion>
		  <exclusion>
		    <groupId>javax.transaction</groupId>
		    <artifactId>jta</artifactId>
		  </exclusion>
		  <exclusion>
			<groupId>asm</groupId>
			<artifactId>asm</artifactId>
		  </exclusion>
		  <exclusion>
		    <groupId>javassist</groupId>
		    <artifactId>javassist</artifactId>
		  </exclusion>
		  <exclusion>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		  </exclusion>
		  <exclusion>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
		  </exclusion>
		  <exclusion>
		    <groupId>xml-apis</groupId>
		    <artifactId>xml-apis</artifactId>
		  </exclusion>
                  <exclusion>
                      <groupId>org.jboss.logging</groupId>
                      <artifactId>jboss-logging</artifactId>
                  </exclusion>
                  <exclusion>
                      <groupId>org.jboss.spec.javax.interceptor</groupId>
                      <artifactId>jboss-interceptors-api_1.1_spec</artifactId>
                  </exclusion>
                  <exclusion>
                      <groupId>org.jboss.spec.javax.transaction</groupId>
                      <artifactId>jboss-transaction-api_1.1_spec</artifactId>
                  </exclusion>
		</exclusions>
	    </dependency>
	    <!-- https://docs.jboss.org/author/display/ISPN/Using+Infinispan+as+JPA-Hibernate+Second+Level+Cache+Provider -->
	    <dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-infinispan</artifactId>
		<version>${hibernate.infinispan.version}</version>
		<exclusions>
		    <!-- Some transitive dependencies of Hibernate 3 are
			available in JBoss AS 7	as modules, so we don't	include	them in	WEB-INF/lib,
			but instead depend on the modules -->
		    <exclusion>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-core</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-testing</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		    </exclusion>
		</exclusions>
	    </dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>ejb3-persistence</artifactId>
				<version>${ejb3.persistence.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-jpamodelgen</artifactId>
				<version>${hibernate.jpamodelgen.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-search</artifactId>
				<version>${hibernate.search.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate</artifactId>
					</exclusion>
		    			<exclusion>
		    				<groupId>org.hibernate</groupId>
		    				<artifactId>ejb3-persistence</artifactId>
		    			</exclusion>						
				</exclusions>
			</dependency>
	    <dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>${hibernate.core.version}</version>
		<scope>provided</scope>
		<!-- Some transitive dependencies of Hibernate 3 are available
		    in JBoss AS	7 as modules, so we don't include them in WEB-INF/lib, but instead
		    depend on the modules -->
		<exclusions>
		    <exclusion>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
		    </exclusion>

		  <exclusion>
		    <groupId>commons-logging</groupId>
		    <artifactId>commons-logging</artifactId>
		  </exclusion>
		  <exclusion>
		    <groupId>net.sf.ehcache</groupId>
		    <artifactId>ehcache</artifactId>
		  </exclusion>
		  <exclusion>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		  </exclusion>
		  <exclusion>
		    <groupId>asm</groupId>
		    <artifactId>asm</artifactId>
		  </exclusion>
		  <exclusion>
		    <groupId>asm</groupId>
		    <artifactId>asm-attrs</artifactId>
		  </exclusion>
		  <exclusion>
		    <groupId>cglib</groupId>
		    <artifactId>cglib</artifactId>
		  </exclusion>
		  <exclusion>
		    <groupId>xml-apis</groupId>
		    <artifactId>xml-apis</artifactId>
		  </exclusion>
		</exclusions>
	    </dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-annotations</artifactId>
				<version>${hibernate.annotations.version}</version>
				<exclusions>
					<exclusion>
						<groupId>javax.transaction</groupId>
						<artifactId>jta</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>${ehcache.version}</version>
				<type>pom</type>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>${ehcache.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>${ehcache.jar.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${org.javassist.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${javassist.version}</version>
			</dependency>
			
				<dependency>
				    <groupId>org.apache.openjpa</groupId>
				    <artifactId>openjpa</artifactId>
				    <version>${openjpa.version}</version>
				</dependency>    
							
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-core</artifactId>
				<version>${activemq.core.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>backport-util-concurrent</groupId>
				<artifactId>backport-util-concurrent</artifactId>
				<version>${backport.util.concurrent.version}</version>
				<scope>runtime</scope>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${commons.httpclient.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>${commons.dbcp.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>${commons.pool.version}</version>
				<scope>runtime</scope>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>aopalliance</groupId>
				<artifactId>aopalliance</artifactId>
				<version>${aopalliance.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>persistence-api</artifactId>
				<version>${javax.persistence.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.ejb</groupId>
				<artifactId>ejb-api</artifactId>
				<version>${javax.ejb.api.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>javax.jms</groupId>
				<artifactId>jms</artifactId>
				<version>${javax.jms.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${javax.mail.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>jfree</groupId>
				<artifactId>jfreechart</artifactId>
				<version>${jfreechart.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>jfree</groupId>
				<artifactId>jcommon</artifactId>
				<version>${jfree.jcommon.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>oro</groupId>
				<artifactId>oro</artifactId>
				<version>${oro.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>com.lowagie</groupId>
				<artifactId>itext</artifactId>
				<version>${itext.version}</version>
				<scope>runtime</scope>
				<!-- Same jars included	twice in the dependencies with different versions -->
				<exclusions>
				    <exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcprov-jdk14</artifactId>
				    </exclusion>
				    <exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcmail-jdk14</artifactId>
				    </exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>poi</groupId>
				<artifactId>poi-contrib</artifactId>
				<version>${poi.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>poi</groupId>
				<artifactId>poi-scratchpad</artifactId>
				<version>${poi.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>${javax.activation.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
			    <groupId>javax.inject</groupId>
			    <artifactId>javax.inject</artifactId>
			    <version>${inject.version}</version>
			</dependency>
			<dependency>
			    <groupId>c3p0</groupId>
			    <artifactId>c3p0</artifactId>
			    <version>${c3p0.version}</version>
			</dependency>
			<dependency>
				<groupId>ant</groupId>
				<artifactId>ant</artifactId>
				<version>${ant.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.antlr</groupId>
				<artifactId>antlr</artifactId>
				<version>${org.antlr.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.antlr</groupId>
				<artifactId>antlr-runtime</artifactId>
				<version>${org.antlr.version}</version>
			</dependency>
			<dependency>
				<groupId>antlr</groupId>
				<artifactId>antlr</artifactId>
				<version>${antlr.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<version>${lucene.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-analyzers</artifactId>
				<version>${lucene.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-queries</artifactId>
				<version>${lucene.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-highlighter</artifactId>
				<version>${lucene.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-snowball</artifactId>
				<version>${lucene.version}</version>
				<scope>compile</scope>
			</dependency>
			<!--
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-similarity</artifactId>
				<version>${lucene.version}</version>
				<scope>compile</scope>
			</dependency>
			-->
			<!--
			  groovy-all-1.5.4 provided by Seam-2.1.2, seam-2.2.0 and seam-2.2.1 root POM
			  does not work	with the gmaven-1.2 and	1.3 plugin, must use groovy-1.7.x.
			-->
			<dependency>
			  <groupId>org.codehaus.groovy</groupId>
			  <artifactId>groovy-all</artifactId>
			  <version>${groovy.version}</version>
			  <exclusions>
			    <!-- groovy-all imports a lot of stuff, would be better to just use	specific bits -->
			    <exclusion>
			      <groupId>bsf</groupId>
			      <artifactId>bsf</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>commons-cli</groupId>
			      <artifactId>commons-cli</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>commons-logging</groupId>
			      <artifactId>commons-logging</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>hsqldb</groupId>
			      <artifactId>hsqldb</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>junit</groupId>
			      <artifactId>junit</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>mx4j</groupId>
			      <artifactId>mx4j</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>xml-resolver</groupId>
			      <artifactId>xml-resolver</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>com.thoughtworks.xstream</groupId>
			      <artifactId>xstream</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>mockobjects</groupId>
			      <artifactId>mockobjects-core</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.apache.ant</groupId>
			      <artifactId>ant</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.apache.ant</groupId>
			      <artifactId>ant-launcher</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.apache.ant</groupId>
			      <artifactId>ant-junit</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>castor</groupId>
			      <artifactId>castor</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>openejb</groupId>
			      <artifactId>openejb</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>openejb</groupId>
			      <artifactId>openejb-loader</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>javax.servlet</groupId>
			      <artifactId>jsp-api</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>xerces</groupId>
			      <artifactId>xercesImpl</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>xml-apis</groupId>
			      <artifactId>xml-apis</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>jline</groupId>
			      <artifactId>jline</artifactId>
			    </exclusion>
			  </exclusions>
			</dependency>
			<dependency>
				<groupId>commons-validator</groupId>
				<artifactId>commons-validator</artifactId>
				<version>${commons.validator.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons.collections.version}</version>
				<scope>compile</scope>
				<!-- JBoss contains a version which causes a classloader conflict unless not bundled>
				<scope>provided</scope -->
			</dependency>
			<dependency>
				<groupId>commons-digester</groupId>
				<artifactId>commons-digester</artifactId>
				<version>${commons.digester.version}</version>
				<!--<scope>runtime</scope>-->
				<scope>compile</scope>
		  <exclusions>
		    <exclusion>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
		    </exclusion>
		    <exclusion>
		      <groupId>commons-logging</groupId>
		      <artifactId>commons-logging</artifactId>
		    </exclusion>
		    <exclusion>
		      <groupId>commons-beanutils</groupId>
		      <artifactId>commons-beanutils</artifactId>
		    </exclusion>
		</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons.fileupload.version}</version>
				<!--<scope>runtime</scope>-->
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons.logging.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${commons.configuration.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons.lang.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>${commons.cli.version}</version>
				<scope>compile</scope>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons.beanutils.version}</version>
				<scope>compile</scope>
			</dependency>
	    <dependency>
	      <groupId>commons-beanutils</groupId>
	      <artifactId>commons-beanutils-core</artifactId>
	      <version>${commons.beanutils.version}</version>
	      <exclusions>
		<exclusion>
		  <groupId>commons-logging</groupId>
		  <artifactId>commons-logging</artifactId>
		</exclusion>
	      </exclusions>
	    </dependency>
	    <dependency>
		<groupId>commons-beanutils</groupId>
		<artifactId>commons-beanutils-bean-collections</artifactId>
		<version>${commons.beanutils.version}</version>
	    </dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons.codec.version}</version>
				<!--<scope>compile</scope>-->
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>commons-discovery</groupId>
				<artifactId>commons-discovery</artifactId>
				<version>${commons.discovery.version}</version>
				<scope>compile</scope>
			</dependency>
	     <dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-math</artifactId>
		<version>${commons.math.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-math3</artifactId>
		<version>${commons.math3.version}</version>
	    </dependency>
			<dependency>
				<groupId>concurrent</groupId>
				<artifactId>concurrent</artifactId>
				<version>${concurrent.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>struts</groupId>
				<artifactId>struts</artifactId>
				<version>${struts.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-chain</groupId>
						<artifactId>commons-chain</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-digester</groupId>
						<artifactId>commons-digester</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xalan</groupId>
						<artifactId>xalan</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>struts-menu</groupId>
				<artifactId>struts-menu</artifactId>
				<version>${struts.menu.version}</version>
			</dependency>
			<dependency>
				<groupId>displaytag</groupId>
				<artifactId>displaytag</artifactId>
				<version>${displaytag.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<exclusion>
						<groupId>taglibs</groupId>
						<artifactId>standard</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- validation	dependencies for hibernate-entitymanager -->
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${validation.api.version}</version>
			</dependency>

	    <!-- richfaces -->
	    <dependency>
	      <groupId>org.richfaces.framework</groupId>
	      <artifactId>richfaces-api</artifactId>
	      <version>${richfaces.version}</version>
	      <exclusions>
		<exclusion>
		  <groupId>commons-logging</groupId>
		  <artifactId>commons-logging</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>junit</groupId>
		  <artifactId>junit</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>javax.faces</groupId>
		  <artifactId>jsf-impl</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>commons-beanutils</groupId>
		  <artifactId>commons-beanutils</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>commons-collections</groupId>
		  <artifactId>commons-collections</artifactId>
		</exclusion>
	      </exclusions>
	    </dependency>

	    <dependency>
	      <groupId>org.richfaces.framework</groupId>
	      <artifactId>richfaces-impl</artifactId>
	      <version>${richfaces.version}</version>
	      <exclusions>
		<exclusion>
		  <groupId>commons-logging</groupId>
		  <artifactId>commons-logging</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>junit</groupId>
		  <artifactId>junit</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>xml-apis</groupId>
		  <artifactId>xml-apis</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>org.richfaces.framework</groupId>
		  <artifactId>richfaces-api</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>javax.faces</groupId>
		  <artifactId>jsf-api</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>javax.faces</groupId>
		  <artifactId>jsf-impl</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>javax.servlet</groupId>
		  <artifactId>servlet-api</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>commons-digester</groupId>
		  <artifactId>commons-digester</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>commons-beanutils</groupId>
		  <artifactId>commons-beanutils</artifactId>
		</exclusion>
	      </exclusions>
	    </dependency>

	    <dependency>
	      <groupId>org.richfaces.ui</groupId>
	      <artifactId>richfaces-ui</artifactId>
	      <version>${richfaces.version}</version>
	      <exclusions>
		<exclusion>
		  <groupId>commons-logging</groupId>
		  <artifactId>commons-logging</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>javax.faces</groupId>
		  <artifactId>jsf-impl</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>org.richfaces.framework</groupId>
		  <artifactId>richfaces-api</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>javax.servlet</groupId>
		  <artifactId>jstl</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>commons-digester</groupId>
		  <artifactId>commons-digester</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>commons-beanutils</groupId>
		  <artifactId>commons-beanutils</artifactId>
		</exclusion>
	      </exclusions>
	    </dependency>

	    <dependency>
	      <groupId>org.richfaces.samples</groupId>
	      <artifactId>glassX</artifactId>
	      <version>${richfaces.version}</version>
	      <exclusions>
		<exclusion>
		  <groupId>javax.servlet</groupId>
		  <artifactId>jstl</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>nekohtml</groupId>
		  <artifactId>nekohtml</artifactId>
		</exclusion>
	      </exclusions>
	    </dependency>

	    <dependency>
	      <groupId>org.richfaces.samples</groupId>
	      <artifactId>darkX</artifactId>
	      <version>${richfaces.version}</version>
	      <exclusions>
		<exclusion>
		  <groupId>javax.servlet</groupId>
		  <artifactId>jstl</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>nekohtml</groupId>
		  <artifactId>nekohtml</artifactId>
		</exclusion>
	      </exclusions>
	    </dependency>

	    <dependency>
		<groupId>nekohtml</groupId>
		<artifactId>nekohtml</artifactId>
		<version>${nekohtml.version}</version>
		<scope>provided</scope>
	    </dependency>

	    <dependency>
		<groupId>org.apache.myfaces.core</groupId>
		<artifactId>myfaces-api</artifactId>
		<version>${myfaces.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.myfaces.core</groupId>
		<artifactId>myfaces-impl</artifactId>
		<version>${myfaces.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.myfaces.tomahawk</groupId>
		<artifactId>tomahawk12</artifactId>
		<version>${org.apache.myfaces.tomahawk.version}</version>
	    </dependency>

	    <dependency>
		<groupId>org.apache.myfaces.extensions.validator</groupId>
		<artifactId>myfaces-extval-core</artifactId>
		<version>${myfaces.extval.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
		<artifactId>myfaces-extval-property-validation</artifactId>
		<version>${myfaces.extval.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
		<artifactId>myfaces-extval-bean-validation</artifactId>
		<version>${myfaces.extval.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.myfaces.extensions.validator.component-support-modules</groupId>
		<artifactId>myfaces-extval-generic-support</artifactId>
		<version>${myfaces.extval.version}</version>
		<exclusions>
		    <exclusion>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
		    </exclusion>
		</exclusions>
	    </dependency>
	    <dependency>
		<groupId>org.apache.myfaces.extensions.validator.component-support-modules</groupId>
		<artifactId>myfaces-extval-trinidad-support</artifactId>
		<version>${myfaces.extval.version}</version>
	    </dependency>

	    <dependency>
		<groupId>org.apache.myfaces.trinidad</groupId>
		<artifactId>trinidad-api</artifactId>
		<version>${org.apache.myfaces.trinidad.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.myfaces.trinidad</groupId>
		<artifactId>trinidad-impl</artifactId>
		<version>${org.apache.myfaces.trinidad.version}</version>
	    </dependency>

	    <dependency>
		<groupId>com.sun.facelets</groupId>
		<artifactId>jsf-facelets</artifactId>
		<version>${jsf.facelets.version}</version>
	    </dependency>
			<!--
			<dependency>
				<groupId>com.sun.facelets</groupId>
				<artifactId>jsf-facelets</artifactId>
				<version>${jsf.facelets.version}</version>
				<scope>runtime</scope>
			</dependency>
			-->
			<dependency>
			    <groupId>org.icefaces</groupId>
			    <artifactId>icefaces-comps</artifactId>
			    <version>${icefaces.version}</version>
			    <!--<scope>runtime</scope>-->
			    <scope>compile</scope>
			</dependency>
			<dependency>
			    <groupId>org.icefaces</groupId>
			    <artifactId>icefaces-facelets</artifactId>
			    <version>${icefaces.version}</version>
			    <!--<scope>runtime</scope>-->
			    <scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
				<!--<scope>runtime</scope>-->
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- seems to be the same as jsp-api -->
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.faces</groupId>
				<artifactId>jsf-api</artifactId>
				<version>${jsf.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.faces</groupId>
				<artifactId>jsf-impl</artifactId>
				<version>${jsf.impl.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>el-api</artifactId>
				<version>${el.api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.el</groupId>
				<artifactId>el-ri</artifactId>
				<version>${el.ri.version}</version>
			</dependency>
			<dependency>
				<groupId>taglibs</groupId>
				<artifactId>standard</artifactId>
				<version>${taglibs.version}</version>
			</dependency>
			<!-- Errai Core	and ErraiBus -->
			<dependency>
			  <groupId>org.jboss.errai</groupId>
			  <artifactId>errai-bus</artifactId>
			  <version>${errai.version}</version>
			  <exclusions>
			    <exclusion>
			      <groupId>javax.inject</groupId>
			      <artifactId>javax.inject</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>javax.annotation</groupId>
			      <artifactId>jsr250-api</artifactId>
			    </exclusion>
			  </exclusions>
			</dependency>
			<dependency>
			  <groupId>org.jboss.errai</groupId>
			  <artifactId>errai-ioc</artifactId>
			  <version>${errai.version}</version>
			  <exclusions>
			    <exclusion>
			      <groupId>javax.inject</groupId>
			      <artifactId>javax.inject</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>javax.annotation</groupId>
			      <artifactId>jsr250-api</artifactId>
			    </exclusion>
			  </exclusions>
			</dependency>
			<dependency>
			  <groupId>org.jboss.errai</groupId>
			  <artifactId>errai-tools</artifactId>
			  <version>${errai.version}</version>
			</dependency>

			<!-- Errai JAX-RS -->
			<dependency>
			  <groupId>org.jboss.errai</groupId>
			  <artifactId>errai-jaxrs-client</artifactId>
			  <version>${errai.version}</version>
			</dependency>

			<dependency>
			  <groupId>org.jboss.errai</groupId>
			  <artifactId>errai-jaxrs-provider</artifactId>
			  <version>${errai.version}</version>
			</dependency>

			<!-- Errai CDI Integration Modules -->
			<dependency>
			  <groupId>org.jboss.errai</groupId>
			  <artifactId>errai-cdi-client</artifactId>
			  <version>${errai.version}</version>
			</dependency>

			<dependency>
			  <groupId>org.jboss.errai</groupId>
			  <artifactId>errai-javax-enterprise</artifactId>
			  <version>${errai.version}</version>
			</dependency>

			<dependency>
			  <groupId>org.jboss.errai</groupId>
			  <artifactId>errai-weld-integration</artifactId>
			  <version>${errai.version}</version>
			</dependency>

			<dependency>
			  <groupId>org.jboss.errai</groupId>
			  <artifactId>jboss7-support</artifactId>
			  <version>${errai.version}</version>
			</dependency>

			<dependency>
			  <groupId>com.google.gwt</groupId>
			  <artifactId>gwt-user</artifactId>
			  <version>${gwt.version}</version>
			</dependency>

			<dependency>
			  <groupId>com.google.gwt</groupId>
			  <artifactId>gwt-dev</artifactId>
			  <version>${gwt.version}</version>
			</dependency>
			
    <dependency>
      <groupId>com.googlecode.objectify</groupId>
      <artifactId>objectify</artifactId>
      <version>${objectify.version}</version>
    </dependency>

	   <dependency>
	      <groupId>org.jboss.el</groupId>
	      <artifactId>jboss-el</artifactId>
	      <version>${jboss.el.version}</version>
	      <exclusions>
	      <exclusion>
		<groupId>javax.el</groupId>
		<artifactId>el-api</artifactId>
	      </exclusion>
	      </exclusions>
	    </dependency>

        	<dependency>
        	    <groupId>org.jboss.logging</groupId>
        	    <artifactId>jboss-logging</artifactId>
        	    <version>${jboss.logging.version}</version>
        	</dependency>

		<!--Fix: java.lang.ClassNotFoundException: org.jboss.util.id.SerialVersion-->
		<dependency>
		  <groupId>org.jboss</groupId>
		  <artifactId>jboss-common-core</artifactId>
		  <version>${jboss.common.core.version}</version>
		</dependency>
				
	    <dependency>
	      <groupId>org.jbpm</groupId>
	      <artifactId>jbpm-jpdl</artifactId>
	      <version>${jbpm.jpdl.version}</version>
	      <exclusions>
		<exclusion>
		  <groupId>commons-logging</groupId>
		  <artifactId>commons-logging</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>javax.servlet</groupId>
		  <artifactId>servlet-api</artifactId>
		</exclusion>
	      </exclusions>
	    </dependency>

	    <dependency>
	      <groupId>jboss</groupId>
	      <artifactId>jboss-cache</artifactId>
	      <version>${jboss.cache.version}</version>
	      <exclusions>
		<exclusion>
		  <groupId>jboss</groupId>
		  <artifactId>jboss-system</artifactId>
		</exclusion>
		<exclusion>
		  <groupId>jboss</groupId>
		  <artifactId>jboss-jmx</artifactId>
		</exclusion>
	      </exclusions>
	    </dependency>

			<dependency>
				<groupId>jboss</groupId>
				<artifactId>jboss-j2ee</artifactId>
				<version>${jboss.version}</version>
				<scope>provided</scope>
			</dependency>
	   <dependency>
		<groupId>jboss</groupId>
		<artifactId>jboss-ejb3-client</artifactId>
		<version>${jboss.version}</version>
		<scope>provided</scope>
	    </dependency>
			<dependency>
			    <groupId>jboss</groupId>
			    <artifactId>jboss-ejb3x</artifactId>
			    <version>${jboss.version}</version>
			    <scope>provided</scope>
			</dependency>
			<dependency>
			    <groupId>jboss</groupId>
			    <artifactId>jbossall-client</artifactId>
			    <version>${jbossall.client.version}</version>
			    <scope>runtime</scope>
			</dependency>
	   <dependency>
		<groupId>org.jboss</groupId>
		<artifactId>ejb3-persistence</artifactId>
		<version>${jboss.ejb3.persistence.version}</version>
		<scope>provided</scope>
	    </dependency>
			<dependency>
			    <groupId>jboss</groupId>
			    <artifactId>jboss-annotations-ejb3</artifactId>
			    <version>${jboss.annotations.ejb3.version}</version>
			    <scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.spec.javax.interceptor</groupId>
				<artifactId>jboss-interceptors-api_1.1_spec</artifactId>
				<version>${jboss.interceptors.api.spec.version}</version>
				<scope>provided</scope>
			</dependency>

	    <dependency>
		<groupId>jboss</groupId>
		<artifactId>jboss-serialization</artifactId>
		<version>${jboss.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <dependency>
		<groupId>jboss</groupId>
		<artifactId>jboss-remoting</artifactId>
		<version>${jboss.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <dependency>
		<groupId>jboss</groupId>
		<artifactId>jboss-aop-jdk50-client</artifactId>
		<version>${jboss.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <!--dependency>
		<groupId>org.jboss</groupId>
		<artifactId>jboss-aspect-jdk50-client</artifactId>
		<version>4.0.5-GA</version>
		<scope>provided</scope>
	    </dependency-->
	    <dependency>
		<groupId>jboss</groupId>
		<artifactId>jnp-client</artifactId>
		<version>${jboss.version}</version>
		<scope>runtime</scope>
	    </dependency>
	    <!--dependency>
		<groupId>org.jboss.microcontainer</groupId>
		<artifactId>jboss-ejb3-all</artifactId>
		<version>${jboss.microcontainer.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <dependency>
		<groupId>org.jboss.microcontainer</groupId>
		<artifactId>jms-ra</artifactId>
		<version>${jboss.microcontainer.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <dependency>
		<groupId>org.jboss.microcontainer</groupId>
		<artifactId>jcainflow</artifactId>
		<version>${jboss.microcontainer.version}</version>
		<scope>provided</scope>
	    </dependency-->

			<dependency>
				<groupId>org.mvel</groupId>
				<artifactId>mvel2</artifactId>
				<version>${org.mvel.mvel2.version}</version>
			</dependency>
			<!-- spec apis such as javax.persistence, needed to run	OpenEjb	in tests -->
			<dependency>
			  <groupId>org.apache.openejb</groupId>
			  <artifactId>javaee-api</artifactId>
			  <version>${openejb.javaee.api.version}</version>
			</dependency>

			<dependency>
			    <groupId>jboss.jboss-embeddable-ejb3</groupId>
			    <artifactId>hibernate-all</artifactId>
			    <version>${jboss.embeddable.version}</version>
			    <scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jboss.jboss-embeddable-ejb3</groupId>
				<artifactId>jboss-ejb3-all</artifactId>
				<version>${jboss.embeddable.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jboss.jboss-embeddable-ejb3</groupId>
				<artifactId>thirdparty-all</artifactId>
				<version>${jboss.embeddable.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- seam embedded container -->
			<dependency>
				<groupId>org.jboss.seam.embedded</groupId>
				<artifactId>hibernate-all</artifactId>
				<version>${seam.embedded.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.seam.embedded</groupId>
				<artifactId>jboss-embedded-all</artifactId>
				<version>${seam.embedded.version}</version>
				<scope>compile</scope>
				<exclusions>
					<exclusion>
						<groupId>org.jboss.microcontainer</groupId>
						<artifactId>jboss-deployers-client-spi</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam.embedded</groupId>
				<artifactId>jboss-embedded-api</artifactId>
				<version>${seam.embedded.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam.embedded</groupId>
				<artifactId>thirdparty-all</artifactId>
				<version>${seam.embedded.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- openejb embedded container	-->
			<dependency>
			  <groupId>org.apache.openejb</groupId>
			  <artifactId>openejb-core</artifactId>
			   <version>${openejb.core.version}</version>
			 <exclusions>
			    <exclusion>
			      <groupId>org.apache.openjpa</groupId>
			      <artifactId>openjpa</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>hsqldb</groupId>
			      <artifactId>hsqldb</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>junit</groupId>
			      <artifactId>junit</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>quartz</groupId>
			      <artifactId>quartz</artifactId>
			    </exclusion>
			  </exclusions>
			</dependency>

			<dependency>
			  <groupId>no.knowit.seam</groupId>
			  <artifactId>seam-utils-ejb</artifactId>
			  <version>${seam.utils.version}</version>
			  <type>ejb</type>
			  <scope>test</scope>
			  <exclusions>
		  	  	<exclusion>
		  	  	    <groupId>javax.persistence</groupId>
		  	  	    <artifactId>persistence-api</artifactId>
		  	  	</exclusion>	
			  </exclusions>				  
			</dependency>

			<dependency>
			  <groupId>no.knowit.seam</groupId>
			  <artifactId>seam-utils-openejb</artifactId>
			  <version>${seam.utils.version}</version>
			  <type>ejb</type>
			  <scope>test</scope>
			</dependency>

			<!--
			  Fix transitive dependencies in Seam root pom.
			  Exclusions defined in	seam root pom DO NOT inherit so	we have	to duplicate them :-(

			  Sections marked with ** are additional exclusions not	found in the seam root pom

			  The following	sites has helped figuring out the transitive dependencies:
			  http://www.reverttoconsole.com/blog/java/maven-transitive-dependencies-with-jboss-seam-richfaces-in-ear-deployement/
			  https://www.jboss.org/community/wiki/RichFacesPhotositedemoapplication/
			  http://www.jboss.org/portletbridge/
			  http://ctpjava.blogspot.com/2009/03/jboss-seam-hot-deploy-with-maven-update.html
			  http://blogs.steeplesoft.com/seam-and-jpa-hibernate-on-oc4j-1013/
			  http://docs.jboss.com/seam/2.1.2.CR2/reference/en-US/html/dependencies.html
			  http://kasper.eobjects.dk/2009/04/seam-ejbs-and-ear-packaging-in-maven.html

			  * To find and	list transitive	dependencies:
			    mvn	install	dependency:tree

			  * To write the dependency content into a file, type e.g:
			    mvn	install	dependency:tree	> dependency.txt
			-->
			<!-- JBoss Seam	-->
			<dependency>
			  <groupId>org.jboss.seam</groupId>
			  <artifactId>jboss-seam</artifactId>
			  <version>${seam.version}</version>
			  <type>ejb</type>
			  <exclusions>
			    <exclusion>
			      <groupId>javax.el</groupId>
			      <artifactId>el-api</artifactId>
			    </exclusion>
			    <exclusion>
			       <groupId>javax.servlet</groupId>
			       <artifactId>servlet-api</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>jboss</groupId>
			      <artifactId>javassist</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.el</groupId>
			      <artifactId>jboss-el</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>dom4j</groupId>
			      <artifactId>dom4j</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>javassist</groupId>
			      <artifactId>javassist</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>commons-collections</groupId>
			      <artifactId>commons-collections</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.seam</groupId>
			      <artifactId>jboss-seam-pdf</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>com.sun.facelets</groupId>
			      <artifactId>jsf-facelets</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>com.thoughtworks.xstream</groupId>
			      <artifactId>xstream</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>xpp3</groupId>
			      <artifactId>xpp3_min</artifactId>
			    </exclusion>
			  </exclusions>
			</dependency>

			<dependency>
			  <groupId>org.jboss.seam</groupId>
			  <artifactId>jboss-seam-debug</artifactId>
			  <version>${seam.version}</version>
			  <exclusions>
			    <exclusion>
			      <groupId>org.jboss.seam</groupId>
			      <artifactId>jboss-seam</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.seam</groupId>
			      <artifactId>jboss-seam-pdf</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.el</groupId>
			      <artifactId>jboss-el</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>javax.servlet</groupId>
			      <artifactId>servlet-api</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>javax.el</groupId>
			      <artifactId>el-api</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>com.sun.facelets</groupId>
			      <artifactId>jsf-facelets</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>commons-collections</groupId>
			      <artifactId>commons-collections</artifactId>
			    </exclusion>
			  </exclusions>
			</dependency>
			<dependency>
			  <groupId>org.jboss.seam</groupId>
			  <artifactId>jboss-seam-ui</artifactId>
			  <version>${seam.version}</version>
			  <exclusions>
			    <exclusion>
			      <groupId>commons-logging</groupId>
			      <artifactId>commons-logging</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.seam</groupId>
			      <artifactId>jboss-seam</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.el</groupId>
			      <artifactId>jboss-el</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.seam</groupId>
			      <artifactId>jboss-seam-jul</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>javax.servlet</groupId>
			      <artifactId>servlet-api</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>commons-beanutils</groupId>
			      <artifactId>commons-beanutils</artifactId>
			    </exclusion>
			    <exclusion>
			      <artifactId>commons-digester</artifactId>
			      <groupId>commons-digester</groupId>
			    </exclusion>
			  </exclusions>
			</dependency>

			<dependency>
			  <groupId>org.jboss.seam</groupId>
			  <artifactId>jboss-seam-pdf</artifactId>
			  <version>${seam.version}</version>
			  <exclusions>
			    <exclusion>
			      <groupId>org.jboss.seam</groupId>
			      <artifactId>jboss-seam</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.el</groupId>
			      <artifactId>jboss-el</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>com.lowagie</groupId>
			      <artifactId>itext</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>com.lowagie</groupId>
			      <artifactId>itext-rtf</artifactId>
			    </exclusion>
			  </exclusions>
			</dependency>

			<dependency>
			  <groupId>org.jboss.seam</groupId>
			  <artifactId>jboss-seam-mail</artifactId>
			  <version>${seam.version}</version>
			  <exclusions>
			    <exclusion>
			      <groupId>org.jboss.seam</groupId>
			      <artifactId>jboss-seam</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.el</groupId>
			      <artifactId>jboss-el</artifactId>
			    </exclusion>
			  </exclusions>
			</dependency>

			<dependency>
			  <groupId>org.jboss.seam</groupId>
			  <artifactId>jboss-seam-remoting</artifactId>
			  <version>${seam.version}</version>
			  <exclusions>
			    <exclusion>
			      <groupId>org.jboss.seam</groupId>
			      <artifactId>jboss-seam</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.el</groupId>
			      <artifactId>jboss-el</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>jboss</groupId>
			      <artifactId>javassist</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>javax.el</groupId>
			      <artifactId>el-api</artifactId>
			    </exclusion>
			    <exclusion>
			      <artifactId>dom4j</artifactId>
			      <groupId>dom4j</groupId>
			    </exclusion>
			  </exclusions>
			</dependency>

			<dependency>
			  <groupId>org.jboss.seam</groupId>
			  <artifactId>jboss-seam-ioc</artifactId>
			  <version>${seam.version}</version>
			  <exclusions>
			    <exclusion>
			      <groupId>org.jboss.seam</groupId>
			      <artifactId>jboss-seam</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.el</groupId>
			      <artifactId>jboss-el</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>javax.servlet</groupId>
			      <artifactId>servlet-api</artifactId>
			    </exclusion>
			  </exclusions>
			</dependency>

			<dependency>
			  <groupId>org.jboss.seam</groupId>
			  <artifactId>jboss-seam-resteasy</artifactId>
			  <version>${seam.version}</version>
			  <exclusions>
			    <exclusion>
			      <groupId>org.jboss.seam</groupId>
			      <artifactId>jboss-seam</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.el</groupId>
			      <artifactId>jboss-el</artifactId>
			    </exclusion>
			  </exclusions>
			</dependency>

			<dependency>
			  <groupId>org.jboss.seam</groupId>
			  <artifactId>jboss-seam-excel</artifactId>
			  <version>${seam.version}</version>
			  <exclusions>
			    <exclusion>
			      <groupId>org.jboss.seam</groupId>
			      <artifactId>jboss-seam</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.el</groupId>
			      <artifactId>jboss-el</artifactId>
			    </exclusion>
			  </exclusions>
			</dependency>

			<dependency>
			  <groupId>org.jboss.seam</groupId>
			  <artifactId>jboss-seam-jul</artifactId>
			  <version>${seam.version}</version>
			  <exclusions>
			    <exclusion>
			      <groupId>org.jboss.seam</groupId>
			      <artifactId>jboss-seam</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.jboss.el</groupId>
			      <artifactId>jboss-el</artifactId>
			    </exclusion>
			  </exclusions>
			</dependency>

			<dependency>
			    <groupId>org.jboss.seam.international</groupId>
			    <artifactId>seam-international</artifactId>
			    <version>${seam.international.version}</version>
			</dependency>

			<!-- Axis2 Dependencies	-->
			<!-- TODO Update to 1.3	or later breaks	webservice template code -->
			<dependency>
				<groupId>org.apache.axis2</groupId>
				<artifactId>axis2</artifactId>
				<version>${axis2.version}</version>
			</dependency>
			<dependency>
				<groupId>annogen</groupId>
				<artifactId>annogen</artifactId>
				<version>${annogen.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.neethi</groupId>
				<artifactId>neethi</artifactId>
				<version>${neethi.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<exclusion>
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.axiom</groupId>
				<artifactId>axiom-api</artifactId>
				<version>${axiom.api.version}</version>
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.axiom</groupId>
				<artifactId>axiom-impl</artifactId>
				<version>${axiom.impl.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.axiom</groupId>
				<artifactId>axiom-dom</artifactId>
				<version>${axiom.dom.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
				<version>${xml.apis.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis-ext</artifactId>
				<version>${xml.apis.version}</version>
			</dependency>
			<!-- batik avoid java.lang.NoClassDefFoundError: org/w3c/dom/ElementTraversal -->
			<dependency>
				<groupId>batik</groupId>
				<artifactId>batik-ext</artifactId>
				<version>${batik.ext.version}</version>
			</dependency>

	    <!-- Apache	CXF -->
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-api</artifactId>
		<version>${cxf.version}</version>
		<exclusions>
		    <exclusion>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-activation_1.1_spec</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-annotation_1.0_spec</artifactId>
		    </exclusion>
		</exclusions>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-bundle</artifactId>
		<version>${cxf.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-bundle-minimal</artifactId>
		<version>${cxf.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-common-schemas</artifactId>
		<version>${cxf.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-common-utilities</artifactId>
		<version>${cxf.version}</version>
		<exclusions>
		    <exclusion>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-annotation_1.0_spec</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-stax-api_1.0_spec</artifactId>
		    </exclusion>
		</exclusions>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-bindings-soap</artifactId>
		<version>${cxf.version}</version>
		<exclusions>
		    <exclusion>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		    </exclusion>
		</exclusions>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-bindings-xml</artifactId>
		<version>${cxf.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-core</artifactId>
		<version>${cxf.version}</version>
		<exclusions>
		    <exclusion>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-javamail_1.4_spec</artifactId>
		    </exclusion>
		</exclusions>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-databinding-jaxb</artifactId>
		<version>${cxf.version}</version>
		<exclusions>
		    <exclusion>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-activation_1.1_spec</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-javamail_1.4_spec</artifactId>
		    </exclusion>
		</exclusions>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-frontend-jaxws</artifactId>
		<version>${cxf.version}</version>
		<exclusions>
		    <exclusion>
			<groupId>javax.xml.soap</groupId>
			<artifactId>saaj-api</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jaxws_2.1_spec</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-ws-metadata_2.0_spec</artifactId>
		    </exclusion>
		</exclusions>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-frontend-simple</artifactId>
		<version>${cxf.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-transports-http</artifactId>
		<version>${cxf.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-transports-http-jetty</artifactId>
		<version>${cxf.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-ws-addr</artifactId>
		<version>${cxf.version}</version>
		<exclusions>
		    <exclusion>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-activation_1.1_spec</artifactId>
		    </exclusion>
		</exclusions>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-ws-security</artifactId>
		<version>${cxf.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-tools-common</artifactId>
		<version>${cxf.version}</version>
		<exclusions>
		    <exclusion>
			<groupId>javax.xml.soap</groupId>
			<artifactId>saaj-api</artifactId>
		    </exclusion>
		    <exclusion>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-ws-metadata_2.0_spec</artifactId>
		    </exclusion>
		</exclusions>
	    </dependency>
	    <!-- // Apache CXF -->

	    <!-- Apache	Shiro -->
	    <dependency>
		<groupId>org.apache.shiro</groupId>
		<artifactId>shiro-core</artifactId>
		<version>${shiro.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.shiro</groupId>
		<artifactId>shiro-guice</artifactId>
		<version>${shiro.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.shiro</groupId>
		<artifactId>shiro-web</artifactId>
		<version>${shiro.version}</version>
	    </dependency>
	    <!-- // Apache Shiro -->

	    <!-- BlaseDS/Flex -->
	    <dependency>
		<groupId>com.adobe.blazeds</groupId>
		<artifactId>blazeds-common</artifactId>
		<version>${blazeds.version}</version>
	    </dependency>
	    <dependency>
		<groupId>com.adobe.blazeds</groupId>
		<artifactId>blazeds-core</artifactId>
		<version>${blazeds.version}</version>
	    </dependency>
	    <dependency>
		<groupId>com.adobe.blazeds</groupId>
		<artifactId>blazeds-opt</artifactId>
		<version>${blazeds.version}</version>
	    </dependency>
	    <dependency>
		<groupId>com.adobe.blazeds</groupId>
		<artifactId>blazeds-proxy</artifactId>
		<version>${blazeds.version}</version>
	    </dependency>
	    <dependency>
		<groupId>com.adobe.blazeds</groupId>
		<artifactId>blazeds-remoting</artifactId>
		<version>${blazeds.version}</version>
	    </dependency>
	    <!--
	    <dependency>
		<groupId>com.adobe.flex.framework</groupId>
		<artifactId>flex-framework</artifactId>
		<version>${flex.sdk.version}</version>
		<type>pom</type>
	    </dependency>
	    <dependency>
		<groupId>com.adobe.flex.framework</groupId>
		<artifactId>halo</artifactId>
		<version>${flex.sdk.version}</version>
		<classifier>theme</classifier>
		<type>swc</type>
		<scope>theme</scope>
	    </dependency>
	    <dependency>
		<groupId>com.adobe.flexunit</groupId>
		<artifactId>flexunit</artifactId>
		<version>${flexunit.version}</version>
		<type>swc</type>
		<scope>test</scope>
	    </dependency>
	    <dependency>
		<groupId>com.ilog</groupId>
		<artifactId>ilog-elixir-enterprise</artifactId>
		<version>${ilog-elixir.version}</version>
		<classifier>en_US</classifier>
		<type>rb.swc</type>
	    </dependency>
	    <dependency>
		<groupId>com.ilog</groupId>
		<artifactId>ilog-elixir-enterprise</artifactId>
		<version>${ilog-elixir.version}</version>
		<type>swc</type>
	    </dependency>
	    -->
	    <!--
	    <dependency>
		<groupId>flexlib</groupId>
		<artifactId>flexlib</artifactId>
		<version>${flexlib.version}</version>
		<classifier>flex4</classifier>
		<type>swc</type>
	    </dependency>
	    -->
	    <!-- // BlaseDS/Flex -->

	    <!-- Caucho	Hessian	-->
	    <dependency>
		<groupId>com.caucho</groupId>
		<artifactId>hessian</artifactId>
		<version>${hessian.version}</version>
	    </dependency>
	    <!-- // Caucho Hessian -->

	    <!--
	    <dependency>
		<groupId>httpcomponents-httpcore</groupId>
		<artifactId>jakarta-httpcore</artifactId>
		<version>${jakarta.httpcore.version}</version>
		<scope>runtime</scope>
	    </dependency>
	    -->
	    <dependency>
		<groupId>org.apache.geronimo.specs</groupId>
		<artifactId>geronimo-jms_1.1_spec</artifactId>
		<version>${geronimo.jms.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <dependency>
		<groupId>org.apache.geronimo.specs</groupId>
		<artifactId>geronimo-j2ee_1.4_spec</artifactId>
		<version>${geronimo.j2ee.specs.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <dependency>
		<groupId>org.apache.geronimo.specs</groupId>
		<artifactId>geronimo-annotation_1.0_spec</artifactId>
		<version>${geronimo.annotation.spec.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <dependency>
		<groupId>org.apache.geronimo.specs</groupId>
		<artifactId>geronimo-ejb_2.1_spec</artifactId>
		<version>${geronimo.ejb.2.1.spec.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <dependency>
		<groupId>org.apache.geronimo.specs</groupId>
		<artifactId>geronimo-ejb_3.0_spec</artifactId>
		<version>${geronimo.ejb.3.0.spec.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <dependency>
		<groupId>org.apache.geronimo.specs</groupId>
		<artifactId>geronimo-activation_1.1_spec</artifactId>
		<version>${geronimo.activation.spec.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <dependency>
		<groupId>org.apache.geronimo.specs</groupId>
		<artifactId>geronimo-ws-metadata_2.0_spec</artifactId>
		<version>${geronimo.ws.metadata.spec.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <dependency>
		<groupId>org.apache.geronimo.specs</groupId>
		<artifactId>geronimo-jaxws_2.1_spec</artifactId>
		<version>${geronimo.jaxws.2.1.spec.version}</version>
		<scope>provided</scope>
	    </dependency>
	    <dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jaxws_2.2_spec</artifactId>
			<version>${geronimo.jaxws.2.2.spec.version}</version>
			<scope>provided</scope>
	    </dependency>
	    <dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_2.5_spec</artifactId>
			<version>${geronimo.servlet.2.5.spec.version}</version>
	    </dependency>
	    <dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_3.0_spec</artifactId>
			<version>${geronimo.servlet.3.0.spec.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.geronimo.specs</groupId>
		<artifactId>geronimo-stax-api_1.0_spec</artifactId>
		<version>${geronimo.stax.api.spec.version}</version>
		<scope>compile</scope>
	    </dependency>
	    <dependency>
		<groupId>stax</groupId>
		<artifactId>stax-api</artifactId>
		<version>${stax.api.version}</version>
		<scope>runtime</scope>
	    </dependency>
	    <dependency>
		<groupId>org.apache.woden</groupId>
		<artifactId>woden-impl-om</artifactId>
		<version>${woden.impl.om.version}</version>
		<scope>runtime</scope>
	    </dependency>
	    <dependency>
		<groupId>javax.xml.bind</groupId>
		<artifactId>jaxb-api</artifactId>
		<version>${jaxb.api.version}</version>
		<scope>compile</scope>
	    </dependency>
	    <dependency>
		<groupId>com.sun.xml.bind</groupId>
		<artifactId>jaxb-impl</artifactId>
		<version>${jaxb.impl.version}</version>
		<scope>compile</scope>
		<exclusions>
		    <exclusion>
			<groupId>javax.xml.stream</groupId>
			<artifactId>stax-api</artifactId>
		    </exclusion>
		</exclusions>
	    </dependency>
	    <dependency>
		<groupId>com.sun.xml.bind</groupId>
		<artifactId>jaxb-xjc</artifactId>
		<version>${jaxb.impl.version}</version>
	    </dependency>
	    <dependency>
		<groupId>wsdl4j</groupId>
		<artifactId>wsdl4j</artifactId>
		<version>${wsdl4j.version}</version>
		<scope>compile</scope>
	    </dependency>
	    <dependency>
		<groupId>org.codehaus.woodstox</groupId>
		<artifactId>wstx-asl</artifactId>
		<version>${wstx.asl.version}</version>
		<scope>compile</scope>
	    </dependency>
	    <dependency>
		<groupId>javax.xml.soap</groupId>
		<artifactId>saaj-api</artifactId>
		<version>${saaj.api.version}</version>
		<scope>compile</scope>
	    </dependency>
	    <dependency>
		<groupId>com.sun.xml.messaging.saaj</groupId>
		<artifactId>saaj-impl</artifactId>
		<version>${saaj.impl.version}</version>
		<scope>compile</scope>
	    </dependency>
	    <dependency>
		<groupId>org.apache.ws.commons.schema</groupId>
		<artifactId>XmlSchema</artifactId>
		<version>${xmlschema.version}</version>
		<scope>compile</scope>
	    </dependency>
	    <dependency>
		<groupId>xml-resolver</groupId>
		<artifactId>xml-resolver</artifactId>
		<version>${xml.resolver}</version>
		<scope>compile</scope>
	    </dependency>
	    <dependency>
		<groupId>com.sun.xml.fastinfoset</groupId>
		<artifactId>FastInfoset</artifactId>
		<version>${fastinfoset.version}</version>
		<scope>compile</scope>
	    </dependency>

	    <!-- WS Security -->
	    <dependency>
		<groupId>org.apache</groupId>
		<artifactId>xmlsec</artifactId>
		<version>${xmlsec.version}</version>
		<scope>compile</scope>
	    </dependency>
	    <dependency>
		<groupId>org.apache.ws.security</groupId>
		<artifactId>wss4j</artifactId>
		<version>${wss4j.version}</version>
		<scope>compile</scope>
	    </dependency>
	    <!--
	    <dependency>
		<groupId>com.adobe.flex.compiler</groupId>
		<artifactId>flex-messaging-common</artifactId>
		<version>${flex.messaging.common.version}</version>
	    </dependency>
	    -->
	    <dependency>
		<groupId>net.sf.json-lib</groupId>
		<artifactId>json-lib</artifactId>
		<version>${json.lib.version}</version>
		<classifier>jdk15</classifier>
	    </dependency>
	    <dependency>
		<groupId>net.sf.ezmorph</groupId>
		<artifactId>ezmorph</artifactId>
		<version>${ezmorph.version}</version>
	    </dependency>
	    <dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
	    </dependency>
	    <dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>${logback.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>log4j-over-slf4j</artifactId>
		<version>${slf4j.version}</version>
			<scope>runtime</scope>
	    </dependency>
	    <dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>jcl-over-slf4j</artifactId>
		<version>${slf4j.version}</version>
	    </dependency>
	    <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
	    </dependency>
	    <dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>${slf4j.version}</version>
	    </dependency>
	    <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
	    </dependency>
	    <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
	    </dependency>
	    <dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>${slf4j.version}</version>
		    <scope>runtime</scope>
	    </dependency>
	    <dependency>
		<groupId>org.apache.tomcat</groupId>
		<artifactId>catalina</artifactId>
		<version>${tomcat.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.tomcat</groupId>
		<artifactId>coyote</artifactId>
		<version>${tomcat.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.tomcat</groupId>
		<artifactId>jasper</artifactId>
		<version>${tomcat.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.tomcat.extras</groupId>
		<artifactId>juli-adapters</artifactId>
		<version>${tomcat.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.derby</groupId>
		<artifactId>derby</artifactId>
		<version>${derby.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.codehaus.plexus</groupId>
		<artifactId>plexus-utils</artifactId>
		<version>${plexus.util.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.codehaus.plexus</groupId>
		<artifactId>plexus-container-default</artifactId>
		<version>${plexus.container.default.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.maven</groupId>
		<artifactId>maven-plugin-api</artifactId>
		<version>${maven.plugin.api.plugin.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.maven</groupId>
		<artifactId>maven-archiver</artifactId>
		<version>${maven.archiver.plugin.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.maven</groupId>
		<artifactId>maven-artifact</artifactId>
		<version>${maven.artifact.plugin.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-dependency-plugin</artifactId>
		<version>${maven.dependency.plugin.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-war-plugin</artifactId>
		<version>${maven.war.plugin.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-jar-plugin</artifactId>
		<version>${maven.jar.plugin.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-assembly-plugin</artifactId>
		<version>${maven.assembly.plugin.version}</version>
	    </dependency>
	    <dependency>
		<groupId>org.apache.maven</groupId>
		<artifactId>maven-project</artifactId>
		<version>${maven.project.version}</version>
	    </dependency>

		<!-- 3rd Parties: Commercial 3rd parties -->
		<!-- 
		<dependency>
		    <groupId>com.tibco.tibjms</groupId>
		    <artifactId>tibjms</artifactId>
		    <version>${tibjms.version}</version>
		</dependency>		
		<dependency>
			<groupId>com.tibco</groupId>
			<artifactId>tibrv</artifactId>
			<version>${tibrv.version}</version>
		</dependency>
		<dependency>
			<groupId>com.tibco.tibrv</groupId>
			<artifactId>tibrv</artifactId>
			<version>${tibrv.version}</version>
		</dependency>
		<dependency>
		    <groupId>sybase</groupId>
		    <artifactId>jconnect</artifactId>
		    <version>${jconnect.version}</version>
		</dependency>
		-->
		<!-- //	3rd Parties -->

		<dependency>
		    <groupId>com.google.inject</groupId>
		    <artifactId>guice</artifactId>
		    <version>${guice.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.google.inject.extensions</groupId>
		    <artifactId>guice-assistedinject</artifactId>
		    <version>${guice.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.google.inject.extensions</groupId>
		    <artifactId>guice-grapher</artifactId>
		    <version>${guice.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.google.inject.extensions</groupId>
		    <artifactId>guice-jmx</artifactId>
		    <version>${guice.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.google.inject.extensions</groupId>
		    <artifactId>guice-jndi</artifactId>
		    <version>${guice.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.google.inject.extensions</groupId>
		    <artifactId>guice-multibindings</artifactId>
		    <version>${guice.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.google.inject.extensions</groupId>
		    <artifactId>guice-persist</artifactId>
		    <version>${guice.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.google.inject.extensions</groupId>
		    <artifactId>guice-servlet</artifactId>
		    <version>${guice.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.google.inject.extensions</groupId>
		    <artifactId>guice-spring</artifactId>
		    <version>${guice.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.google.inject.extensions</groupId>
		    <artifactId>guice-throwingproviders</artifactId>
		    <version>${guice.version}</version>
		</dependency>
		<!-- //	Guice -->

		<!-- Jackson -->
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-core-asl</artifactId>
		    <version>${jackson.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-jaxrs</artifactId>
		    <version>${jackson.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-mapper-asl</artifactId>
		    <version>${jackson.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-smile</artifactId>
		    <version>${jackson.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-xc</artifactId>
		    <version>${jackson.version}</version>
		</dependency>
		<!-- //	Jackson	-->

		<!-- Jersey -->
		<dependency>
		    <groupId>com.sun.jersey</groupId>
		    <artifactId>jersey-core</artifactId>
		    <version>${jersey.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.jersey</groupId>
		    <artifactId>jersey-json</artifactId>
		    <version>${jersey.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.jersey</groupId>
		    <artifactId>jersey-server</artifactId>
		    <version>${jersey.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.jersey.contribs</groupId>
		    <artifactId>jersey-guice</artifactId>
		    <version>${jersey.version}</version>
		</dependency>
		<!-- //	Jersey -->

		<!-- Jetty -->
		<dependency>
		    <groupId>org.mortbay.jetty</groupId>
		    <artifactId>jetty</artifactId>
		    <version>${jetty.version}</version>
		    <scope>runtime</scope>
		</dependency>
		<dependency>
		    <groupId>org.mortbay.jetty</groupId>
		    <artifactId>jetty-util</artifactId>
		    <version>${jetty.version}</version>
		    <scope>runtime</scope>
		</dependency>
		<dependency>
		    <groupId>org.mortbay.jetty</groupId>
		    <artifactId>start</artifactId>
		    <version>${jetty.version}</version>
		    <scope>runtime</scope>
		</dependency>
		<!-- //	Jetty -->

		<!-- //	Jetty7 -->
		<dependency>
		    <groupId>org.eclipse.jetty</groupId>
		    <artifactId>jetty-server</artifactId>
		    <version>${jetty7.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.eclipse.jetty</groupId>
		    <artifactId>jetty-servlet</artifactId>
		    <version>${jetty7.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.eclipse.jetty</groupId>
		    <artifactId>jetty-servlets</artifactId>
		    <version>${jetty7.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.eclipse.jetty</groupId>
		    <artifactId>jetty-websocket</artifactId>
		    <version>${jetty7.version}</version>
		</dependency>
		<!-- //	Jetty7 -->

		<!-- JTDS -->
		<dependency>
		    <groupId>net.sourceforge.jtds</groupId>
		    <artifactId>jtds</artifactId>
		    <version>${jtds.version}</version>
		</dependency>
		<!-- //	JTDS -->

		<!-- Misc -->
		<dependency>
		    <groupId>com.google.code.findbugs</groupId>
		    <artifactId>jsr305</artifactId>
		    <version>${jsr305.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>${guava.version}</version>
		</dependency>
		<!--
		<dependency>
		    <groupId>com.pmease</groupId>
		    <artifactId>xmt</artifactId>
		    <version>${xmt.version}</version>
		</dependency>
		-->
		<dependency>
		    <groupId>com.thoughtworks.xstream</groupId>
		    <artifactId>xstream</artifactId>
		    <version>${xstream.version}</version>
		</dependency>
		<!--
		<dependency>
		    <groupId>com.yourkit</groupId>
		    <artifactId>yjp-controller-api-redist</artifactId>
		    <version>${yourkit.version}</version>
		    <scope>test</scope>
		</dependency>
		-->
		<dependency>
		    <groupId>jaxen</groupId>
		    <artifactId>jaxen</artifactId>
		    <version>${jaxen.version}</version>
		</dependency>
		<dependency>
		    <groupId>joda-time</groupId>
		    <artifactId>joda-time</artifactId>
		    <version>${joda.time.version}</version>
		</dependency>
		<dependency>
		    <groupId>net.java.dev.stax-utils</groupId>
		    <artifactId>stax-utils</artifactId>
		    <version>${stax.util.version}</version>
		    <exclusions>
			<exclusion>
			    <groupId>com.bea.xml</groupId>
			    <artifactId>jsr173-ri</artifactId>
			</exclusion>
		    </exclusions>
		</dependency>
		<dependency>
		    <groupId>net.sf.opencsv</groupId>
		    <artifactId>opencsv</artifactId>
		    <version>${opencsv.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.neethi</groupId>
		    <artifactId>neethi</artifactId>
		    <version>${neethi.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.xmlgraphics</groupId>
		    <artifactId>fop</artifactId>
		    <version>${fop.version}</version>
		    <exclusions>
			<exclusion>
			    <groupId>xml-apis</groupId>
			    <artifactId>xml-apis</artifactId>
			</exclusion>
		    </exclusions>
		</dependency>
		<dependency>
		    <groupId>org.jdom</groupId>
		    <artifactId>jdom</artifactId>
		    <version>${jdom.version}</version>
		</dependency>
		<!--
		<dependency>
		    <groupId>jdom</groupId>--><!-- necessary to	force the relocation to	org.jdom --><!--
		    <artifactId>jdom</artifactId>
		    <version>${jdom.version}</version>
		</dependency>
		-->
		<dependency>
		    <groupId>org.jvnet.hudson</groupId>
		    <artifactId>jtidy</artifactId>
		    <version>${jtidy.version}</version>
		</dependency>
		<dependency>
		    <groupId>xpp3</groupId>
		    <artifactId>xpp3_min</artifactId>
		    <version>${xpp3_min.version}</version>
		</dependency>
		<!-- //	Misc -->
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>server-forge-release</id>
			<name>External Staging Repository</name>
			<url>dav:https://repository-nabla.forge.cloudbees.com/release</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>server-forge-snapshot</id>
			<name>External Snapshot Repository</name>
			<url>dav:https://repository-nabla.forge.cloudbees.com/snapshot</url>
			<layout>default</layout>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
				<checksumPolicy>ignore</checksumPolicy>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>server-forge-release</id>
			<url>dav:https://repository-nabla.forge.cloudbees.com/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
                <pluginRepository>
                        <id>cloudbees-public-release</id>
                        <url>http://repository-cloudbees.forge.cloudbees.com/public-release</url>
                        <snapshots>
                        	<enabled>false</enabled>
                        </snapshots>
                        <releases>
                        	<enabled>true</enabled>
                        </releases>
                </pluginRepository>
        </pluginRepositories>
</project>
