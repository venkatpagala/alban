package com.nabla.project.application.model.person.entity;


// Generated by MyEclipse Persistence Tools
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.Table;

/**
 * Address generated by MyEclipse Persistence Tools
 */
@SuppressWarnings( "serial" )
@Entity
@Table( name = "ADDRESS", schema = "", uniqueConstraints = 
{
}
 )
public class Address
    extends AbstractAddress
    implements java.io.Serializable
{
    // Constructors

    /** default constructor */
    public Address(  )
    {
    }

    /** minimal constructor */
    public Address( Long id, String adr1, String city, String code, String country )
    {
        super( id, adr1, city, code, country );
    }

    /** full constructor */
    public Address( Long id, String adr1, String adr2, String adr3, String cedex, String city, String code,
                    String country, /*Set<Person> persons*/
                    Person person )
    {
        //super(id, adr1, adr2, adr3, cedex, city, code, country, persons);
        super( id, adr1, adr2, adr3, cedex, city, code, country, person );
    }

    public Address( String adr1, String adr2, String adr3, String code, String city, String cedex, String country )
    {
        super(  );
        setAdr1( adr1 );
        setAdr2( adr2 );
        setAdr3( adr3 );
        setCode( code );
        setCity( city );
        setCedex( cedex );
        setCountry( country );
    }

    /*
    public void setPerson(Person person) {
    
            Set<Person> persons = new HashSet<Person>();
            persons.add(person);
            setPersons(persons);
    }
    */

    // toString
    public String toString(  )
    {
        return String.format( "A[%d,%s,%s,%s,%s,%s,%s,%s]",
                              getId(  ),
                              getAdr1(  ),
                              getAdr2(  ),
                              getAdr3(  ),
                              getCode(  ),
                              getCity(  ),
                              getCedex(  ),
                              getCountry(  ) );
    }
}
