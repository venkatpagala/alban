---
# This playbook contains common plays that will be run on all nodes.

- name: Update APT caches.
  apt: update_cache=yes cache_valid_time={{ apt_cache_valid_time }}
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  
- name: Update the configuration
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  template:
    src: etc_apt_apt.conf.d_10general.j2
    dest: /etc/apt/apt.conf.d/10general
    owner: root
    group: root
    mode: 0644
  
- name: Make sure the required packages are installed
  apt: pkg={{ item }} state=present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'    
  with_items:
    - python-apt
    - python-pycurl
    - unattended-upgrades

- name: Upgrade system
  apt: upgrade={{ apt_upgrade }}
  when: apt_upgrade == "safe" or apt_upgrade == "full" or apt_upgrade == "dist"  
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
#  ignore_errors: yes
  
- name: Checking if Sources are Available
  action: shell echo a$(cat /etc/apt/sources.list | grep $(echo   'http://url/{{ ansible_distribution }}/stable' | tr "[:upper:]" "[:lower:]"  ))
  register: sources
  ignore_errors: True
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  
- debug: msg="sources value is {{ sources.stdout }} "

- name: Adding source.
  action: shell echo "deb http://url/{{ ansible_distribution }}/stable      {{ ansible_lsb.codename }} main" | tr "[:upper:]" "[:lower:]" >> /etc/apt/sources.list
  when: "ansible_distribution == 'Debian' and sources.stdout == 'a'"  
#      when: "ansible_os_family == 'RedHat' and sources.stdout == 'a'"

# ansible
- name: Test ansible is installed
  shell: ansible --version
  register: ansible_is_installed
  ignore_errors: yes

- name: Run install script as sudo
  script: setup-ansible.sh
  sudo: yes
  when: "ansible_is_installed|failed and (ansible_distribution == 'Ubuntu' or ansible_distribution == 'CentOS')"
  register: ansible_init_used_sudo

- name: Run install script without sudo
  script: setup-ansible.sh
  when: ansible_is_installed|failed and ansible_init_used_sudo|skipped

- name: Test ansible is installed
  shell: ansible --version

- name: Install basic tools (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  tags: package  
  with_items:
   - wget
   - curl
   - nmap
   - ssh  
   - iotop
   - htop
   - iftop
   - monit   
   - sysstat
   - upstart
   - gksu
   
- name: Install editor tools (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  tags: package  
  with_items:   
   - apt-show-versions
   - vim
   - geany
   - gedit
   - xxdiff
#   - xxdiff-scripts
   - meld
   - dos2unix
   
- name: Install extra (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  tags: package  
  with_items:   
   - ubuntu-restricted-extras
#   - preload
   
#TO CHECK sudo aptitude install cowsay fortunes fortunes-fr

- name: Install cowsay (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  tags: package  
  with_items:   
   - aptitude
   - randomize-lines
   - cowsay 
   - fortunes 
   - fortunes-fr   
   
#TODO sudo apt-get remove whoopsie   

- name: Install perl (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  tags: package  
  with_items:
   - perl       
   - libnet-ssleay-perl
   - openssl
   - libauthen-pam-perl
   - libpam-runtime
   - libio-pty-perl

- name: Install python (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' 
  tags: package   
  with_items:
   - python
   - python-pip 
   - python-dev 
   - python-keyczar
   - python-setuptools
   - python-software-properties   
   - build-essential

#- name: Installing common packages.
#  apt: state=present pkg={{ item }}
#  with_items:
#  - libcap2-bin
#  - libssl-dev   
   
- name: Install SCM (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  tags: package  
  with_items:
   - subversion
   - cvs
   - git
#   - gitg
#   - gitk   
#   - mercurial   
 
#TODO use instead JDK for jenkins_slaves scripts
#- name: Install JDK (apt)
#  apt: pkg={{ item }} state=present update_cache=yes
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
#  tags: package
#  with_items:
#   - openjdk-6-jdk 
#   - openjdk-7-jdk

#sudo add-apt-repository ppa:webupd8team/java
#sudo apt-get update
#sudo apt-get install oracle-java7-installer
#sudo apt-get install oracle-java8-installer
#Switching between Oracle Java 8 and Java 7
#sudo update-java-alternatives -s java-7-oracle
#sudo update-java-alternatives -s java-8-oracle

#Setting Java environment variables
#sudo apt-get install oracle-java8-set-default    
      
- name: Install Java build tools (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  tags: package  
  with_items:
   - maven

- name: Install CPP build tools (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  tags: package  
  with_items:
   - cmake
   - scons
      
- name: Install test tools (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  tags: package  
  with_items:
   - xvfb
      
- name: Copy the xvfb init script
  copy: src=xvfb-{{ ansible_distribution }}-{{ ansible_architecture }}.sh dest=/etc/init.d/xvfb mode=0755
  tags: configure
  
- name: Start the xvfb service
  service: name=xvfb state=started enabled=true
  tags: service  
        
- name: Install AWS tools (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  tags: package  
  with_items:
   - ec2-api-tools    
   - s3cmd
 
#- name: Install virtualbox (apt)
#  apt: pkg={{ item }} state=present update_cache=yes
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
#  tags: package  
#  with_items:   
#   - virtualbox-4.3
#   - vagrant
   
- name: Install messagingg (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  tags: package    
  with_items:   
   - pidgin 
   - pidgin-sipe 
   - pidgin-skype  
#   - teamviewer

- name: Install VNC (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  
  tags: package    
  with_items:   
   - vnc4server   

- name: Install ZFS repo (apt)
  apt_repository: repo={{ item }} update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'    
  with_items: 
     - ppa:zfs-native/stable
     - ppa:zfs-native/grub
     
#- name: Install ZFS (apt)
#  apt: pkg={{ item }} state=present update_cache=yes
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'    
#  with_items:
#     - debootstrap 
#     - zfs-initramfs
#     - zfsutils
#     - ubuntu-zfs
#     - zfs-fuse
#     - grub2-common 
#     - grub-pc
#     - zfs-dkms

#sudo apt-get install --no-install-recommends linux-image-generic linux-headers-generic
       
#below it can be customized
- name: Append additional sources (apt)
  apt_repository: repo={{ item }} update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'    
  with_items: apt_repositories

- name: Install additional packages (apt)
  apt: pkg={{item}}
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'       
  when: apt_install_packages 
  with_items: apt_install_packages_list  
