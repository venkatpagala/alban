<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>com.nabla.project.servers.sample</groupId>
		<artifactId>sample</artifactId>
		<version>1.0.1-SNAPSHOT</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<!--<groupId>com.nabla.project.servers.sample</groupId> -->
	<artifactId>jsf-simple</artifactId>
	<packaging>war</packaging>
	<!--<version>1.0</version> -->
	<name>Java Server Faces Maven Webapp</name>

	<dependencies>

		<!-- http://download.java.net/maven/2 -->
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>${sun.jsf.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>${sun.jsf.version}</version>
		</dependency>

		<!-- http://repo1.maven.org/maven -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet.api.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp-api.version}</version>
		</dependency>

		<dependency>
			<groupId>com.sun.el</groupId>
			<artifactId>el-ri</artifactId>
			<version>${el.ri.version}</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<!-- 
		<dependency>
			<groupId>org.seleniumhq.selenium.client-drivers</groupId>
			<artifactId>selenium-java-client-driver</artifactId>
			<version>${selenium.java.client.driver.version}</version>
			<scope>test</scope>
		</dependency>
		 -->

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>
		</dependency>		
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-remote-driver</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>	
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-firefox-driver</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>	
		</dependency>                  
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-api</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>	
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-support</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>	
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-safari-driver</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>	
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-iphone-driver</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>	
		</dependency>						                        		
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-ie-driver</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>	
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-htmlunit-driver</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>	
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-android-driver</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>	
		</dependency>					
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-chrome-driver</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-server</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>welcome</finalName>

		<!-- TOSEE http://blog.xebia.fr/2010/01/13/comment-separer-ses-tests-dintegrations/ -->

		<plugins>
			<!--
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId>
				<version>${maven.selenium.plugin.version}</version>
				<configuration>
					<browser>*firefox</browser>
					<suite>src/test/selenium/SimpleSTestSuite.html</suite>
					<startURL>http://${cargo.host}:${cargo.port}</startURL>
				</configuration>
				-->
				<!-- 				
				<executions>
					<execution>
						<id>xvfb</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>xvfb</goal>
						</goals>
						<configuration> 
							<display>:99</display> 
						</configuration> 
					</execution>

					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start-server</goal>
						</goals>
						<configuration>
							<background>true</background>
						</configuration>
					</execution>
					<execution>
						<id>run-selenium-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>selenese</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-selenium</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop-server</goal>
						</goals>
					</execution>
					
				</executions>
			-->				
			<!--
			</plugin>
			-->

			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<extensions>true</extensions>
				<executions>
					<execution>
						<goals>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<sources>
								<fileset>
									<directory>${basedir}/src/test/groovy</directory>
									<includes>
										<include>**/*.groovy</include>
									</includes>
								</fileset>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${maven.test.skip}</skipTests>
					<testFailureIgnore>${maven.test.failure.skip}</testFailureIgnore>
					<testSourceDirectory>${basedir}/src/test/groovy</testSourceDirectory>
					<excludes>
						<exclude>**/*ITest*</exclude>
						<exclude>**/*STest*</exclude>
					</excludes>
					<systemPropertyVariables>
						<webdriver.chrome.driver>${webdriver.chrome}</webdriver.chrome.driver>						
            					<webdriver.safari.noinstall>true</webdriver.safari.noinstall>
        				</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<id>surefire-itest</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>none</exclude>
							</excludes>
							<includes>
								<include>**/*ITest*</include>
								<include>**/*STest*</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

<!--
<plugin>
  <artifactId>maven-dependency-plugin</artifactId>
  <executions>
    <execution>
      <id>unpack</id>
      <phase>pre-integration-test</phase>
      <goals>
        <goal>unpack</goal>
      </goals>
      <configuration>
        <artifactItems>
          <artifactItem>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-dist</artifactId>
            <version>${jboss.version}</version>
            <type>zip</type>
            <overWrite>false</overWrite>
            <outputDirectory>${project.build.directory}</outputDirectory>
          </artifactItem>
        </artifactItems>
      </configuration>
    </execution>
  </executions>
</plugin>
-->
			<!-- for automatic running of integration tests with Jetty -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>${maven.cargo.maven2.plugin.version}</version>
				<configuration>
					<wait>${cargo.wait}</wait>
					<container>
						<timeout>180000</timeout> <!-- 5 minutes -->
						<!--<containerId>${cargo.container}</containerId> -->
						<!--<type>${cargo.container.type}</type> -->
					</container>				
					<configuration>
						<!--<type>${cargo.configuration.type}</type>-->
						<!--<home>${project.build.directory}/cargo/installs/jboss-as-dist-7.1.1.Final/jboss-as-7.1.1.Final/standalone/</home>-->
						<properties>
							<cargo.hostname>${cargo.host}</cargo.hostname>
							<cargo.servlet.port>${cargo.port}</cargo.servlet.port>
							<cargo.tomcat.manager.url>${deploy.url}</cargo.tomcat.manager.url>
							<cargo.remote.username>${cargo.remote.user}</cargo.remote.username>
							<cargo.remote.password>${cargo.remote.password}</cargo.remote.password>
							<cargo.logging>high</cargo.logging>
							<!-- <cargo.jvmargs> -Dnabla.config=${basedir}/src/main/resources 
								-Dnabla.data=${basedir}/src/test/resources/data -->
							<!-- -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 -->
							<!-- </cargo.jvmargs> -->
						</properties>
					</configuration>
					<deployables>
						<deployable>
							<groupId>com.nabla.project.servers.sample</groupId>
							<artifactId>jsf-simple</artifactId>
							<type>war</type>
							<properties>
								<context>/welcome</context>
							</properties>
							<pingURL>http://${cargo.host}:${cargo.port}/welcome</pingURL>
							<pingTimeout>60000</pingTimeout>
						</deployable>
					</deployables>     
				</configuration>

				<executions>
					<execution>
						<id>start-container</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-container</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
			<!-- Allow this web application to be started with the command : 'mvn jetty:run-war' -->
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<configuration>
					<webAppConfig>
						<contextPath>/welcome</contextPath>
					</webAppConfig>
					<useTestClasspath>true</useTestClasspath>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>${jetty.port}</port>
							<maxIdleTime>600000</maxIdleTime>
						</connector>
					</connectors>
			<!--
			<systemProperties>
				<systemProperty>
					<key>nabla.config</key>
					<value>../../config/dev</value>
				</systemProperty>
				<systemProperty>
					<key>nabla.data</key>
					<value>${data.dir}</value>
				</systemProperty>
			</systemProperties>
			-->
				</configuration>
			</plugin>

			<!-- Allow this web application to be started with the command : 'mvn 
				tomcat7:run' -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<configuration>
					<!-- http port -->
					<port>${tomcat.port}</port>
					<path>/welcome</path>
					<!--<contextFile>${basedir}/src/main/webapp/META-INF/context.xml</contextFile> -->
					<addWarDependenciesInClassloader>true</addWarDependenciesInClassloader>
	        <!--
	        <systemProperties>
	            <java.security.auth.login.config>${basedir}/conf/jaas.config</java.security.auth.login.config>
	        </systemProperties>
	        -->
					<url>${deploy.url}</url>
					<username>${cargo.remote.user}</username>
					<password>${cargo.remote.password}</password>
					<addContextWarDependencies>true</addContextWarDependencies>
					<addWarDependenciesInClassloader>true</addWarDependenciesInClassloader>
					<!--<configurationDir>${basedir}</configurationDir>-->
					<server>nabla-tomcat</server>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.nabla.project.servers.sample</groupId>
						<artifactId>jsf-simple</artifactId>
						<version>${project.version}</version>
						<type>war</type>
					</dependency>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.client.artifactId}</artifactId>
						<version>${jdbc.version}</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>		
	
</project>
 
