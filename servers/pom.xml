<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>com.nabla.project</groupId>
		<artifactId>main</artifactId>
		<version>1.0</version>
		<relativePath>../main/pom.xml</relativePath>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.nabla.project</groupId>
	<artifactId>servers</artifactId>
	<name>Servers</name>
	<version>1.0</version>
	<packaging>pom</packaging>
	<description>The Servers pom file is a superpom to centralize all third parties</description>

	<scm>
		<connection>scm:svn:http://alban.googlecode.com/svn/${project.svn.path}/servers</connection>
		<developerConnection>scm:svn:https://alban.googlecode.com/svn/${project.svn.path}/servers</developerConnection>
		<url>https://alban.googlecode.com/svn/${project.svn.path}/servers</url>
		<tag>HEAD</tag>
	</scm>
	
	<build>
		<pluginManagement>
			<plugins>

				<!-- Web application server helpers -->
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${maven.cargo.maven2.plugin.version}</version>
					<configuration>
						<wait>${cargo.wait}</wait>
						<container>
							<containerId>${cargo.container}</containerId>
							<type>installed</type>
							<home>${cargo.container.home}</home>
							<!--
							<zipUrlInstaller>
								<url>${cargo.container.url}</url>
								<installDir>${installDir}</installDir>
							</zipUrlInstaller>
							-->
						</container>
						<configuration>
							<type>standalone</type>
							<!--<home>${project.build.directory}/${cargo.container}/container</home> -->
							<properties>
								<cargo.hostname>${cargo.host}</cargo.hostname>
								<cargo.servlet.port>${cargo.port}</cargo.servlet.port>
							</properties>
						</configuration>
					</configuration>
					<executions>
						<execution>
							<id>start-container</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>stop-container</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>${maven.jetty.plugin.version}</version>
					<configuration>
						<contextPath>/</contextPath>
						<scanIntervalSeconds>3</scanIntervalSeconds>
						<scanTargetPatterns>
							<scanTargetPattern>
								<directory>src/main/webapp/WEB-INF</directory>
								<excludes>
									<exclude>**/*.jsp</exclude>
								</excludes>
								<includes>
									<include>**/*.properties</include>
									<include>**/*.xml</include>
								</includes>
							</scanTargetPattern>
						</scanTargetPatterns>
					</configuration>
				</plugin>
				<!-- end Web application server helpers -->

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jboss-packaging-maven-plugin</artifactId>
					<version>${maven.jboss.packaging.plugin.version}</version>
					<!-- Enable packaging types and lifecycle bindings. -->
					<extensions>true</extensions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jboss-maven-plugin</artifactId>
					<version>${maven.jboss.plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>

		<profile>
			<id>sonar</id>
			<activation>
				<property>
					<name>!profile.activation</name>
				</property>
			</activation>
			<properties>
				<!-- sonar user admin password admin -->
				<sonar.jdbc.url>jdbc:derby://localhost:${sonar.derby.port}/sonar;create=true</sonar.jdbc.url>
				<sonar.jdbc.driver>org.apache.derby.jdbc.ClientDriver</sonar.jdbc.driver>
				<sonar.jdbc.defaultTransactionIsolation>1</sonar.jdbc.defaultTransactionIsolation>
				<!--
					<sonar.jdbc.url>jdbc:mysql://localhost:3306/sonar</sonar.jdbc.url>
					<sonar.jdbc.driver>com.mysql.jdbc.Driver</sonar.jdbc.driver>
				-->
				<sonar.jdbc.username>sonar</sonar.jdbc.username>
				<sonar.jdbc.password>sonar</sonar.jdbc.password>
				<!--
					La ligne ci-dessous n'est utile que si le port par defaut (9000)
					est modifie dans le fichier de configuration.
				-->
				<sonar.host.url>http://localhost:${sonar.port}</sonar.host.url>
				<!--<sonar.host.url>http://localhost:8080/sonar/</sonar.host.url> -->
			</properties>
		</profile>

		<!-- ================= START Container Profiles ================= -->
		<profile>
			<id>jboss</id>
			<activation>
				<property>
					<name>!profile.activation</name>
				</property>
			</activation>
			<properties>
				<!-- START INFO USE BY MDA -->
				<jboss.home>${env.JBOSS_HOME}</jboss.home>
				<server.home>${jboss.home}</server.home>
				<server.name>${product.name}</server.name>
				<server.port>8180</server.port>
				<dataSource.name>jdbc/${application.id}</dataSource.name>
				<dataSource>java:/${dataSource.name}</dataSource>

				<!-- Change this to the host on which your webservice will be deployed -->
				<webservice.host>localhost</webservice.host>
				<!-- Change this the port on which your webservice will be deploy -->
				<webservice.port>8180</webservice.port>

				<!-- END INFO USE BY MDA -->
				<cargo.container>jboss4x</cargo.container>
				<cargo.container.home>${env.JBOSS_HOME}</cargo.container.home>
				<cargo.container.url>http://easynews.dl.sourceforge.net/sourceforge/jboss/jboss-${jboss.version}.zip</cargo.container.url>
				<cargo.host>localhost</cargo.host>
				<cargo.port>8180</cargo.port>
				<cargo.wait>false</cargo.wait>
			</properties>

			<dependencies>
				<dependency>
					<groupId>httpunit</groupId>
					<artifactId>httpunit</artifactId>
					<scope>test</scope>
				</dependency>

				<dependency>
					<groupId>jboss</groupId>
					<artifactId>jboss-j2ee</artifactId>
					<version>${jboss.version}</version>
					<scope>provided</scope>
				</dependency>
				<!--
				<dependency>
					<groupId>org.jbpm.jbpm3</groupId>
					<artifactId>jbpm-jpdl</artifactId>
					<version>${jbpm.version}</version>
				</dependency>
				<dependency>
					<groupId>org.jbpm.jbpm3</groupId>
					<artifactId>jbpm-identity</artifactId>
					<version>${jbpm.version}</version>
				</dependency>
				-->
			</dependencies>
		</profile>
		<profile>
			<id>jetty6</id>
			<properties>
				<cargo.container>jetty6x</cargo.container>
				<cargo.container.url>http://dist.codehaus.org/jetty/jetty-6.1.21/jetty-6.1.21.zip</cargo.container.url>
			</properties>
		</profile>
		<profile>
			<id>tomcat7x</id>
			<properties>
				<cargo.container>tomcat5x</cargo.container>
				<cargo.container.home>${env.CATALINA_HOME}</cargo.container.home>
				<cargo.container.url>http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.16/bin/apache-tomcat-7.0.16.zip</cargo.container.url>
				<cargo.host>localhost</cargo.host>
				<cargo.port>8070</cargo.port>
				<cargo.wait>false</cargo.wait>
			</properties>
		</profile>
		<profile>
			<id>tomcat6x</id>
			<properties>
				<cargo.container>tomcat6x</cargo.container>
				<cargo.container.home>${env.CATALINA_HOME}</cargo.container.home>
				<cargo.container.url>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.20/bin/apache-tomcat-6.0.20.zip</cargo.container.url>
				<cargo.host>localhost</cargo.host>
				<cargo.port>8070</cargo.port>
				<cargo.wait>false</cargo.wait>
			</properties>
		</profile>
		<profile>
			<id>glassfish</id>
			<properties>
				<!--<glassfish.home>${env.J2EE_HOME}</glassfish.home> -->
				<glassfish.home>C:/Sun/SDK</glassfish.home>
				<server.home>${glassfish.home}</server.home>
				<cargo.container>glassfish3x</cargo.container>
				<cargo.container.home>${server.home}</cargo.container.home>
				<cargo.container.url>http://download.java.net/glassfish/3.1.1/release/glassfish-3.1.1.zip</cargo.container.url>
				<cargo.host>localhost</cargo.host>
				<cargo.port>${glassfish.port}</cargo.port>
				<cargo.wait>false</cargo.wait>
			</properties>
		</profile>
		<!-- ================= END Container Profiles ================= -->

	</profiles>

</project>
